error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:7:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/manual_find_map.rs:7:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_find_map.rs:7:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:40:1
   |
LL | fn simple_equal() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_find_map.rs:40:1
   |
LL | fn simple_equal() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_find_map.rs:40:1
   |
LL | fn simple_equal() {
   | ^

error: references are not allowed
  --> tests/ui/manual_find_map.rs:43:12
   |
LL |     iter::<&Option<u8>>().find(|x| x.is_some()).map(|x| x.unwrap());
   |            ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:45:12
   |
LL |     iter::<&&Option<u8>>().find(|x| x.is_some()).map(|x| x.unwrap());
   |            ^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:45:13
   |
LL |     iter::<&&Option<u8>>().find(|x| x.is_some()).map(|x| x.unwrap());
   |             ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:47:19
   |
LL |     iter::<Option<&u8>>().find(|x| x.is_some()).map(|x| x.cloned().unwrap());
   |                   ^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:49:12
   |
LL |     iter::<&Option<&u8>>().find(|x| x.is_some()).map(|x| x.cloned().unwrap());
   |            ^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:49:20
   |
LL |     iter::<&Option<&u8>>().find(|x| x.is_some()).map(|x| x.cloned().unwrap());
   |                    ^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:51:12
   |
LL |     iter::<&Option<String>>().find(|x| x.is_some()).map(|x| x.as_deref().unwrap());
   |            ^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:53:19
   |
LL |     iter::<Option<&String>>().find(|&x| to_ref(x).is_some()).map(|y| to_ref(y).cloned().unwrap());
   |                   ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:58:12
   |
LL |     iter::<&Result<u8, ()>>().find(|x| x.is_ok()).map(|x| x.unwrap());
   |            ^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:60:12
   |
LL |     iter::<&&Result<u8, ()>>().find(|x| x.is_ok()).map(|x| x.unwrap());
   |            ^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:60:13
   |
LL |     iter::<&&Result<u8, ()>>().find(|x| x.is_ok()).map(|x| x.unwrap());
   |             ^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:62:19
   |
LL |     iter::<Result<&u8, ()>>().find(|x| x.is_ok()).map(|x| x.cloned().unwrap());
   |                   ^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:64:12
   |
LL |     iter::<&Result<&u8, ()>>().find(|x| x.is_ok()).map(|x| x.cloned().unwrap());
   |            ^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:64:20
   |
LL |     iter::<&Result<&u8, ()>>().find(|x| x.is_ok()).map(|x| x.cloned().unwrap());
   |                    ^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:66:12
   |
LL |     iter::<&Result<String, ()>>().find(|x| x.is_ok()).map(|x| x.as_deref().unwrap());
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:68:19
   |
LL |     iter::<Result<&String, ()>>().find(|&x| to_ref(x).is_ok()).map(|y| to_ref(y).cloned().unwrap());
   |                   ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:72:1
   |
LL | fn no_lint() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_find_map.rs:72:1
   |
LL | fn no_lint() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_find_map.rs:72:1
   |
LL | fn no_lint() {
   | ^

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:86:1
   |
LL | fn iter<T>() -> impl Iterator<Item = T> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_find_map.rs:86:1
   |
LL | fn iter<T>() -> impl Iterator<Item = T> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_find_map.rs:86:1
   |
LL | fn iter<T>() -> impl Iterator<Item = T> {
   | ^

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:90:1
   |
LL | fn to_opt<T>(_: T) -> Option<T> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_find_map.rs:90:1
   |
LL | fn to_opt<T>(_: T) -> Option<T> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_find_map.rs:90:1
   |
LL | fn to_opt<T>(_: T) -> Option<T> {
   | ^

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:94:1
   |
LL | fn to_res<T>(_: T) -> Result<T, ()> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_find_map.rs:94:1
   |
LL | fn to_res<T>(_: T) -> Result<T, ()> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_find_map.rs:94:1
   |
LL | fn to_res<T>(_: T) -> Result<T, ()> {
   | ^

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:98:1
   |
LL | fn to_ref<'a, T>(_: T) -> &'a T {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_find_map.rs:98:1
   |
LL | fn to_ref<'a, T>(_: T) -> &'a T {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_find_map.rs:98:1
   |
LL | fn to_ref<'a, T>(_: T) -> &'a T {
   | ^

error: references are not allowed
  --> tests/ui/manual_find_map.rs:98:27
   |
LL | fn to_ref<'a, T>(_: T) -> &'a T {
   |                           ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:102:1
   |
LL | struct Issue8920<'a> {
   | ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/manual_find_map.rs:105:23
   |
LL |     ref_field: Option<&'a usize>,
   |                       ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_find_map.rs:108:1
   |
LL | fn issue_8920() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_find_map.rs:108:1
   |
LL | fn issue_8920() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_find_map.rs:108:1
   |
LL | fn issue_8920() {
   | ^

error: references are not allowed
  --> tests/ui/manual_find_map.rs:112:25
   |
LL |         ref_field: Some(&1),
   |                         ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 40 previous errors

