error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/collapsible_match2.rs:9:1
   |
LL | fn lint_cases(opt_opt: Option<Option<u32>>, res_opt: Result<Option<u32>, String>) {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/collapsible_match2.rs:9:1
   |
LL | fn lint_cases(opt_opt: Option<Option<u32>>, res_opt: Result<Option<u32>, String>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/collapsible_match2.rs:9:1
   |
LL | fn lint_cases(opt_opt: Option<Option<u32>>, res_opt: Result<Option<u32>, String>) {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/collapsible_match2.rs:9:15
   |
LL | fn lint_cases(opt_opt: Option<Option<u32>>, res_opt: Result<Option<u32>, String>) {
   |               ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: parameter must be `mut`
  --> tests/ui/collapsible_match2.rs:9:45
   |
LL | fn lint_cases(opt_opt: Option<Option<u32>>, res_opt: Result<Option<u32>, String>) {
   |                                             ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/collapsible_match2.rs:33:9
   |
LL |         macro_rules! mac {
   |         ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/collapsible_match2.rs:53:16
   |
LL |     match Some(&[1]) {
   |                ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/collapsible_match2.rs:63:16
   |
LL |     match Some(&[1]) {
   |                ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: `ref` is not allowed, as it binds by reference
  --> tests/ui/collapsible_match2.rs:64:14
   |
LL |         Some(ref s) => match s {
   |              ^^^^^

error: item must be `pub`
  --> tests/ui/collapsible_match2.rs:73:1
   |
LL | fn no_lint() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/collapsible_match2.rs:73:1
   |
LL | fn no_lint() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/collapsible_match2.rs:73:1
   |
LL | fn no_lint() {
   | ^

error: item must be `pub`
  --> tests/ui/collapsible_match2.rs:84:1
   |
LL | fn make<T>() -> T {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/collapsible_match2.rs:84:1
   |
LL | fn make<T>() -> T {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/collapsible_match2.rs:84:1
   |
LL | fn make<T>() -> T {
   | ^

error: item must be `pub`
  --> tests/ui/collapsible_match2.rs:88:1
   |
LL | fn foo<T, U>(t: T) -> U {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/collapsible_match2.rs:88:1
   |
LL | fn foo<T, U>(t: T) -> U {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/collapsible_match2.rs:88:1
   |
LL | fn foo<T, U>(t: T) -> U {
   | ^

error: parameter must be `mut`
  --> tests/ui/collapsible_match2.rs:88:14
   |
LL | fn foo<T, U>(t: T) -> U {
   |              ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/collapsible_match2.rs:92:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/collapsible_match2.rs:92:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/collapsible_match2.rs:92:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 21 previous errors

