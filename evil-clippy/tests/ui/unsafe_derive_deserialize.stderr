error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:4:1
   |
LL | extern crate serde;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:8:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:8:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: requested on the command line with `-D clippy::missing-mut`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:8:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:8:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:8:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:8:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:8:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:11:1
   |
LL | impl A {
   | ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:12:23
   |
LL |     pub unsafe fn new(_a: i32, _b: i32) -> Self {
   |                       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:12:32
   |
LL |     pub unsafe fn new(_a: i32, _b: i32) -> Self {
   |                                ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:17:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:17:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:17:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:17:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:17:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:17:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:17:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:20:1
   |
LL | impl B {
   | ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:21:34
   |
LL |     pub unsafe fn unsafe_method(&self) {}
   |                                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:21:33
   |
LL |     pub unsafe fn unsafe_method(&self) {}
   |                                 ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:24:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:24:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:24:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:24:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:24:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:24:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:24:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:27:1
   |
LL | impl C {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:28:9
   |
LL |     pub fn unsafe_block(&self) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:28:9
   |
LL |     pub fn unsafe_block(&self) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:28:26
   |
LL |     pub fn unsafe_block(&self) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:28:25
   |
LL |     pub fn unsafe_block(&self) {
   |                         ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:33:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:33:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:33:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:33:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:33:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:33:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:33:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:36:1
   |
LL | impl D {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:37:9
   |
LL |     pub fn inner_unsafe_fn(&self) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:37:9
   |
LL |     pub fn inner_unsafe_fn(&self) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:37:29
   |
LL |     pub fn inner_unsafe_fn(&self) {
   |                             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:37:28
   |
LL |     pub fn inner_unsafe_fn(&self) {
   |                            ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:38:9
   |
LL |         unsafe fn inner() {}
   |         ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:44:1
   |
LL | impl E {
   | ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:45:23
   |
LL |     pub unsafe fn new(_a: i32, _b: i32) -> Self {
   |                       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:45:32
   |
LL |     pub unsafe fn new(_a: i32, _b: i32) -> Self {
   |                                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:49:34
   |
LL |     pub unsafe fn unsafe_method(&self) {}
   |                                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:49:33
   |
LL |     pub unsafe fn unsafe_method(&self) {}
   |                                 ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:51:9
   |
LL |     pub fn unsafe_block(&self) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:51:9
   |
LL |     pub fn unsafe_block(&self) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:51:26
   |
LL |     pub fn unsafe_block(&self) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:51:25
   |
LL |     pub fn unsafe_block(&self) {
   |                         ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:55:9
   |
LL |     pub fn inner_unsafe_fn(&self) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:55:9
   |
LL |     pub fn inner_unsafe_fn(&self) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:55:29
   |
LL |     pub fn inner_unsafe_fn(&self) {
   |                             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:55:28
   |
LL |     pub fn inner_unsafe_fn(&self) {
   |                            ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:56:9
   |
LL |         unsafe fn inner() {}
   |         ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:61:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:61:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:61:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:61:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:61:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:61:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:61:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:66:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:66:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:66:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:66:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:66:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:66:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:66:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:68:1
   |
LL | impl G {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:69:9
   |
LL |     pub fn unsafe_block(&self) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:69:9
   |
LL |     pub fn unsafe_block(&self) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:69:26
   |
LL |     pub fn unsafe_block(&self) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:69:25
   |
LL |     pub fn unsafe_block(&self) {
   |                         ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:76:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:76:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:76:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:76:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:76:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:76:7
   |
LL | #[derive(Deserialize)]
   |       ^  ----------- in this derive macro expansion
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:76:10
   |
LL | #[derive(Deserialize)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:78:1
   |
LL | impl H {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:79:9
   |
LL |     pub fn unsafe_block(&self) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:79:9
   |
LL |     pub fn unsafe_block(&self) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/unsafe_derive_deserialize.rs:79:26
   |
LL |     pub fn unsafe_block(&self) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unsafe_derive_deserialize.rs:79:25
   |
LL |     pub fn unsafe_block(&self) {
   |                         ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/unsafe_derive_deserialize.rs:84:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:84:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unsafe_derive_deserialize.rs:84:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 147 previous errors

