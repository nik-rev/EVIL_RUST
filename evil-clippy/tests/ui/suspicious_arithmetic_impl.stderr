error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:8:1
   |
LL | struct Foo(u32);
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:7:10
   |
LL | #[derive(Copy, Clone)]
   |          ^

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:7:16
   |
LL | #[derive(Copy, Clone)]
   |                ^

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:7:13
   |
LL | #[derive(Copy, Clone)]
   |             ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:7:13
   |
LL | #[derive(Copy, Clone)]
   |             ^  ----- in this derive macro expansion
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:7:16
   |
LL | #[derive(Copy, Clone)]
   |                ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/suspicious_arithmetic_impl.rs:7:16
   |
LL | #[derive(Copy, Clone)]
   |                ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:10:1
   |
LL | impl Add for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:13:5
   |
LL |     fn add(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:13:5
   |
LL |     fn add(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:13:12
   |
LL |     fn add(self, other: Self) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:13:18
   |
LL |     fn add(self, other: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:19:1
   |
LL | impl AddAssign for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:20:5
   |
LL |     fn add_assign(&mut self, other: Foo) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:20:5
   |
LL |     fn add_assign(&mut self, other: Foo) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:20:24
   |
LL |     fn add_assign(&mut self, other: Foo) {
   |                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:20:30
   |
LL |     fn add_assign(&mut self, other: Foo) {
   |                              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/suspicious_arithmetic_impl.rs:20:19
   |
LL |     fn add_assign(&mut self, other: Foo) {
   |                   ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:26:1
   |
LL | impl BitOrAssign for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:27:5
   |
LL |     fn bitor_assign(&mut self, other: Foo) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:27:5
   |
LL |     fn bitor_assign(&mut self, other: Foo) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:27:26
   |
LL |     fn bitor_assign(&mut self, other: Foo) {
   |                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:27:32
   |
LL |     fn bitor_assign(&mut self, other: Foo) {
   |                                ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/suspicious_arithmetic_impl.rs:27:21
   |
LL |     fn bitor_assign(&mut self, other: Foo) {
   |                     ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: variable must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:28:13
   |
LL |         let idx = other.0;
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:33:1
   |
LL | impl MulAssign for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:34:5
   |
LL |     fn mul_assign(&mut self, other: Foo) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:34:5
   |
LL |     fn mul_assign(&mut self, other: Foo) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:34:24
   |
LL |     fn mul_assign(&mut self, other: Foo) {
   |                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:34:30
   |
LL |     fn mul_assign(&mut self, other: Foo) {
   |                              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/suspicious_arithmetic_impl.rs:34:19
   |
LL |     fn mul_assign(&mut self, other: Foo) {
   |                   ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:40:1
   |
LL | impl DivAssign for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:41:5
   |
LL |     fn div_assign(&mut self, other: Foo) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:41:5
   |
LL |     fn div_assign(&mut self, other: Foo) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:41:24
   |
LL |     fn div_assign(&mut self, other: Foo) {
   |                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:41:30
   |
LL |     fn div_assign(&mut self, other: Foo) {
   |                              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/suspicious_arithmetic_impl.rs:41:19
   |
LL |     fn div_assign(&mut self, other: Foo) {
   |                   ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:46:1
   |
LL | impl Mul for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:49:5
   |
LL |     fn mul(self, other: Foo) -> Foo {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:49:5
   |
LL |     fn mul(self, other: Foo) -> Foo {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:49:12
   |
LL |     fn mul(self, other: Foo) -> Foo {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:49:18
   |
LL |     fn mul(self, other: Foo) -> Foo {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:54:1
   |
LL | impl Sub for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:57:5
   |
LL |     fn sub(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:57:5
   |
LL |     fn sub(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:57:12
   |
LL |     fn sub(self, other: Self) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:57:18
   |
LL |     fn sub(self, other: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:62:1
   |
LL | impl Div for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:65:5
   |
LL |     fn div(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:65:5
   |
LL |     fn div(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:65:12
   |
LL |     fn div(self, other: Self) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:65:18
   |
LL |     fn div(self, other: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:70:1
   |
LL | impl Rem for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:73:5
   |
LL |     fn rem(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:73:5
   |
LL |     fn rem(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:73:12
   |
LL |     fn rem(self, other: Self) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:73:18
   |
LL |     fn rem(self, other: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:79:1
   |
LL | impl BitAnd for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:82:5
   |
LL |     fn bitand(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:82:5
   |
LL |     fn bitand(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:82:15
   |
LL |     fn bitand(self, other: Self) -> Self {
   |               ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:82:21
   |
LL |     fn bitand(self, other: Self) -> Self {
   |                     ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:88:1
   |
LL | impl BitOr for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:91:5
   |
LL |     fn bitor(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:91:5
   |
LL |     fn bitor(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:91:14
   |
LL |     fn bitor(self, other: Self) -> Self {
   |              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:91:20
   |
LL |     fn bitor(self, other: Self) -> Self {
   |                    ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:97:1
   |
LL | impl BitXor for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:100:5
   |
LL |     fn bitxor(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:100:5
   |
LL |     fn bitxor(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:100:15
   |
LL |     fn bitxor(self, other: Self) -> Self {
   |               ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:100:21
   |
LL |     fn bitxor(self, other: Self) -> Self {
   |                     ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:106:1
   |
LL | impl Shl for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:109:5
   |
LL |     fn shl(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:109:5
   |
LL |     fn shl(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:109:12
   |
LL |     fn shl(self, other: Self) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:109:18
   |
LL |     fn shl(self, other: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:115:1
   |
LL | impl Shr for Foo {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:118:5
   |
LL |     fn shr(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:118:5
   |
LL |     fn shr(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:118:12
   |
LL |     fn shr(self, other: Self) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:118:18
   |
LL |     fn shr(self, other: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:124:1
   |
LL | struct Bar(i32);
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:126:1
   |
LL | impl Add for Bar {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:129:5
   |
LL |     fn add(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:129:5
   |
LL |     fn add(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:129:12
   |
LL |     fn add(self, other: Self) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:129:18
   |
LL |     fn add(self, other: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:134:1
   |
LL | impl Sub for Bar {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:137:5
   |
LL |     fn sub(self, other: Self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:137:5
   |
LL |     fn sub(self, other: Self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:137:12
   |
LL |     fn sub(self, other: Self) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:137:18
   |
LL |     fn sub(self, other: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:146:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:146:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:146:1
   |
LL | fn main() {}
   | ^

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:148:1
   |
LL | fn do_nothing(x: u32) -> u32 {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:148:1
   |
LL | fn do_nothing(x: u32) -> u32 {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:148:1
   |
LL | fn do_nothing(x: u32) -> u32 {
   | ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:148:15
   |
LL | fn do_nothing(x: u32) -> u32 {
   |               ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:152:1
   |
LL | struct MultipleBinops(u32);
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:154:1
   |
LL | impl Add for MultipleBinops {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:158:5
   |
LL |     fn add(self, other: Self) -> Self::Output {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:158:5
   |
LL |     fn add(self, other: Self) -> Self::Output {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:158:12
   |
LL |     fn add(self, other: Self) -> Self::Output {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:158:18
   |
LL |     fn add(self, other: Self) -> Self::Output {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/suspicious_arithmetic_impl.rs:167:1
   |
LL | impl Mul for MultipleBinops {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:171:5
   |
LL |     fn mul(self, other: Self) -> Self::Output {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/suspicious_arithmetic_impl.rs:171:5
   |
LL |     fn mul(self, other: Self) -> Self::Output {
   |     ^

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:171:12
   |
LL |     fn mul(self, other: Self) -> Self::Output {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:171:18
   |
LL |     fn mul(self, other: Self) -> Self::Output {
   |                  ^ help: make this parameter mutable: `mut`

error: variable must be `mut`
  --> tests/ui/suspicious_arithmetic_impl.rs:173:13
   |
LL |         let size = std::cmp::max(self.0, other.0) as usize;
   |             ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 95 previous errors

