error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/readonly_write_lock.rs:5:1
   |
LL | fn mutate_i32(x: &mut i32) {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/readonly_write_lock.rs:5:1
   |
LL | fn mutate_i32(x: &mut i32) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/readonly_write_lock.rs:5:1
   |
LL | fn mutate_i32(x: &mut i32) {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/readonly_write_lock.rs:5:15
   |
LL | fn mutate_i32(x: &mut i32) {
   |               ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/readonly_write_lock.rs:5:18
   |
LL | fn mutate_i32(x: &mut i32) {
   |                  ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/readonly_write_lock.rs:9:1
   |
LL | fn accept_i32(_: i32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/readonly_write_lock.rs:9:1
   |
LL | fn accept_i32(_: i32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/readonly_write_lock.rs:9:1
   |
LL | fn accept_i32(_: i32) {}
   | ^

error: item must be `pub`
  --> tests/ui/readonly_write_lock.rs:11:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/readonly_write_lock.rs:11:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/readonly_write_lock.rs:11:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/readonly_write_lock.rs:12:9
   |
LL |     let lock = RwLock::new(42);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/readonly_write_lock.rs:13:9
   |
LL |     let lock2 = RwLock::new(1234);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/readonly_write_lock.rs:16:13
   |
LL |         let writer = lock.write().unwrap();
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/readonly_write_lock.rs:19:14
   |
LL |         dbg!(&writer);
   |              ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/readonly_write_lock.rs:19:9
   |
LL |         dbg!(&writer);
   |         ^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/readonly_write_lock.rs:23:13
   |
LL |         let writer = lock.write().unwrap();
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/readonly_write_lock.rs:31:20
   |
LL |         mutate_i32(&mut writer);
   |                    ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/readonly_write_lock.rs:32:14
   |
LL |         dbg!(&writer);
   |              ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/readonly_write_lock.rs:32:9
   |
LL |         dbg!(&writer);
   |         ^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/readonly_write_lock.rs:48:1
   |
LL | fn issue12733(rw: &RwLock<()>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/readonly_write_lock.rs:48:1
   |
LL | fn issue12733(rw: &RwLock<()>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/readonly_write_lock.rs:48:1
   |
LL | fn issue12733(rw: &RwLock<()>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/readonly_write_lock.rs:48:15
   |
LL | fn issue12733(rw: &RwLock<()>) {
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/readonly_write_lock.rs:48:19
   |
LL | fn issue12733(rw: &RwLock<()>) {
   |                   ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: variable must be `mut`
  --> tests/ui/readonly_write_lock.rs:49:9
   |
LL |     let _write_guard = rw.write().unwrap();
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 26 previous errors

