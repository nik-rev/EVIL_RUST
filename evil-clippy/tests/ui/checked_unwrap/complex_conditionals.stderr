error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:8:1
   |
LL | fn test_complex_conditions() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:8:1
   |
LL | fn test_complex_conditions() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:8:1
   |
LL | fn test_complex_conditions() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:9:9
   |
LL |     let x: Result<(), ()> = Ok(());
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:10:9
   |
LL |     let y: Result<(), ()> = Ok(());
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:56:9
   |
LL |     let z: Result<(), ()> = Ok(());
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:114:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:114:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:114:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: called `unwrap` on `x` after checking its variant with `is_ok`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:13:9
   |
LL |     if x.is_ok() && y.is_err() {
   |        --------- the check is happening here
LL |         // unnecessary
LL |         x.unwrap();
   |         ^^^^^^^^^^
   |
   = help: try using `if let` or `match`
note: the lint level is defined here
  --> tests/ui/checked_unwrap/complex_conditionals.rs:1:35
   |
LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

error: this call to `unwrap_err()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:17:9
   |
LL |     if x.is_ok() && y.is_err() {
   |        --------- because of this check
...
LL |         x.unwrap_err();
   |         ^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> tests/ui/checked_unwrap/complex_conditionals.rs:1:9
   |
LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

error: this call to `unwrap()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:21:9
   |
LL |     if x.is_ok() && y.is_err() {
   |                     ---------- because of this check
...
LL |         y.unwrap();
   |         ^^^^^^^^^^

error: called `unwrap_err` on `y` after checking its variant with `is_err`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:25:9
   |
LL |     if x.is_ok() && y.is_err() {
   |                     ---------- the check is happening here
...
LL |         y.unwrap_err();
   |         ^^^^^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: this call to `unwrap()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:41:9
   |
LL |     if x.is_ok() || y.is_ok() {
   |        --------- because of this check
...
LL |         x.unwrap();
   |         ^^^^^^^^^^

error: called `unwrap_err` on `x` after checking its variant with `is_ok`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:45:9
   |
LL |     if x.is_ok() || y.is_ok() {
   |        --------- the check is happening here
...
LL |         x.unwrap_err();
   |         ^^^^^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: this call to `unwrap()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:49:9
   |
LL |     if x.is_ok() || y.is_ok() {
   |                     --------- because of this check
...
LL |         y.unwrap();
   |         ^^^^^^^^^^

error: called `unwrap_err` on `y` after checking its variant with `is_ok`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:53:9
   |
LL |     if x.is_ok() || y.is_ok() {
   |                     --------- the check is happening here
...
LL |         y.unwrap_err();
   |         ^^^^^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: called `unwrap` on `x` after checking its variant with `is_ok`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:59:9
   |
LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {
   |        --------- the check is happening here
LL |         // unnecessary
LL |         x.unwrap();
   |         ^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: this call to `unwrap_err()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:63:9
   |
LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {
   |        --------- because of this check
...
LL |         x.unwrap_err();
   |         ^^^^^^^^^^^^^^

error: this call to `unwrap()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:67:9
   |
LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {
   |                       --------- because of this check
...
LL |         y.unwrap();
   |         ^^^^^^^^^^

error: called `unwrap_err` on `y` after checking its variant with `is_ok`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:71:9
   |
LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {
   |                       --------- the check is happening here
...
LL |         y.unwrap_err();
   |         ^^^^^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: called `unwrap` on `z` after checking its variant with `is_err`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:75:9
   |
LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {
   |                                    ---------- the check is happening here
...
LL |         z.unwrap();
   |         ^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: this call to `unwrap_err()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:79:9
   |
LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {
   |                                    ---------- because of this check
...
LL |         z.unwrap_err();
   |         ^^^^^^^^^^^^^^

error: this call to `unwrap()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:89:9
   |
LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {
   |        --------- because of this check
...
LL |         x.unwrap();
   |         ^^^^^^^^^^

error: called `unwrap_err` on `x` after checking its variant with `is_ok`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:93:9
   |
LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {
   |        --------- the check is happening here
...
LL |         x.unwrap_err();
   |         ^^^^^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: called `unwrap` on `y` after checking its variant with `is_ok`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:97:9
   |
LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {
   |                       --------- the check is happening here
...
LL |         y.unwrap();
   |         ^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: this call to `unwrap_err()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:101:9
   |
LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {
   |                       --------- because of this check
...
LL |         y.unwrap_err();
   |         ^^^^^^^^^^^^^^

error: this call to `unwrap()` will always panic
  --> tests/ui/checked_unwrap/complex_conditionals.rs:105:9
   |
LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {
   |                                    ---------- because of this check
...
LL |         z.unwrap();
   |         ^^^^^^^^^^

error: called `unwrap_err` on `z` after checking its variant with `is_err`
  --> tests/ui/checked_unwrap/complex_conditionals.rs:109:9
   |
LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {
   |                                    ---------- the check is happening here
...
LL |         z.unwrap_err();
   |         ^^^^^^^^^^^^^^
   |
   = help: try using `if let` or `match`

error: aborting due to 31 previous errors

