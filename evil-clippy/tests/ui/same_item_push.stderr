error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:3:1
   |
LL | const VALUE: u8 = 7;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:5:1
   |
LL | fn mutate_increment(x: &mut u8) -> u8 {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/same_item_push.rs:5:1
   |
LL | fn mutate_increment(x: &mut u8) -> u8 {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/same_item_push.rs:5:1
   |
LL | fn mutate_increment(x: &mut u8) -> u8 {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/same_item_push.rs:5:21
   |
LL | fn mutate_increment(x: &mut u8) -> u8 {
   |                     ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/same_item_push.rs:5:24
   |
LL | fn mutate_increment(x: &mut u8) -> u8 {
   |                        ^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:10:1
   |
LL | fn increment(x: u8) -> u8 {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/same_item_push.rs:10:1
   |
LL | fn increment(x: u8) -> u8 {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/same_item_push.rs:10:1
   |
LL | fn increment(x: u8) -> u8 {
   | ^

error: parameter must be `mut`
  --> tests/ui/same_item_push.rs:10:14
   |
LL | fn increment(x: u8) -> u8 {
   |              ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:14:1
   |
LL | fn fun() -> usize {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/same_item_push.rs:14:1
   |
LL | fn fun() -> usize {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/same_item_push.rs:14:1
   |
LL | fn fun() -> usize {
   | ^

error: item must be `pub`
  --> tests/ui/same_item_push.rs:18:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/same_item_push.rs:18:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/same_item_push.rs:18:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:21:9
   |
LL |     let item = 2;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:29:13
   |
LL |         let item = 2;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:47:9
   |
LL |     let item = VALUE;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:54:5
   |
LL |     fn older_msrv() {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/same_item_push.rs:54:5
   |
LL |     fn older_msrv() {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/same_item_push.rs:54:5
   |
LL |     fn older_msrv() {
   |     ^

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:56:13
   |
LL |         let item = VALUE;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/same_item_push.rs:73:35
   |
LL |         vec.push(mutate_increment(&mut item));
   |                                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/same_item_push.rs:78:21
   |
LL |     let mut item2 = &mut mutate_increment(&mut item);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/same_item_push.rs:78:43
   |
LL |     let mut item2 = &mut mutate_increment(&mut item);
   |                                           ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:100:9
   |
LL |     let item: u8 = 2;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:111:5
   |
LL |     struct A {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:138:5
   |
LL |     struct S;
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:137:14
   |
LL |     #[derive(Clone)]
   |              ^

error: function must be `unsafe`
  --> tests/ui/same_item_push.rs:137:11
   |
LL |     #[derive(Clone)]
   |           ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/same_item_push.rs:137:11
   |
LL |     #[derive(Clone)]
   |           ^  ----- in this derive macro expansion

error: parameter must be `mut`
  --> tests/ui/same_item_push.rs:137:14
   |
LL |     #[derive(Clone)]
   |              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/same_item_push.rs:137:14
   |
LL |     #[derive(Clone)]
   |              ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: trait must be `unsafe`
  --> tests/ui/same_item_push.rs:140:5
   |
LL |     trait T {}
   |     ^^^^^^^^^^
   |
   = help: make this trait unsafe: `unsafe trait`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:140:5
   |
LL |     trait T {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/same_item_push.rs:141:5
   |
LL |     impl T for S {}
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:150:9
   |
LL |     let item = 42;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:151:9
   |
LL |     let item = fun();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:158:9
   |
LL |     let key = 1;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/same_item_push.rs:160:13
   |
LL |         let item = match key {
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/same_item_push.rs:172:20
   |
LL |         vec.extend(&[2]);
   |                    ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 40 previous errors

