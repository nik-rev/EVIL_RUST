error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:16:1
   |
LL | enum Variant {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:22:1
   |
LL | fn g() -> Option<()> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:22:1
   |
LL | fn g() -> Option<()> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:22:1
   |
LL | fn g() -> Option<()> {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:26:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:26:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:26:1
   |
LL | fn main() {}
   | ^

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:28:1
   |
LL | fn fire() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:28:1
   |
LL | fn fire() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:28:1
   |
LL | fn fire() {
   | ^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:29:9
   |
LL |     let v = if let Some(v_some) = g() { v_some } else { return };
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:32:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:40:9
   |
LL |     let v = if let Some(v) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:53:13
   |
LL |         let v = if let Some(v_some) = g() { v_some } else { continue };
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:56:13
   |
LL |         let v = if let Some(v_some) = g() { v_some } else { break };
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:61:9
   |
LL |     let v = if let Some(v_some) = g() { v_some } else { panic!() };
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:61:57
   |
LL |     let v = if let Some(v_some) = g() { v_some } else { panic!() };
   |                                                         ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:61:57
   |
LL |     let v = if let Some(v_some) = g() { v_some } else { panic!() };
   |                                                         ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:61:57
   |
LL |     let v = if let Some(v_some) = g() { v_some } else { panic!() };
   |                                                         ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:65:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:74:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:79:35
   |
LL |         if true { return } else { panic!() }
   |                                   ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:79:35
   |
LL |         if true { return } else { panic!() }
   |                                   ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:79:35
   |
LL |         if true { return } else { panic!() }
   |                                   ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:83:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:89:9
   |
LL |         panic!();
   |         ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:89:9
   |
LL |         panic!();
   |         ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:89:9
   |
LL |         panic!();
   |         ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:93:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:98:9
   |
LL |         panic!();
   |         ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:98:9
   |
LL |         panic!();
   |         ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:98:9
   |
LL |         panic!();
   |         ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:103:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:108:9
   |
LL |         panic!();
   |         ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:108:9
   |
LL |         panic!();
   |         ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:108:9
   |
LL |         panic!();
   |         ^^^^^^^^

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:115:13
   |
LL |             panic!()
   |             ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:115:13
   |
LL |             panic!()
   |             ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:115:13
   |
LL |             panic!()
   |             ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:120:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:126:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:126:13
   |
LL |             panic!();
   |             ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:126:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:132:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:138:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:138:13
   |
LL |             panic!();
   |             ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:138:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:149:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:155:26
   |
LL |             0 if true => panic!(),
   |                          ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:155:26
   |
LL |             0 if true => panic!(),
   |                          ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:155:26
   |
LL |             0 if true => panic!(),
   |                          ^^^^^^^^

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:156:18
   |
LL |             _ => panic!(),
   |                  ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:156:18
   |
LL |             _ => panic!(),
   |                  ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:156:18
   |
LL |             _ => panic!(),
   |                  ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:161:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:166:12
   |
LL |         if panic!() {};
   |            ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:166:12
   |
LL |         if panic!() {};
   |            ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:166:12
   |
LL |         if panic!() {};
   |            ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:170:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:175:15
   |
LL |         match panic!() {
   |               ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:175:15
   |
LL |         match panic!() {
   |               ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:175:15
   |
LL |         match panic!() {
   |               ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:181:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:192:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:203:21
   |
LL |                     panic!();
   |                     ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:203:21
   |
LL |                     panic!();
   |                     ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:203:21
   |
LL |                     panic!();
   |                     ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:211:10
   |
LL |     let (v, w) = if let Some(v_some) = g().map(|v| (v, 42)) {
   |          ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:211:13
   |
LL |     let (v, w) = if let Some(v_some) = g().map(|v| (v, 42)) {
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:220:10
   |
LL |     let (w, S { v }) = if let (Some(v_some), w_some) = (g().map(|_| S { v: 0 }), 0) {
   |          ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:220:17
   |
LL |     let (w, S { v }) = if let (Some(v_some), w_some) = (g().map(|_| S { v: 0 }), 0) {
   |                 ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:229:5
   |
LL |     macro_rules! create_binding_if_some {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:235:29
   |
LL |     create_binding_if_some!(w, g());
   |                             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:237:5
   |
LL |     fn e() -> Variant {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:237:5
   |
LL |     fn e() -> Variant {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:237:5
   |
LL |     fn e() -> Variant {
   |     ^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:241:9
   |
LL |     let v = if let Variant::A(a, 0) = e() { a } else { return };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:249:9
   |
LL |     let nested = Ok(Some(e()));
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:250:9
   |
LL |     let v = if let Ok(Some(Variant::B(b))) | Err(Some(Variant::A(b, _))) = nested {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:258:9
   |
LL |     let v = if let Variant::A(.., a) = e() { a } else { return };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:262:9
   |
LL |     let w = if let (Some(v), ()) = (g(), ()) { v } else { return };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:266:9
   |
LL |     let w = if let Some(S { v: x }) = Some(S { v: 0 }) {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:275:9
   |
LL |     let v = if let Some(S { v: x }) = Some(S { v: 0 }) {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:284:10
   |
LL |     let (x, S { v }, w) = if let Some(U { v, w, x }) = None::<U<S<()>>> {
   |          ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:284:17
   |
LL |     let (x, S { v }, w) = if let Some(U { v, w, x }) = None::<U<S<()>>> {
   |                 ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:284:22
   |
LL |     let (x, S { v }, w) = if let Some(U { v, w, x }) = None::<U<S<()>>> {
   |                      ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:293:1
   |
LL | fn not_fire() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:293:1
   |
LL | fn not_fire() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:293:1
   |
LL | fn not_fire() {
   | ^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:294:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:300:9
   |
LL |     let w = 0;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:301:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:308:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:316:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:326:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:338:9
   |
LL |     let v = if let Some(v_some) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:347:5
   |
LL |     enum Uninhabited {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:348:5
   |
LL |     fn un() -> Uninhabited {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:348:5
   |
LL |     fn un() -> Uninhabited {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:348:5
   |
LL |     fn un() -> Uninhabited {
   |     ^

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:349:9
   |
LL |         panic!()
   |         ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:349:9
   |
LL |         panic!()
   |         ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:349:9
   |
LL |         panic!()
   |         ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:351:9
   |
LL |     let v = if let Some(v_some) = None {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:358:5
   |
LL |     fn question_mark() -> Option<()> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:358:5
   |
LL |     fn question_mark() -> Option<()> {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:358:5
   |
LL |     fn question_mark() -> Option<()> {
   |     ^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:359:13
   |
LL |         let v = if let Some(v) = g() {
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:369:5
   |
LL |     macro_rules! some_or_return {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:374:9
   |
LL |     let v = some_or_return!(g());
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:377:5
   |
LL |     macro_rules! create_binding_if_some_nf {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:382:32
   |
LL |     create_binding_if_some_nf!(v, g());
   |                                ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:385:14
   |
LL |     let Some(a) = (if let Some(b) = Some(Some(())) { b } else { return }) else {
   |              ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:386:9
   |
LL |         panic!()
   |         ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:386:9
   |
LL |         panic!()
   |         ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:386:9
   |
LL |         panic!()
   |         ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:391:9
   |
LL |     let v: () = if let Some(v_some) = g() { v_some } else { panic!() };
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:391:61
   |
LL |     let v: () = if let Some(v_some) = g() { v_some } else { panic!() };
   |                                                             ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:391:61
   |
LL |     let v: () = if let Some(v_some) = g() { v_some } else { panic!() };
   |                                                             ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:391:61
   |
LL |     let v: () = if let Some(v_some) = g() { v_some } else { panic!() };
   |                                                             ^^^^^^^^

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:395:5
   |
LL |     macro_rules! macro_call {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:401:9
   |
LL |     let ff = Some(1);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:410:9
   |
LL |     let _x = if let Some(x) = Some(1) {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:413:18
   |
LL |         let Some(_z) = Some(3) else { return };
   |                  ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:420:9
   |
LL |     let v = if let (Some(v_some), w_some) = (g(), 0) {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:427:9
   |
LL |     let _x = if let Some(x) = Some(0) {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:432:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:432:13
   |
LL |             panic!();
   |             ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:432:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:437:9
   |
LL |     let _x = if let Some(x) = Some(0) {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:444:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:444:13
   |
LL |             panic!();
   |             ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:444:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:449:9
   |
LL |     let _x = if let Some(x) = g() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:459:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:459:13
   |
LL |             panic!();
   |             ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:459:13
   |
LL |             panic!();
   |             ^^^^^^^^

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:464:1
   |
LL | struct S<T> {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:468:1
   |
LL | struct U<T> {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:474:1
   |
LL | fn issue12337() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:474:1
   |
LL | fn issue12337() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:474:1
   |
LL | fn issue12337() {
   | ^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:479:13
   |
LL |         let v = if let Some(v_some) = g() { v_some } else { return };
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:484:1
   |
LL | mod issue13768 {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:485:5
   |
LL |     enum Foo {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:490:5
   |
LL |     fn foo(value: Foo) {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:490:5
   |
LL |     fn foo(value: Foo) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:490:5
   |
LL |     fn foo(value: Foo) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/manual_let_else.rs:490:12
   |
LL |     fn foo(value: Foo) {
   |            ^ help: make this parameter mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:491:13
   |
LL |         let signature = match value {
   |             ^ help: make this variable mutable: `mut`

error: `ref` is not allowed, as it binds by reference
  --> tests/ui/manual_let_else.rs:493:22
   |
LL |             Foo::Str(ref val) => val,
   |                      ^^^^^^^
   |
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:501:5
   |
LL |     enum Bar {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:506:5
   |
LL |     fn bar(mut value: Bar) {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:506:5
   |
LL |     fn bar(mut value: Bar) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:506:5
   |
LL |     fn bar(mut value: Bar) {
   |     ^

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:507:13
   |
LL |         let signature = match value {
   |             ^ help: make this variable mutable: `mut`

error: `ref` is not allowed, as it binds by reference
  --> tests/ui/manual_let_else.rs:509:24
   |
LL |             Bar::Str { ref mut inner } => inner,
   |                        ^^^^^^^^^^^^^

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:518:1
   |
LL | mod issue14598 {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:519:5
   |
LL |     fn bar() -> Result<bool, &'static str> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:519:5
   |
LL |     fn bar() -> Result<bool, &'static str> {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:519:5
   |
LL |     fn bar() -> Result<bool, &'static str> {
   |     ^

error: references are not allowed
  --> tests/ui/manual_let_else.rs:519:30
   |
LL |     fn bar() -> Result<bool, &'static str> {
   |                              ^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:520:13
   |
LL |         let value = match foo() {
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:526:13
   |
LL |         let w = Some(0);
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:527:13
   |
LL |         let v = match w {
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:533:9
   |
LL |         enum Foo<T> {
   |         ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/manual_let_else.rs:537:13
   |
LL |         let v = match Foo::Foo(Some(())) {
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else.rs:545:5
   |
LL |     fn foo() -> Result<u32, &'static str> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else.rs:545:5
   |
LL |     fn foo() -> Result<u32, &'static str> {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else.rs:545:5
   |
LL |     fn foo() -> Result<u32, &'static str> {
   |     ^

error: references are not allowed
  --> tests/ui/manual_let_else.rs:545:29
   |
LL |     fn foo() -> Result<u32, &'static str> {
   |                             ^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 144 previous errors

