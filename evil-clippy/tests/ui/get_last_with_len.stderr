error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/get_last_with_len.rs:6:1
   |
LL | fn dont_use_last() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/get_last_with_len.rs:6:1
   |
LL | fn dont_use_last() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/get_last_with_len.rs:6:1
   |
LL | fn dont_use_last() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:7:9
   |
LL |     let x = vec![2, 3, 5];
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: item must be `pub`
  --> tests/ui/get_last_with_len.rs:12:1
   |
LL | fn indexing_two_from_end() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/get_last_with_len.rs:12:1
   |
LL | fn indexing_two_from_end() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/get_last_with_len.rs:12:1
   |
LL | fn indexing_two_from_end() {
   | ^

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:13:9
   |
LL |     let x = vec![2, 3, 5];
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/get_last_with_len.rs:17:1
   |
LL | fn index_into_last() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/get_last_with_len.rs:17:1
   |
LL | fn index_into_last() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/get_last_with_len.rs:17:1
   |
LL | fn index_into_last() {
   | ^

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:18:9
   |
LL |     let x = vec![2, 3, 5];
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/get_last_with_len.rs:22:1
   |
LL | fn use_last_with_different_vec_length() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/get_last_with_len.rs:22:1
   |
LL | fn use_last_with_different_vec_length() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/get_last_with_len.rs:22:1
   |
LL | fn use_last_with_different_vec_length() {
   | ^

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:23:9
   |
LL |     let x = vec![2, 3, 5];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:24:9
   |
LL |     let y = vec!['a', 'b', 'c'];
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/get_last_with_len.rs:28:1
   |
LL | struct S {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/get_last_with_len.rs:32:1
   |
LL | fn in_field(s: &S) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/get_last_with_len.rs:32:1
   |
LL | fn in_field(s: &S) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/get_last_with_len.rs:32:1
   |
LL | fn in_field(s: &S) {
   | ^

error: parameter must be `mut`
  --> tests/ui/get_last_with_len.rs:32:13
   |
LL | fn in_field(s: &S) {
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/get_last_with_len.rs:32:16
   |
LL | fn in_field(s: &S) {
   |                ^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/get_last_with_len.rs:37:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/get_last_with_len.rs:37:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/get_last_with_len.rs:37:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:38:9
   |
LL |     let slice = &[1, 2, 3];
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/get_last_with_len.rs:38:17
   |
LL |     let slice = &[1, 2, 3];
   |                 ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:42:9
   |
LL |     let array = [4, 5, 6];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:46:9
   |
LL |     let deq = VecDeque::from([7, 8, 9]);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/get_last_with_len.rs:50:9
   |
LL |     let nested = [[1]];
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 29 previous errors

