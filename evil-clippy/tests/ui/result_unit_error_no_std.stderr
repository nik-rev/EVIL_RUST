error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: function must be `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:7:5
   |
LL | pub fn returns_unit_error_no_lint() -> Result<u32, ()> {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:7:5
   |
LL | pub fn returns_unit_error_no_lint() -> Result<u32, ()> {
   |     ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: function must be `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:12:5
   |
LL | pub fn returns_unit_error_lint() -> Result<u32, ()> {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:12:5
   |
LL | pub fn returns_unit_error_lint() -> Result<u32, ()> {
   |     ^

error: item must be `pub`
  --> tests/ui/result_unit_error_no_std.rs:18:1
   |
LL | extern "C" fn main(_argc: core::ffi::c_int, _argv: *const *const u8) -> core::ffi::c_int {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:18:1
   |
LL | extern "C" fn main(_argc: core::ffi::c_int, _argv: *const *const u8) -> core::ffi::c_int {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:18:1
   |
LL | extern "C" fn main(_argc: core::ffi::c_int, _argv: *const *const u8) -> core::ffi::c_int {
   | ^

error: parameter must be `mut`
  --> tests/ui/result_unit_error_no_std.rs:18:20
   |
LL | extern "C" fn main(_argc: core::ffi::c_int, _argv: *const *const u8) -> core::ffi::c_int {
   |                    ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: parameter must be `mut`
  --> tests/ui/result_unit_error_no_std.rs:18:45
   |
LL | extern "C" fn main(_argc: core::ffi::c_int, _argv: *const *const u8) -> core::ffi::c_int {
   |                                             ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/result_unit_error_no_std.rs:23:1
   |
LL | fn panic(_info: &core::panic::PanicInfo) -> ! {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:23:1
   |
LL | fn panic(_info: &core::panic::PanicInfo) -> ! {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:23:1
   |
LL | fn panic(_info: &core::panic::PanicInfo) -> ! {
   | ^

error: parameter must be `mut`
  --> tests/ui/result_unit_error_no_std.rs:23:10
   |
LL | fn panic(_info: &core::panic::PanicInfo) -> ! {
   |          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/result_unit_error_no_std.rs:23:17
   |
LL | fn panic(_info: &core::panic::PanicInfo) -> ! {
   |                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/result_unit_error_no_std.rs:28:1
   |
LL | extern "C" fn eh_personality() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:28:1
   |
LL | extern "C" fn eh_personality() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/result_unit_error_no_std.rs:28:1
   |
LL | extern "C" fn eh_personality() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: aborting due to 15 previous errors

