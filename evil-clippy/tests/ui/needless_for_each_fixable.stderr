error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/needless_for_each_fixable.rs:12:1
   |
LL | fn should_lint() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:12:1
   |
LL | fn should_lint() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:12:1
   |
LL | fn should_lint() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/needless_for_each_fixable.rs:13:9
   |
LL |     let v: Vec<i32> = Vec::new();
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: item must be `pub`
  --> tests/ui/needless_for_each_fixable.rs:47:5
   |
LL |     fn my_vec() -> Vec<i32> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:47:5
   |
LL |     fn my_vec() -> Vec<i32> {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:47:5
   |
LL |     fn my_vec() -> Vec<i32> {
   |     ^

error: item must be `pub`
  --> tests/ui/needless_for_each_fixable.rs:56:1
   |
LL | fn should_not_lint() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:56:1
   |
LL | fn should_not_lint() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:56:1
   |
LL | fn should_not_lint() {
   | ^

error: variable must be `mut`
  --> tests/ui/needless_for_each_fixable.rs:57:9
   |
LL |     let v: Vec<i32> = Vec::new();
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/needless_for_each_fixable.rs:61:5
   |
LL |     fn print(x: &i32) {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:61:5
   |
LL |     fn print(x: &i32) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:61:5
   |
LL |     fn print(x: &i32) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_for_each_fixable.rs:61:14
   |
LL |     fn print(x: &i32) {
   |              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_for_each_fixable.rs:61:17
   |
LL |     fn print(x: &i32) {
   |                 ^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/needless_for_each_fixable.rs:67:5
   |
LL |     struct MyStruct {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/needless_for_each_fixable.rs:70:5
   |
LL |     impl MyStruct {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:71:9
   |
LL |         fn iter(&self) -> impl Iterator<Item = &i32> {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:71:9
   |
LL |         fn iter(&self) -> impl Iterator<Item = &i32> {
   |         ^

error: parameter must be `mut`
  --> tests/ui/needless_for_each_fixable.rs:71:18
   |
LL |         fn iter(&self) -> impl Iterator<Item = &i32> {
   |                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_for_each_fixable.rs:71:17
   |
LL |         fn iter(&self) -> impl Iterator<Item = &i32> {
   |                 ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/needless_for_each_fixable.rs:71:48
   |
LL |         fn iter(&self) -> impl Iterator<Item = &i32> {
   |                                                ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: variable must be `mut`
  --> tests/ui/needless_for_each_fixable.rs:75:9
   |
LL |     let s = MyStruct { v: Vec::new() };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/needless_for_each_fixable.rs:108:9
   |
LL |     let it = v.iter();
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/needless_for_each_fixable.rs:130:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:130:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_for_each_fixable.rs:130:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 26 previous errors

