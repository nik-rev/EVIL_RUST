error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:4:1
   |
LL | fn bla() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:4:1
   |
LL | fn bla() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:4:1
   |
LL | fn bla() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:5:9
   |
LL |     let a: i32;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:10:10
   |
LL |     let (b, c, d): (i32, i64, i16);
   |          ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:10:13
   |
LL |     let (b, c, d): (i32, i64, i16);
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:10:16
   |
LL |     let (b, c, d): (i32, i64, i16);
   |                ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:13:17
   |
LL |             let cdefg: i32;
   |                 ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:14:17
   |
LL |             let blar: i32;
   |                 ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:17:17
   |
LL |             let e: i32;
   |                 ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:20:17
   |
LL |             let e: i32;
   |                 ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:21:17
   |
LL |             let f: i32;
   |                 ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:25:18
   |
LL |             e => panic!(),
   |                  ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:25:18
   |
LL |             e => panic!(),
   |                  ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:25:18
   |
LL |             e => panic!(),
   |                  ^^^^^^^^

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:29:18
   |
LL |             _ => panic!(),
   |                  ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:29:18
   |
LL |             _ => panic!(),
   |                  ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:29:18
   |
LL |             _ => panic!(),
   |                  ^^^^^^^^

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:34:1
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:34:1
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:34:1
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/many_single_char_names.rs:34:13
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/many_single_char_names.rs:34:21
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   |                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/many_single_char_names.rs:34:29
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   |                             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/many_single_char_names.rs:34:37
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   |                                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/many_single_char_names.rs:34:45
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   |                                             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/many_single_char_names.rs:34:53
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   |                                                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/many_single_char_names.rs:34:61
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   |                                                             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/many_single_char_names.rs:34:69
   |
LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}
   |                                                                     ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:37:1
   |
LL | fn bindings2() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:37:1
   |
LL | fn bindings2() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:37:1
   |
LL | fn bindings2() {
   | ^

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:38:10
   |
LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();
   |          ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:38:13
   |
LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:38:16
   |
LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();
   |                ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:38:19
   |
LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();
   |                   ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:38:22
   |
LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();
   |                      ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:38:25
   |
LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();
   |                         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:38:28
   |
LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();
   |                            ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:38:31
   |
LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();
   |                               ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:42:1
   |
LL | fn shadowing() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:42:1
   |
LL | fn shadowing() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:42:1
   |
LL | fn shadowing() {
   | ^

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:43:9
   |
LL |     let a = 0i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:44:9
   |
LL |     let a = 0i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:45:9
   |
LL |     let a = 0i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:46:9
   |
LL |     let a = 0i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:47:9
   |
LL |     let a = 0i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:48:9
   |
LL |     let a = 0i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:50:13
   |
LL |         let a = 0i32;
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:54:1
   |
LL | fn patterns() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:54:1
   |
LL | fn patterns() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:54:1
   |
LL | fn patterns() {
   | ^

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:55:5
   |
LL |     enum Z {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:76:1
   |
LL | fn issue_3198_allow_works() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:76:1
   |
LL | fn issue_3198_allow_works() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:76:1
   |
LL | fn issue_3198_allow_works() {
   | ^

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:77:10
   |
LL |     let (a, b, c, d, e) = (0, 0, 0, 0, 0);
   |          ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:77:13
   |
LL |     let (a, b, c, d, e) = (0, 0, 0, 0, 0);
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:77:16
   |
LL |     let (a, b, c, d, e) = (0, 0, 0, 0, 0);
   |                ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:77:19
   |
LL |     let (a, b, c, d, e) = (0, 0, 0, 0, 0);
   |                   ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/many_single_char_names.rs:77:22
   |
LL |     let (a, b, c, d, e) = (0, 0, 0, 0, 0);
   |                      ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/many_single_char_names.rs:80:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/many_single_char_names.rs:80:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/many_single_char_names.rs:80:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 60 previous errors

