error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_string_new.rs:4:1
   |
LL | macro_rules! create_strings_from_macro {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/manual_string_new.rs:12:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_string_new.rs:12:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_string_new.rs:12:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/manual_string_new.rs:65:1
   |
LL | struct SomeOtherStruct {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_string_new.rs:67:1
   |
LL | impl From<&str> for SomeOtherStruct {
   | ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/manual_string_new.rs:67:11
   |
LL | impl From<&str> for SomeOtherStruct {
   |           ^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: function must be `unsafe`
  --> tests/ui/manual_string_new.rs:68:5
   |
LL |     fn from(_value: &str) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_string_new.rs:68:5
   |
LL |     fn from(_value: &str) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/manual_string_new.rs:68:13
   |
LL |     fn from(_value: &str) -> Self {
   |             ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/manual_string_new.rs:68:21
   |
LL |     fn from(_value: &str) -> Self {
   |                     ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 13 previous errors

