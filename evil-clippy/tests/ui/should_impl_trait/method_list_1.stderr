error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/should_impl_trait/method_list_1.rs:17:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:17:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:17:1
   |
LL | fn main() {}
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/should_impl_trait/method_list_1.rs:20:1
   |
LL | impl T {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:24:9
   |
LL |     pub fn add(self, other: T) -> T {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:24:9
   |
LL |     pub fn add(self, other: T) -> T {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:24:16
   |
LL |     pub fn add(self, other: T) -> T {
   |                ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:24:22
   |
LL |     pub fn add(self, other: T) -> T {
   |                      ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:30:9
   |
LL |     pub fn as_mut(&mut self) -> &mut T {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:30:9
   |
LL |     pub fn as_mut(&mut self) -> &mut T {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:30:24
   |
LL |     pub fn as_mut(&mut self) -> &mut T {
   |                        ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:30:19
   |
LL |     pub fn as_mut(&mut self) -> &mut T {
   |                   ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:30:33
   |
LL |     pub fn as_mut(&mut self) -> &mut T {
   |                                 ^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:36:9
   |
LL |     pub fn as_ref(&self) -> &T {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:36:9
   |
LL |     pub fn as_ref(&self) -> &T {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:36:20
   |
LL |     pub fn as_ref(&self) -> &T {
   |                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:36:19
   |
LL |     pub fn as_ref(&self) -> &T {
   |                   ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:36:29
   |
LL |     pub fn as_ref(&self) -> &T {
   |                             ^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:42:9
   |
LL |     pub fn bitand(self, rhs: T) -> T {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:42:9
   |
LL |     pub fn bitand(self, rhs: T) -> T {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:42:19
   |
LL |     pub fn bitand(self, rhs: T) -> T {
   |                   ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:42:25
   |
LL |     pub fn bitand(self, rhs: T) -> T {
   |                         ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:48:9
   |
LL |     pub fn bitor(self, rhs: Self) -> Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:48:9
   |
LL |     pub fn bitor(self, rhs: Self) -> Self {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:48:18
   |
LL |     pub fn bitor(self, rhs: Self) -> Self {
   |                  ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:48:24
   |
LL |     pub fn bitor(self, rhs: Self) -> Self {
   |                        ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:54:9
   |
LL |     pub fn bitxor(self, rhs: Self) -> Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:54:9
   |
LL |     pub fn bitxor(self, rhs: Self) -> Self {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:54:19
   |
LL |     pub fn bitxor(self, rhs: Self) -> Self {
   |                   ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:54:25
   |
LL |     pub fn bitxor(self, rhs: Self) -> Self {
   |                         ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:60:9
   |
LL |     pub fn borrow(&self) -> &str {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:60:9
   |
LL |     pub fn borrow(&self) -> &str {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:60:20
   |
LL |     pub fn borrow(&self) -> &str {
   |                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:60:19
   |
LL |     pub fn borrow(&self) -> &str {
   |                   ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:60:29
   |
LL |     pub fn borrow(&self) -> &str {
   |                             ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:66:9
   |
LL |     pub fn borrow_mut(&mut self) -> &mut str {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:66:9
   |
LL |     pub fn borrow_mut(&mut self) -> &mut str {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:66:28
   |
LL |     pub fn borrow_mut(&mut self) -> &mut str {
   |                            ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:66:23
   |
LL |     pub fn borrow_mut(&mut self) -> &mut str {
   |                       ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:66:37
   |
LL |     pub fn borrow_mut(&mut self) -> &mut str {
   |                                     ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:72:9
   |
LL |     pub fn clone(&self) -> Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:72:9
   |
LL |     pub fn clone(&self) -> Self {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:72:19
   |
LL |     pub fn clone(&self) -> Self {
   |                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:72:18
   |
LL |     pub fn clone(&self) -> Self {
   |                  ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:78:9
   |
LL |     pub fn cmp(&self, other: &Self) -> Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:78:9
   |
LL |     pub fn cmp(&self, other: &Self) -> Self {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:78:17
   |
LL |     pub fn cmp(&self, other: &Self) -> Self {
   |                 ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:78:23
   |
LL |     pub fn cmp(&self, other: &Self) -> Self {
   |                       ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:78:16
   |
LL |     pub fn cmp(&self, other: &Self) -> Self {
   |                ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:78:30
   |
LL |     pub fn cmp(&self, other: &Self) -> Self {
   |                              ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:84:9
   |
LL |     pub fn default() -> Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:84:9
   |
LL |     pub fn default() -> Self {
   |         ^

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:90:9
   |
LL |     pub fn deref(&self) -> &Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:90:9
   |
LL |     pub fn deref(&self) -> &Self {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:90:19
   |
LL |     pub fn deref(&self) -> &Self {
   |                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:90:18
   |
LL |     pub fn deref(&self) -> &Self {
   |                  ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:90:28
   |
LL |     pub fn deref(&self) -> &Self {
   |                            ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:96:9
   |
LL |     pub fn deref_mut(&mut self) -> &mut Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:96:9
   |
LL |     pub fn deref_mut(&mut self) -> &mut Self {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:96:27
   |
LL |     pub fn deref_mut(&mut self) -> &mut Self {
   |                           ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:96:22
   |
LL |     pub fn deref_mut(&mut self) -> &mut Self {
   |                      ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:96:36
   |
LL |     pub fn deref_mut(&mut self) -> &mut Self {
   |                                    ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:102:9
   |
LL |     pub fn div(self, rhs: Self) -> Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:102:9
   |
LL |     pub fn div(self, rhs: Self) -> Self {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:102:16
   |
LL |     pub fn div(self, rhs: Self) -> Self {
   |                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:102:22
   |
LL |     pub fn div(self, rhs: Self) -> Self {
   |                      ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:108:9
   |
LL |     pub fn drop(&mut self) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_impl_trait/method_list_1.rs:108:9
   |
LL |     pub fn drop(&mut self) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/should_impl_trait/method_list_1.rs:108:22
   |
LL |     pub fn drop(&mut self) {
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/should_impl_trait/method_list_1.rs:108:17
   |
LL |     pub fn drop(&mut self) {
   |                 ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 58 previous errors

