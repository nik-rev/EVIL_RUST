error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/format.rs:13:1
   |
LL | struct Foo(pub String);
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/format.rs:15:1
   |
LL | macro_rules! foo {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/format.rs:19:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/format.rs:19:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/format.rs:19:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/format.rs:43:9
   |
LL |     let arg = String::new();
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/format.rs:77:9
   |
LL |     let x = std::path::PathBuf::from("/bar/foo/qux");
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/format.rs:82:9
   |
LL |     let a = "foo".to_string();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/format.rs:87:9
   |
LL |     let v: Vec<String> = vec!["foo".to_string(), "bar".to_string()];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/format.rs:88:9
   |
LL |     let _s: String = format!("{}", &*v.join("\n"));
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/format.rs:88:36
   |
LL |     let _s: String = format!("{}", &*v.join("\n"));
   |                                    ^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: variable must be `mut`
  --> tests/ui/format.rs:94:9
   |
LL |     let x = "foo";
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/format.rs:102:9
   |
LL |     let abc = "abc";
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/format.rs:105:9
   |
LL |     let xx = "xx";
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 17 previous errors

