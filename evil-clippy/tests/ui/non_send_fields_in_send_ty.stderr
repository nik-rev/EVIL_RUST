error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:16:1
   |
LL | unsafe impl<T> Send for RingBuffer<T> {}
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:25:1
   |
LL | unsafe impl<T> Send for MvccRwLock<T> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:34:1
   |
LL | unsafe impl<RC, T: Send> Send for ArcGuard<RC, T> {}
   | ^ help: make this item public: `pub`

error: trait must be `unsafe`
  --> tests/ui/non_send_fields_in_send_ty.rs:42:1
   |
LL | / pub trait UsbContext {
LL | |     // some user trait that does not guarantee `Send`
LL | | }
   | |_^
   |
   = help: make this trait unsafe: `unsafe trait`
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:51:1
   |
LL | unsafe impl<T: UsbContext> Send for DeviceHandle<T> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:59:1
   |
LL | unsafe impl Send for NoGeneric {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:68:1
   |
LL | unsafe impl<T> Send for MultiField<T> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:76:1
   |
LL | unsafe impl<T> Send for MyOption<T> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:82:1
   |
LL | unsafe impl Send for WrappedNonNull {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:89:1
   |
LL | unsafe impl<A, B> Send for MultiParam<A, B> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:108:1
   |
LL | unsafe impl Send for HeuristicTest {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:126:1
   |
LL | unsafe impl<T> Send for AttrTest1<T> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:127:1
   |
LL | unsafe impl<T> Send for AttrTest2<T> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:128:1
   |
LL | unsafe impl<T> Send for AttrTest3<T> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:137:1
   |
LL | unsafe impl<P> Send for Complex<P, u32> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:141:1
   |
LL | unsafe impl<Q: Send> Send for Complex<Q, MutexGuard<'static, bool>> {}
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/non_send_fields_in_send_ty.rs:144:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/non_send_fields_in_send_ty.rs:144:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/non_send_fields_in_send_ty.rs:144:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 22 previous errors

