error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:12:1
   |
LL | fn single_line() {}
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:12:1
   |
LL | fn single_line() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:12:1
   |
LL | fn single_line() {}
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:16:1
   |
LL | fn single_line_split() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:16:1
   |
LL | fn single_line_split() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:16:1
   |
LL | fn single_line_split() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:25:1
   |
LL | fn normal_comment() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:25:1
   |
LL | fn normal_comment() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:25:1
   |
LL | fn normal_comment() {
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:40:1
   |
LL | fn double_space_doc_comment() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:40:1
   |
LL | fn double_space_doc_comment() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:40:1
   |
LL | fn double_space_doc_comment() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:44:1
   |
LL | fn back_slash_doc_comment() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:44:1
   |
LL | fn back_slash_doc_comment() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:44:1
   |
LL | fn back_slash_doc_comment() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:52:1
   |
LL | fn multi_byte_chars_tada() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:52:1
   |
LL | fn multi_byte_chars_tada() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:52:1
   |
LL | fn multi_byte_chars_tada() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:54:1
   |
LL | macro_rules! macro_that_makes_function {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:58:7
   |
LL |       fn my_macro_created_function() {}
   |       ^ help: make this item public: `pub`
...
LL | macro_that_makes_function!();
   | ---------------------------- in this macro invocation
   |
   = note: this error originates in the macro `macro_that_makes_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:58:7
   |
LL |       fn my_macro_created_function() {}
   |       ^
...
LL | macro_that_makes_function!();
   | ---------------------------- in this macro invocation
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:58:7
   |
LL |       fn my_macro_created_function() {}
   |       ^
...
LL | macro_that_makes_function!();
   | ---------------------------- in this macro invocation
   = note: this error originates in the macro `macro_that_makes_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:66:1
   |
LL | fn alone() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:66:1
   |
LL | fn alone() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:66:1
   |
LL | fn alone() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:72:1
   |
LL | fn table() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:72:1
   |
LL | fn table() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:72:1
   |
LL | fn table() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:79:1
   |
LL | fn codeblock() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:79:1
   |
LL | fn codeblock() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:79:1
   |
LL | fn codeblock() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:83:1
   |
LL | fn inline() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:83:1
   |
LL | fn inline() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:83:1
   |
LL | fn inline() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:87:1
   |
LL | fn url() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:87:1
   |
LL | fn url() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:87:1
   |
LL | fn url() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:96:1
   |
LL | fn mixed() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:96:1
   |
LL | fn mixed() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:96:1
   |
LL | fn mixed() {}
   | ^

error: item must be `pub`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:98:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:98:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/doc/doc_comment_double_space_linebreaks.rs:98:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 33 previous errors

