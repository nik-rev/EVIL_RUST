error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:6:1
   |
LL | fn rust_abi_fn_one(arg_one: u32, arg_two: usize) {}
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:6:1
   |
LL | fn rust_abi_fn_one(arg_one: u32, arg_two: usize) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:6:1
   |
LL | fn rust_abi_fn_one(arg_one: u32, arg_two: usize) {}
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:6:20
   |
LL | fn rust_abi_fn_one(arg_one: u32, arg_two: usize) {}
   |                    ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:6:34
   |
LL | fn rust_abi_fn_one(arg_one: u32, arg_two: usize) {}
   |                                  ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:10:5
   |
LL | pub fn rust_abi_fn_two(arg_one: u32, arg_two: usize) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:10:5
   |
LL | pub fn rust_abi_fn_two(arg_one: u32, arg_two: usize) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:10:24
   |
LL | pub fn rust_abi_fn_two(arg_one: u32, arg_two: usize) {}
   |                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:10:38
   |
LL | pub fn rust_abi_fn_two(arg_one: u32, arg_two: usize) {}
   |                                      ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:16:33
   |
LL | pub unsafe fn rust_abi_fn_three(arg_one: u32, arg_two: usize) {}
   |                                 ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:16:47
   |
LL | pub unsafe fn rust_abi_fn_three(arg_one: u32, arg_two: usize) {}
   |                                               ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:22:1
   |
LL | unsafe fn rust_abi_fn_four(arg_one: u32, arg_two: usize) {}
   | ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:22:28
   |
LL | unsafe fn rust_abi_fn_four(arg_one: u32, arg_two: usize) {}
   |                            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:22:42
   |
LL | unsafe fn rust_abi_fn_four(arg_one: u32, arg_two: usize) {}
   |                                          ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:26:1
   |
LL | fn rust_abi_multiline_function_really_long_name_to_overflow_args_to_multiple_lines(
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:26:1
   |
LL | fn rust_abi_multiline_function_really_long_name_to_overflow_args_to_multiple_lines(
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:26:1
   |
LL | fn rust_abi_multiline_function_really_long_name_to_overflow_args_to_multiple_lines(
   | ^

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:28:5
   |
LL |     arg_one: u32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:29:5
   |
LL |     arg_two: usize,
   |     ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:37:1
   |
LL | extern "Rust" fn rust_abi_fn_explicit_opt_in(arg_one: u32, arg_two: usize) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:37:1
   |
LL | extern "Rust" fn rust_abi_fn_explicit_opt_in(arg_one: u32, arg_two: usize) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:37:1
   |
LL | extern "Rust" fn rust_abi_fn_explicit_opt_in(arg_one: u32, arg_two: usize) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:37:46
   |
LL | extern "Rust" fn rust_abi_fn_explicit_opt_in(arg_one: u32, arg_two: usize) {}
   |                                              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:37:60
   |
LL | extern "Rust" fn rust_abi_fn_explicit_opt_in(arg_one: u32, arg_two: usize) {}
   |                                                            ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:39:1
   |
LL | fn rust_abi_fn_again(arg_one: u32, arg_two: usize) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:39:1
   |
LL | fn rust_abi_fn_again(arg_one: u32, arg_two: usize) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:39:1
   |
LL | fn rust_abi_fn_again(arg_one: u32, arg_two: usize) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:39:22
   |
LL | fn rust_abi_fn_again(arg_one: u32, arg_two: usize) {}
   |                      ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:39:36
   |
LL | fn rust_abi_fn_again(arg_one: u32, arg_two: usize) {}
   |                                    ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:42:1
   |
LL | extern "C" fn c_abi_fn(arg_one: u32, arg_two: usize) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:42:1
   |
LL | extern "C" fn c_abi_fn(arg_one: u32, arg_two: usize) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:42:1
   |
LL | extern "C" fn c_abi_fn(arg_one: u32, arg_two: usize) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:42:24
   |
LL | extern "C" fn c_abi_fn(arg_one: u32, arg_two: usize) {}
   |                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:42:38
   |
LL | extern "C" fn c_abi_fn(arg_one: u32, arg_two: usize) {}
   |                                      ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:44:1
   |
LL | extern "C" fn c_abi_fn_again(arg_one: u32, arg_two: usize) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:44:1
   |
LL | extern "C" fn c_abi_fn_again(arg_one: u32, arg_two: usize) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:44:1
   |
LL | extern "C" fn c_abi_fn_again(arg_one: u32, arg_two: usize) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:44:30
   |
LL | extern "C" fn c_abi_fn_again(arg_one: u32, arg_two: usize) {}
   |                              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/no_mangle_with_rust_abi.rs:44:44
   |
LL | extern "C" fn c_abi_fn_again(arg_one: u32, arg_two: usize) {}
   |                                            ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:47:5
   |
LL |     fn c_abi_in_block(arg_one: u32, arg_two: usize);
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:47:5
   |
LL |     fn c_abi_in_block(arg_one: u32, arg_two: usize);
   |     ^

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:50:1
   |
LL | mod r#fn {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:52:5
   |
LL |     pub(in super::r#fn) fn with_some_fn_around() {}
   |     ^^^^^^^^^^^^^^^^^^^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:52:25
   |
LL |     pub(in super::r#fn) fn with_some_fn_around() {}
   |                         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:52:25
   |
LL |     pub(in super::r#fn) fn with_some_fn_around() {}
   |                         ^

error: item must be `pub`
  --> tests/ui/no_mangle_with_rust_abi.rs:56:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:56:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/no_mangle_with_rust_abi.rs:56:1
   |
LL | fn main() {
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 42 previous errors

