error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/redundant_allocation_fixable.rs:15:1
   |
LL | mod outer_box {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:21:9
   |
LL |     pub fn box_test1<T>(foo: Box<&T>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:21:9
   |
LL |     pub fn box_test1<T>(foo: Box<&T>) {}
   |         ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:21:25
   |
LL |     pub fn box_test1<T>(foo: Box<&T>) {}
   |                         ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:21:34
   |
LL |     pub fn box_test1<T>(foo: Box<&T>) {}
   |                                  ^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:24:9
   |
LL |     pub fn box_test2(foo: Box<&MyStruct>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:24:9
   |
LL |     pub fn box_test2(foo: Box<&MyStruct>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:24:22
   |
LL |     pub fn box_test2(foo: Box<&MyStruct>) {}
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:24:31
   |
LL |     pub fn box_test2(foo: Box<&MyStruct>) {}
   |                               ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:27:9
   |
LL |     pub fn box_test3(foo: Box<&MyEnum>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:27:9
   |
LL |     pub fn box_test3(foo: Box<&MyEnum>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:27:22
   |
LL |     pub fn box_test3(foo: Box<&MyEnum>) {}
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:27:31
   |
LL |     pub fn box_test3(foo: Box<&MyEnum>) {}
   |                               ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:30:9
   |
LL |     pub fn box_test4_neg(foo: Box<SubT<&usize>>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:30:9
   |
LL |     pub fn box_test4_neg(foo: Box<SubT<&usize>>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:30:26
   |
LL |     pub fn box_test4_neg(foo: Box<SubT<&usize>>) {}
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:30:40
   |
LL |     pub fn box_test4_neg(foo: Box<SubT<&usize>>) {}
   |                                        ^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:32:9
   |
LL |     pub fn box_test5<T>(foo: Box<Box<T>>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:32:9
   |
LL |     pub fn box_test5<T>(foo: Box<Box<T>>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:32:25
   |
LL |     pub fn box_test5<T>(foo: Box<Box<T>>) {}
   |                         ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/redundant_allocation_fixable.rs:36:1
   |
LL | mod outer_rc {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:42:9
   |
LL |     pub fn rc_test1<T>(foo: Rc<&T>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:42:9
   |
LL |     pub fn rc_test1<T>(foo: Rc<&T>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:42:24
   |
LL |     pub fn rc_test1<T>(foo: Rc<&T>) {}
   |                        ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:42:32
   |
LL |     pub fn rc_test1<T>(foo: Rc<&T>) {}
   |                                ^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:45:9
   |
LL |     pub fn rc_test2(foo: Rc<&MyStruct>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:45:9
   |
LL |     pub fn rc_test2(foo: Rc<&MyStruct>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:45:21
   |
LL |     pub fn rc_test2(foo: Rc<&MyStruct>) {}
   |                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:45:29
   |
LL |     pub fn rc_test2(foo: Rc<&MyStruct>) {}
   |                             ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:48:9
   |
LL |     pub fn rc_test3(foo: Rc<&MyEnum>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:48:9
   |
LL |     pub fn rc_test3(foo: Rc<&MyEnum>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:48:21
   |
LL |     pub fn rc_test3(foo: Rc<&MyEnum>) {}
   |                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:48:29
   |
LL |     pub fn rc_test3(foo: Rc<&MyEnum>) {}
   |                             ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:51:9
   |
LL |     pub fn rc_test4_neg(foo: Rc<SubT<&usize>>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:51:9
   |
LL |     pub fn rc_test4_neg(foo: Rc<SubT<&usize>>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:51:25
   |
LL |     pub fn rc_test4_neg(foo: Rc<SubT<&usize>>) {}
   |                         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:51:38
   |
LL |     pub fn rc_test4_neg(foo: Rc<SubT<&usize>>) {}
   |                                      ^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:53:9
   |
LL |     pub fn rc_test6(a: Rc<Rc<bool>>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:53:9
   |
LL |     pub fn rc_test6(a: Rc<Rc<bool>>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:53:21
   |
LL |     pub fn rc_test6(a: Rc<Rc<bool>>) {}
   |                     ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/redundant_allocation_fixable.rs:57:1
   |
LL | mod outer_arc {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:63:9
   |
LL |     pub fn arc_test1<T>(foo: Arc<&T>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:63:9
   |
LL |     pub fn arc_test1<T>(foo: Arc<&T>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:63:25
   |
LL |     pub fn arc_test1<T>(foo: Arc<&T>) {}
   |                         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:63:34
   |
LL |     pub fn arc_test1<T>(foo: Arc<&T>) {}
   |                                  ^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:66:9
   |
LL |     pub fn arc_test2(foo: Arc<&MyStruct>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:66:9
   |
LL |     pub fn arc_test2(foo: Arc<&MyStruct>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:66:22
   |
LL |     pub fn arc_test2(foo: Arc<&MyStruct>) {}
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:66:31
   |
LL |     pub fn arc_test2(foo: Arc<&MyStruct>) {}
   |                               ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:69:9
   |
LL |     pub fn arc_test3(foo: Arc<&MyEnum>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:69:9
   |
LL |     pub fn arc_test3(foo: Arc<&MyEnum>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:69:22
   |
LL |     pub fn arc_test3(foo: Arc<&MyEnum>) {}
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:69:31
   |
LL |     pub fn arc_test3(foo: Arc<&MyEnum>) {}
   |                               ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:72:9
   |
LL |     pub fn arc_test4_neg(foo: Arc<SubT<&usize>>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:72:9
   |
LL |     pub fn arc_test4_neg(foo: Arc<SubT<&usize>>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:72:26
   |
LL |     pub fn arc_test4_neg(foo: Arc<SubT<&usize>>) {}
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/redundant_allocation_fixable.rs:72:40
   |
LL |     pub fn arc_test4_neg(foo: Arc<SubT<&usize>>) {}
   |                                        ^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:74:9
   |
LL |     pub fn arc_test7(a: Arc<Arc<bool>>) {}
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:74:9
   |
LL |     pub fn arc_test7(a: Arc<Arc<bool>>) {}
   |         ^

error: parameter must be `mut`
  --> tests/ui/redundant_allocation_fixable.rs:74:22
   |
LL |     pub fn arc_test7(a: Arc<Arc<bool>>) {}
   |                      ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/redundant_allocation_fixable.rs:78:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:78:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/redundant_allocation_fixable.rs:78:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 51 previous errors

