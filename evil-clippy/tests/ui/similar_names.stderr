error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/similar_names.rs:11:1
   |
LL | struct Foo {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/similar_names.rs:16:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/similar_names.rs:16:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/similar_names.rs:16:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:17:9
   |
LL |     let specter: i32;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:18:9
   |
LL |     let spectre: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:21:9
   |
LL |     let apple: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:22:9
   |
LL |     let bpple: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:23:9
   |
LL |     let cpple: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:25:9
   |
LL |     let a_bar: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:26:9
   |
LL |     let b_bar: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:27:9
   |
LL |     let c_bar: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:29:9
   |
LL |     let items = [5];
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/similar_names.rs:30:17
   |
LL |     for item in &items {
   |                 ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:34:9
   |
LL |     let foo_x: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:35:9
   |
LL |     let foo_y: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:37:9
   |
LL |     let rhs: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:38:9
   |
LL |     let lhs: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:40:9
   |
LL |     let bla_rhs: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:41:9
   |
LL |     let bla_lhs: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:43:9
   |
LL |     let blubrhs: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:44:9
   |
LL |     let blublhs: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:46:9
   |
LL |     let blubx: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:47:9
   |
LL |     let bluby: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:50:9
   |
LL |     let cake: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:51:9
   |
LL |     let cakes: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:52:9
   |
LL |     let coke: i32;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/similar_names.rs:57:19
   |
LL |         rabbit => panic!(),
   |                   ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/similar_names.rs:57:19
   |
LL |         rabbit => panic!(),
   |                   ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/similar_names.rs:57:19
   |
LL |         rabbit => panic!(),
   |                   ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/similar_names.rs:59:9
   |
LL |     let cheese: i32;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/similar_names.rs:62:25
   |
LL |         (cheese2, 2) => panic!(),
   |                         ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/similar_names.rs:62:25
   |
LL |         (cheese2, 2) => panic!(),
   |                         ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/similar_names.rs:62:25
   |
LL |         (cheese2, 2) => panic!(),
   |                         ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/similar_names.rs:65:9
   |
LL |     let ipv4: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:66:9
   |
LL |     let ipv6: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:67:9
   |
LL |     let abcd1: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:68:9
   |
LL |     let abdc2: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:69:9
   |
LL |     let xyz1abc: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:70:9
   |
LL |     let xyz2abc: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:71:9
   |
LL |     let xyzeabc: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:74:9
   |
LL |     let parser: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:75:9
   |
LL |     let parsed: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:76:9
   |
LL |     let parsee: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:79:9
   |
LL |     let setter: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:80:9
   |
LL |     let getter: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:81:9
   |
LL |     let tx1: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:82:9
   |
LL |     let rx1: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:83:9
   |
LL |     let tx_cake: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:84:9
   |
LL |     let rx_cake: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:87:9
   |
LL |     let wparam: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:88:9
   |
LL |     let lparam: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:90:9
   |
LL |     let iter: i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:91:9
   |
LL |     let item: i32;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/similar_names.rs:94:1
   |
LL | fn foo() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/similar_names.rs:94:1
   |
LL | fn foo() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/similar_names.rs:94:1
   |
LL | fn foo() {
   | ^

error: variable must be `mut`
  --> tests/ui/similar_names.rs:95:15
   |
LL |     let Foo { apple, bpple } = unimplemented!();
   |               ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:95:22
   |
LL |     let Foo { apple, bpple } = unimplemented!();
   |                      ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:97:16
   |
LL |         apple: spring,
   |                ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:98:16
   |
LL |         bpple: sprang,
   |                ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/similar_names.rs:107:1
   |
LL | pub(crate) struct DirSizes {
   | ^^^^^^^^^^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^

error: function must be `unsafe`
  --> tests/ui/similar_names.rs:106:7
   |
LL | #[derive(Debug, Clone)]
   |       ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/similar_names.rs:106:7
   |
LL | #[derive(Debug, Clone)]
   |       ^  ----- in this derive macro expansion

error: parameter must be `mut`
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^

error: references are not allowed
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^

error: references are not allowed
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: references are not allowed
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: references are not allowed
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: references are not allowed
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: references are not allowed
  --> tests/ui/similar_names.rs:106:10
   |
LL | #[derive(Debug, Clone)]
   |          ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: references are not allowed
  --> tests/ui/similar_names.rs:108:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
LL | pub(crate) struct DirSizes {
LL |     pub(crate) total_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:109:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) numb_bins: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:110:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) total_bin_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:111:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) total_reg_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:112:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) total_git_db_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:113:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) total_git_repos_bare_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:114:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) numb_git_repos_bare_repos: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:115:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) numb_git_checkouts: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:116:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) total_git_chk_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:117:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) total_reg_cache_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:118:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) total_reg_src_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:119:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) numb_reg_cache_entries: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:120:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) numb_reg_src_checkouts: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:120:5
   |
LL | #[derive(Debug, Clone)]
   |          ----- in this derive macro expansion
...
LL |     pub(crate) numb_reg_src_checkouts: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/similar_names.rs:106:17
   |
LL | #[derive(Debug, Clone)]
   |                 ^

error: function must be `unsafe`
  --> tests/ui/similar_names.rs:106:14
   |
LL | #[derive(Debug, Clone)]
   |              ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/similar_names.rs:106:14
   |
LL | #[derive(Debug, Clone)]
   |              ^  ----- in this derive macro expansion

error: parameter must be `mut`
  --> tests/ui/similar_names.rs:106:17
   |
LL | #[derive(Debug, Clone)]
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/similar_names.rs:106:17
   |
LL | #[derive(Debug, Clone)]
   |                 ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/similar_names.rs:108:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
LL | pub(crate) struct DirSizes {
LL |     pub(crate) total_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:109:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) numb_bins: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:110:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) total_bin_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:111:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) total_reg_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:112:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) total_git_db_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:113:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) total_git_repos_bare_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:114:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) numb_git_repos_bare_repos: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:115:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) numb_git_checkouts: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:116:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) total_git_chk_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:117:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) total_reg_cache_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:118:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) total_reg_src_size: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:119:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) numb_reg_cache_entries: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/similar_names.rs:120:5
   |
LL | #[derive(Debug, Clone)]
   |                 ----- in this derive macro expansion
...
LL |     pub(crate) numb_reg_src_checkouts: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/similar_names.rs:123:1
   |
LL | fn ignore_underscore_prefix() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/similar_names.rs:123:1
   |
LL | fn ignore_underscore_prefix() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/similar_names.rs:123:1
   |
LL | fn ignore_underscore_prefix() {
   | ^

error: variable must be `mut`
  --> tests/ui/similar_names.rs:124:9
   |
LL |     let hello: ();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/similar_names.rs:125:9
   |
LL |     let _hello: ();
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 110 previous errors

