error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:4:1
   |
LL | struct S {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:9:1
   |
LL | struct T {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:8:10
   |
LL | #[derive(Clone, Copy)]
   |          ^

error: function must be `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:8:7
   |
LL | #[derive(Clone, Copy)]
   |       ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:8:7
   |
LL | #[derive(Clone, Copy)]
   |       ^  ----- in this derive macro expansion
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:8:10
   |
LL | #[derive(Clone, Copy)]
   |          ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:8:10
   |
LL | #[derive(Clone, Copy)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:8:17
   |
LL | #[derive(Clone, Copy)]
   |                 ^

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:13:1
   |
LL | struct U {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:17:1
   |
LL | impl Clone for U {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:18:5
   |
LL |     fn clone(&self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:18:5
   |
LL |     fn clone(&self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:18:15
   |
LL |     fn clone(&self) -> Self {
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:18:14
   |
LL |     fn clone(&self) -> Self {
   |              ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:25:1
   |
LL | struct V {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:24:10
   |
LL | #[derive(Copy)]
   |          ^

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:29:1
   |
LL | struct W {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:34:1
   |
LL | impl Clone for V {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:35:5
   |
LL |     fn clone(&self) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:35:5
   |
LL |     fn clone(&self) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:35:15
   |
LL |     fn clone(&self) -> Self {
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:35:14
   |
LL |     fn clone(&self) -> Self {
   |              ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:42:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:42:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:42:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:44:9
   |
LL |     let a = S { f: String::from("foo") };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:49:9
   |
LL |     let c = &mut S { ..b };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:49:13
   |
LL |     let c = &mut S { ..b };
   |             ^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:53:9
   |
LL |     let d = S { f: String::from("foo") };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:54:9
   |
LL |     let e = &mut S { ..d };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:54:13
   |
LL |     let e = &mut S { ..d };
   |             ^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:57:9
   |
LL |     let f = S { f: String::from("foo") };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:58:9
   |
LL |     let g = &S { ..f };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:58:13
   |
LL |     let g = &S { ..f };
   |             ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:62:9
   |
LL |     let h = &mut S {
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:62:13
   |
LL |       let h = &mut S {
   |  _____________^
LL | |
LL | |         ..*Box::new(S { f: String::from("foo") })
LL | |     };
   | |_____^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:68:9
   |
LL |     let m = T { f: 17 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:69:9
   |
LL |     let n = &T { ..m };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:69:13
   |
LL |     let n = &T { ..m };
   |             ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:72:9
   |
LL |     let o = &mut T { ..m };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:72:13
   |
LL |     let o = &mut T { ..m };
   |             ^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:74:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:74:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:74:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:74:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:74:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:77:9
   |
LL |     let o = &mut T { ..m } as *mut T;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:77:13
   |
LL |     let o = &mut T { ..m } as *mut T;
   |             ^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:78:14
   |
LL |     unsafe { &mut *o }.f = 32;
   |              ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:79:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:79:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:79:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:79:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:79:5
   |
LL |     assert_eq!(m.f, 17);
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:82:9
   |
LL |     let p = &mut T {
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:82:13
   |
LL |       let p = &mut T {
   |  _____________^
LL | |
LL | |         ..*Box::new(T { f: 5 })
LL | |     };
   | |_____^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:88:9
   |
LL |     let q = W { f1: 42, f2: 1337 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:89:9
   |
LL |     let r = W { f1: q.f1, f2: q.f2 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:93:9
   |
LL |     let s = W { f1: 1337, f2: 42 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:94:9
   |
LL |     let t = W { f1: s.f1, f2: r.f2 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:97:9
   |
LL |     let u = W { f1: s.f2, f2: s.f1 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:100:9
   |
LL |     let v = W { f1: 42, f2: 1337 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:101:9
   |
LL |     let w = W { f1: v.f1, ..v };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:105:9
   |
LL |     let x = W { f1: 42, f2: 1337 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:106:9
   |
LL |     let y = W { f1: w.f1, ..x };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:109:9
   |
LL |     let r1 = 0..5;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:110:9
   |
LL |     let r2 = r1.start..r1.end;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:117:1
   |
LL | fn references() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:117:1
   |
LL | fn references() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:117:1
   |
LL | fn references() {
   | ^

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:119:9
   |
LL |     let a = W { f1: 42, f2: 1337 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:120:9
   |
LL |     let b = &mut W { f1: a.f1, f2: a.f2 };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:120:13
   |
LL |     let b = &mut W { f1: a.f1, f2: a.f2 };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:123:9
   |
LL |     let c = W { f1: 42, f2: 1337 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:124:9
   |
LL |     let d = &W { f1: c.f1, f2: c.f2 };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:124:13
   |
LL |     let d = &W { f1: c.f1, f2: c.f2 };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:128:9
   |
LL |     let e = W { f1: 42, f2: 1337 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:129:9
   |
LL |     let f = &mut W { f1: e.f1, ..e };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:129:13
   |
LL |     let f = &mut W { f1: e.f1, ..e };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:132:9
   |
LL |     let g = W { f1: 42, f2: 1337 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:133:9
   |
LL |     let h = &W { f1: g.f1, ..g };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:133:13
   |
LL |     let h = &W { f1: g.f1, ..g };
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:137:9
   |
LL |     let i = V { f: 0x1701d };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:138:9
   |
LL |     let j = &V { ..i };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:138:13
   |
LL |     let j = &V { ..i };
   |             ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:141:9
   |
LL |     let k = V { f: 0x1701d };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:142:9
   |
LL |     let l = &V { f: k.f };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_struct_initialization.rs:142:13
   |
LL |     let l = &V { f: k.f };
   |             ^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:145:1
   |
LL | fn shorthand() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:145:1
   |
LL | fn shorthand() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_struct_initialization.rs:145:1
   |
LL | fn shorthand() {
   | ^

error: item must be `pub`
  --> tests/ui/unnecessary_struct_initialization.rs:146:5
   |
LL |     struct S1 {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:151:9
   |
LL |     let a = 42;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:152:9
   |
LL |     let s = S1 { a: 3, b: 4 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/unnecessary_struct_initialization.rs:155:9
   |
LL |     let s = S1 { a, b: s.b };
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 93 previous errors

