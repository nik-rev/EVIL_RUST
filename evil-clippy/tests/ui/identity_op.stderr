error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/identity_op.rs:16:1
   |
LL | const ONE: i64 = 1;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/identity_op.rs:17:1
   |
LL | const NEG_ONE: i64 = -1;
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/identity_op.rs:18:1
   |
LL | const ZERO: i64 = 0;
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/identity_op.rs:20:1
   |
LL | struct A(String);
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/identity_op.rs:22:1
   |
LL | impl std::ops::Shl<i32> for A {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/identity_op.rs:24:5
   |
LL |     fn shl(mut self, other: i32) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/identity_op.rs:24:5
   |
LL |     fn shl(mut self, other: i32) -> Self {
   |     ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/identity_op.rs:24:22
   |
LL |     fn shl(mut self, other: i32) -> Self {
   |                      ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: item must be `pub`
  --> tests/ui/identity_op.rs:30:1
   |
LL | struct Length(u8);
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/identity_op.rs:31:1
   |
LL | struct Meter;
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/identity_op.rs:33:1
   |
LL | impl core::ops::Mul<Meter> for u8 {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/identity_op.rs:35:5
   |
LL |     fn mul(self, _: Meter) -> Length {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/identity_op.rs:35:5
   |
LL |     fn mul(self, _: Meter) -> Length {
   |     ^

error: parameter must be `mut`
  --> tests/ui/identity_op.rs:35:12
   |
LL |     fn mul(self, _: Meter) -> Length {
   |            ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/identity_op.rs:41:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/identity_op.rs:41:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/identity_op.rs:41:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/identity_op.rs:42:9
   |
LL |     let x = 0;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:76:9
   |
LL |     let u: u8 = 0;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/identity_op.rs:91:5
   |
LL |     &x >> 0;
   |     ^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/identity_op.rs:94:10
   |
LL |     x >> &0;
   |          ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:99:9
   |
LL |     let b = a << 0; // no error: non-integer
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:123:9
   |
LL |     let a = 0;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:124:9
   |
LL |     let b = true;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/identity_op.rs:157:5
   |
LL |     fn f(_: i32) {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/identity_op.rs:157:5
   |
LL |     fn f(_: i32) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/identity_op.rs:157:5
   |
LL |     fn f(_: i32) {
   |     ^

error: item must be `pub`
  --> tests/ui/identity_op.rs:168:5
   |
LL |     const _: i32 = { 2 * 4 } + 0 + 3;
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/identity_op.rs:171:5
   |
LL |     const _: i32 = 0 + { 1 + 2 * 3 } + 3;
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:196:9
   |
LL |     let x = 0i32;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/identity_op.rs:197:18
   |
LL |     let _: i32 = &x + 0;
   |                  ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: function must be `unsafe`
  --> tests/ui/identity_op.rs:202:5
   |
LL | pub fn decide(a: bool, b: bool) -> u32 {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/identity_op.rs:202:5
   |
LL | pub fn decide(a: bool, b: bool) -> u32 {
   |     ^

error: parameter must be `mut`
  --> tests/ui/identity_op.rs:202:15
   |
LL | pub fn decide(a: bool, b: bool) -> u32 {
   |               ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/identity_op.rs:202:24
   |
LL | pub fn decide(a: bool, b: bool) -> u32 {
   |                        ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/identity_op.rs:212:1
   |
LL | fn issue_12050() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/identity_op.rs:212:1
   |
LL | fn issue_12050() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/identity_op.rs:212:1
   |
LL | fn issue_12050() {
   | ^

error: variable must be `mut`
  --> tests/ui/identity_op.rs:214:13
   |
LL |         let x = &0i32;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/identity_op.rs:214:17
   |
LL |         let x = &0i32;
   |                 ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:222:13
   |
LL |         let x = &&0i32;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/identity_op.rs:222:17
   |
LL |         let x = &&0i32;
   |                 ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:222:18
   |
LL |         let x = &&0i32;
   |                  ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:226:13
   |
LL |         let x = &&0i32;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/identity_op.rs:226:17
   |
LL |         let x = &&0i32;
   |                 ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:226:18
   |
LL |         let x = &&0i32;
   |                  ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:232:13
   |
LL |         let x = &&&0i32;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/identity_op.rs:232:17
   |
LL |         let x = &&&0i32;
   |                 ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:232:18
   |
LL |         let x = &&&0i32;
   |                  ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:232:19
   |
LL |         let x = &&&0i32;
   |                   ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:239:13
   |
LL |         let x = 0i32;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/identity_op.rs:240:23
   |
LL |         let _: i32 = *&x + 0;
   |                       ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:243:24
   |
LL |         let _: i32 = **&&x + 0;
   |                        ^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:243:25
   |
LL |         let _: i32 = **&&x + 0;
   |                         ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:246:23
   |
LL |         let _: i32 = *&*&x + 0;
   |                       ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:246:25
   |
LL |         let _: i32 = *&*&x + 0;
   |                         ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:249:24
   |
LL |         let _: i32 = **&&*&x + 0;
   |                        ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:249:25
   |
LL |         let _: i32 = **&&*&x + 0;
   |                         ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:249:27
   |
LL |         let _: i32 = **&&*&x + 0;
   |                           ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:255:13
   |
LL |         let x = &0i32;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/identity_op.rs:255:17
   |
LL |         let x = &0i32;
   |                 ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:256:24
   |
LL |         let _: i32 = **&&*&x + 0;
   |                        ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:256:25
   |
LL |         let _: i32 = **&&*&x + 0;
   |                         ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:256:27
   |
LL |         let _: i32 = **&&*&x + 0;
   |                           ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:259:24
   |
LL |         let _: i32 = **&&*&x + 0;
   |                        ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:259:25
   |
LL |         let _: i32 = **&&*&x + 0;
   |                         ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/identity_op.rs:259:27
   |
LL |         let _: i32 = **&&*&x + 0;
   |                           ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/identity_op.rs:264:1
   |
LL | fn issue_13470() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/identity_op.rs:264:1
   |
LL | fn issue_13470() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/identity_op.rs:264:1
   |
LL | fn issue_13470() {
   | ^

error: variable must be `mut`
  --> tests/ui/identity_op.rs:265:9
   |
LL |     let x = 1i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:266:9
   |
LL |     let y = 1i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:301:9
   |
LL |     let z = 1i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:310:9
   |
LL |     let x = 1i16;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/identity_op.rs:311:9
   |
LL |     let y = 1i16;
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 72 previous errors

