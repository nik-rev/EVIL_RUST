error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/set_contains_or_insert.rs:8:1
   |
LL | fn should_warn_hashset() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/set_contains_or_insert.rs:8:1
   |
LL | fn should_warn_hashset() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/set_contains_or_insert.rs:8:1
   |
LL | fn should_warn_hashset() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:10:9
   |
LL |     let value = 5;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:12:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:18:21
   |
LL |     if set.contains(&value) {
   |                     ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:24:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:29:23
   |
LL |     if !!set.contains(&value) {
   |                       ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:35:9
   |
LL |     if (&set).contains(&value) {
   |         ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:35:24
   |
LL |     if (&set).contains(&value) {
   |                        ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:40:9
   |
LL |     let borrow_value = &6;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:40:24
   |
LL |     let borrow_value = &6;
   |                        ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:46:9
   |
LL |     let borrow_set = &mut set;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:46:22
   |
LL |     let borrow_set = &mut set;
   |                      ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:47:29
   |
LL |     if !borrow_set.contains(&value) {
   |                             ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/set_contains_or_insert.rs:53:1
   |
LL | fn should_not_warn_hashset() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/set_contains_or_insert.rs:53:1
   |
LL | fn should_not_warn_hashset() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/set_contains_or_insert.rs:53:1
   |
LL | fn should_not_warn_hashset() {
   | ^

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:55:9
   |
LL |     let value = 5;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:56:9
   |
LL |     let another_value = 6;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:58:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:62:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:70:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:75:21
   |
LL |     if set.contains(&value) {
   |                     ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/set_contains_or_insert.rs:82:1
   |
LL | fn should_warn_btreeset() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/set_contains_or_insert.rs:82:1
   |
LL | fn should_warn_btreeset() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/set_contains_or_insert.rs:82:1
   |
LL | fn should_warn_btreeset() {
   | ^

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:84:9
   |
LL |     let value = 5;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:86:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:92:21
   |
LL |     if set.contains(&value) {
   |                     ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:98:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:103:23
   |
LL |     if !!set.contains(&value) {
   |                       ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:109:9
   |
LL |     if (&set).contains(&value) {
   |         ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:109:24
   |
LL |     if (&set).contains(&value) {
   |                        ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:114:9
   |
LL |     let borrow_value = &6;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:114:24
   |
LL |     let borrow_value = &6;
   |                        ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:120:9
   |
LL |     let borrow_set = &mut set;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:120:22
   |
LL |     let borrow_set = &mut set;
   |                      ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:121:29
   |
LL |     if !borrow_set.contains(&value) {
   |                             ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/set_contains_or_insert.rs:127:1
   |
LL | fn should_not_warn_btreeset() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/set_contains_or_insert.rs:127:1
   |
LL | fn should_not_warn_btreeset() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/set_contains_or_insert.rs:127:1
   |
LL | fn should_not_warn_btreeset() {
   | ^

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:129:9
   |
LL |     let value = 5;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/set_contains_or_insert.rs:130:9
   |
LL |     let another_value = 6;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:132:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:136:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:144:22
   |
LL |     if !set.contains(&value) {
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/set_contains_or_insert.rs:149:21
   |
LL |     if set.contains(&value) {
   |                     ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/set_contains_or_insert.rs:156:1
   |
LL | fn simply_true() -> bool {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/set_contains_or_insert.rs:156:1
   |
LL | fn simply_true() -> bool {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/set_contains_or_insert.rs:156:1
   |
LL | fn simply_true() -> bool {
   | ^

error: item must be `pub`
  --> tests/ui/set_contains_or_insert.rs:161:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/set_contains_or_insert.rs:161:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/set_contains_or_insert.rs:161:1
   |
LL | fn main() {
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 52 previous errors

