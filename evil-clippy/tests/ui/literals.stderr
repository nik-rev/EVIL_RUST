error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/literals.rs:10:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/literals.rs:10:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/literals.rs:10:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/literals.rs:11:9
   |
LL |     let ok1 = 0xABCD;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:12:9
   |
LL |     let ok3 = 0xab_cd;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:13:9
   |
LL |     let ok4 = 0xab_cd_i32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:16:9
   |
LL |     let ok5 = 0xAB_CD_u32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:19:9
   |
LL |     let ok5 = 0xAB_CD_isize;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:22:9
   |
LL |     let fail1 = 0xabCD;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:25:9
   |
LL |     let fail2 = 0xabCD_u32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:29:9
   |
LL |     let fail2 = 0xabCD_isize;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:33:9
   |
LL |     let fail2 = 0xab_CD_isize;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:37:9
   |
LL |     let fail_multi_zero = 000_123usize;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:41:9
   |
LL |     let ok9 = 0;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:42:9
   |
LL |     let ok10 = 0_i64;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:45:9
   |
LL |     let fail8 = 0123;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:48:9
   |
LL |     let ok11 = 0o123;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:49:9
   |
LL |     let ok12 = 0b10_1010;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:51:9
   |
LL |     let ok13 = 0xab_abcd;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:52:9
   |
LL |     let ok14 = 0xBAFE_BAFE;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:53:9
   |
LL |     let ok15 = 0xab_cabc_abca_bcab_cabc;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:54:9
   |
LL |     let ok16 = 0xFE_BAFE_ABAB_ABCD;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:55:9
   |
LL |     let ok17 = 0x123_4567_8901_usize;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:58:9
   |
LL |     let ok18 = 0xF;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:60:9
   |
LL |     let fail19 = 12_3456_21;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:63:9
   |
LL |     let fail22 = 3__4___23;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:66:9
   |
LL |     let fail23 = 3__16___23;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:69:9
   |
LL |     let fail24 = 0xAB_ABC_AB;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:72:9
   |
LL |     let fail25 = 0b01_100_101;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:73:9
   |
LL |     let ok26 = 0x6_A0_BF;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/literals.rs:74:9
   |
LL |     let ok27 = 0b1_0010_0101;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/literals.rs:77:1
   |
LL | fn issue9651() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/literals.rs:77:1
   |
LL | fn issue9651() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/literals.rs:77:1
   |
LL | fn issue9651() {
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 36 previous errors

