error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:3:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:3:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:3:1
   |
LL | fn main() {}
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:5:1
   |
LL | fn struct_types() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:5:1
   |
LL | fn struct_types() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:5:1
   |
LL | fn struct_types() {
   | ^

error: item must be `pub`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:6:5
   |
LL |     struct Struct<'a> {
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:7:20
   |
LL |         ref_inner: &'a Option<i32>,
   |                    ^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: variable must be `mut`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:9:9
   |
LL |     let ref_value = &Struct { ref_inner: &Some(42) };
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:9:21
   |
LL |     let ref_value = &Struct { ref_inner: &Some(42) };
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:9:42
   |
LL |     let ref_value = &Struct { ref_inner: &Some(42) };
   |                                          ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: parameter must be `mut`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:22:10
   |
LL |     let &Struct { .. } = ref_value;
   |          ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:28:1
   |
LL | fn struct_enum_variants() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:28:1
   |
LL | fn struct_enum_variants() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:28:1
   |
LL | fn struct_enum_variants() {
   | ^

error: item must be `pub`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:29:5
   |
LL |     enum StructEnum<'a> {
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:31:26
   |
LL |         Var { inner_ref: &'a Option<i32> },
   |                          ^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: variable must be `mut`
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:33:9
   |
LL |     let ref_value = &StructEnum::Var { inner_ref: &Some(42) };
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:33:21
   |
LL |     let ref_value = &StructEnum::Var { inner_ref: &Some(42) };
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/pattern_type_mismatch/pattern_structs.rs:33:51
   |
LL |     let ref_value = &StructEnum::Var { inner_ref: &Some(42) };
   |                                                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 21 previous errors

