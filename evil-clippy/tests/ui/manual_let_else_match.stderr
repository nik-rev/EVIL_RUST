error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:11:1
   |
LL | fn f() -> Result<u32, u32> {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:11:1
   |
LL | fn f() -> Result<u32, u32> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:11:1
   |
LL | fn f() -> Result<u32, u32> {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:15:1
   |
LL | fn g() -> Option<()> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:15:1
   |
LL | fn g() -> Option<()> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:15:1
   |
LL | fn g() -> Option<()> {
   | ^

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:19:1
   |
LL | fn h() -> (Option<()>, Option<()>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:19:1
   |
LL | fn h() -> (Option<()>, Option<()>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:19:1
   |
LL | fn h() -> (Option<()>, Option<()>) {
   | ^

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:23:1
   |
LL | enum Variant {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:29:1
   |
LL | fn build_enum() -> Variant {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:29:1
   |
LL | fn build_enum() -> Variant {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:29:1
   |
LL | fn build_enum() -> Variant {
   | ^

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:33:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:33:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:33:1
   |
LL | fn main() {}
   | ^

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:35:1
   |
LL | fn fire() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:35:1
   |
LL | fn fire() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:35:1
   |
LL | fn fire() {
   | ^

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:36:9
   |
LL |     let v = match g() {
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:42:9
   |
LL |     let v = match g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:50:13
   |
LL |         let v = match h() {
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:56:13
   |
LL |         let v = match build_enum() {
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:65:9
   |
LL |     let v = match f() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:72:9
   |
LL |     let v = match f().map_err(|_| ()) {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:78:9
   |
LL |     let f = Variant::Bar(1);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:80:9
   |
LL |     let _value = match f {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:86:9
   |
LL |     let _value = match Some(build_enum()) {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:92:9
   |
LL |     let data = [1_u8, 2, 3, 4, 0, 0, 0, 0];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:93:9
   |
LL |     let data = match data.as_slice() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:100:1
   |
LL | fn not_fire() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:100:1
   |
LL | fn not_fire() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:100:1
   |
LL | fn not_fire() {
   | ^

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:102:9
   |
LL |     let v = match h() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:103:14
   |
LL |         _ => panic!(),
   |              ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:103:14
   |
LL |         _ => panic!(),
   |              ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:103:14
   |
LL |         _ => panic!(),
   |              ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:109:9
   |
LL |     let v = match h() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:110:14
   |
LL |         _ => panic!(),
   |              ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:110:14
   |
LL |         _ => panic!(),
   |              ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:110:14
   |
LL |         _ => panic!(),
   |              ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:117:9
   |
LL |     let v = match f() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:123:9
   |
LL |     let v = match g() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:129:9
   |
LL |     let v = match f() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:130:28
   |
LL |         Err(v) if v > 0 => panic!(),
   |                            ^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:130:28
   |
LL |         Err(v) if v > 0 => panic!(),
   |                            ^^^^^^^^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:130:28
   |
LL |         Err(v) if v > 0 => panic!(),
   |                            ^^^^^^^^

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:135:9
   |
LL |     let v = match f() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:142:9
   |
LL |     let v = match build_enum() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:148:9
   |
LL |     let v = match Err(build_enum()) {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:156:9
   |
LL |     let v = match h() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:161:9
   |
LL |     let v = match build_enum() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:166:9
   |
LL |     let data = [1_u8, 2, 3, 4, 0, 0, 0, 0];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:167:9
   |
LL |     let data = match data.as_slice() {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_let_else_match.rs:173:1
   |
LL | fn issue11579() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_let_else_match.rs:173:1
   |
LL | fn issue11579() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_let_else_match.rs:173:1
   |
LL | fn issue11579() {
   | ^

error: variable must be `mut`
  --> tests/ui/manual_let_else_match.rs:174:9
   |
LL |     let msg = match Some("hi") {
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 51 previous errors

