error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/needless_character_iteration.rs:5:1
   |
LL | struct S {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: references are not allowed
  --> tests/ui/needless_character_iteration.rs:6:12
   |
LL |     field: &'static str,
   |            ^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/needless_character_iteration.rs:4:10
   |
LL | #[derive(Default)]
   |          ^

error: function must be `unsafe`
  --> tests/ui/needless_character_iteration.rs:4:7
   |
LL | #[derive(Default)]
   |       ^  ------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_character_iteration.rs:4:7
   |
LL | #[derive(Default)]
   |       ^  ------- in this derive macro expansion
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/needless_character_iteration.rs:9:1
   |
LL | impl S {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_character_iteration.rs:10:5
   |
LL |     fn field(&self) -> &str {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_character_iteration.rs:10:5
   |
LL |     fn field(&self) -> &str {
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_character_iteration.rs:10:15
   |
LL |     fn field(&self) -> &str {
   |               ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/needless_character_iteration.rs:10:14
   |
LL |     fn field(&self) -> &str {
   |              ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/needless_character_iteration.rs:10:24
   |
LL |     fn field(&self) -> &str {
   |                        ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/needless_character_iteration.rs:15:1
   |
LL | fn magic(_: char) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_character_iteration.rs:15:1
   |
LL | fn magic(_: char) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_character_iteration.rs:15:1
   |
LL | fn magic(_: char) {}
   | ^

error: item must be `pub`
  --> tests/ui/needless_character_iteration.rs:17:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_character_iteration.rs:17:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_character_iteration.rs:17:1
   |
LL | fn main() {
   | ^

error: references are not allowed
  --> tests/ui/needless_character_iteration.rs:24:42
   |
LL |     "foo".chars().all(|c| char::is_ascii(&c));
   |                                          ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/needless_character_iteration.rs:27:43
   |
LL |     "foo".chars().any(|c| !char::is_ascii(&c));
   |                                           ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/needless_character_iteration.rs:30:9
   |
LL |     let s = String::new();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/needless_character_iteration.rs:40:13
   |
LL |         let x = c;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/needless_character_iteration.rs:46:13
   |
LL |         let x = c;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/needless_character_iteration.rs:55:13
   |
LL |         let x = c;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_character_iteration.rs:64:54
   |
LL |     "foo".chars().map(|c| c).all(|c| !char::is_ascii(&c));
   |                                                      ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 24 previous errors

