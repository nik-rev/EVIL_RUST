error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/as_ptr_cast_mut.rs:6:1
   |
LL | struct MutPtrWrapper(Vec<u8>);
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/as_ptr_cast_mut.rs:7:1
   |
LL | impl MutPtrWrapper {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/as_ptr_cast_mut.rs:8:5
   |
LL |     fn as_ptr(&mut self) -> *const u8 {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/as_ptr_cast_mut.rs:8:5
   |
LL |     fn as_ptr(&mut self) -> *const u8 {
   |     ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/as_ptr_cast_mut.rs:8:20
   |
LL |     fn as_ptr(&mut self) -> *const u8 {
   |                    ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/as_ptr_cast_mut.rs:8:15
   |
LL |     fn as_ptr(&mut self) -> *const u8 {
   |               ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/as_ptr_cast_mut.rs:13:1
   |
LL | struct Covariant<T>(*const T);
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/as_ptr_cast_mut.rs:14:1
   |
LL | impl<T> Covariant<T> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/as_ptr_cast_mut.rs:15:5
   |
LL |     fn as_ptr(self) -> *const T {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/as_ptr_cast_mut.rs:15:5
   |
LL |     fn as_ptr(self) -> *const T {
   |     ^

error: parameter must be `mut`
  --> tests/ui/as_ptr_cast_mut.rs:15:15
   |
LL |     fn as_ptr(self) -> *const T {
   |               ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/as_ptr_cast_mut.rs:20:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/as_ptr_cast_mut.rs:20:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/as_ptr_cast_mut.rs:20:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/as_ptr_cast_mut.rs:33:9
   |
LL |     let nn = std::ptr::NonNull::new(4 as *mut u8).unwrap();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/as_ptr_cast_mut.rs:40:9
   |
LL |     let ref_with_write_perm = Covariant(std::ptr::addr_of_mut!(local) as *const _);
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 17 previous errors

