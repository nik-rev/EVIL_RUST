error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/single_element_loop.rs:6:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/single_element_loop.rs:6:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/single_element_loop.rs:6:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/single_element_loop.rs:7:9
   |
LL |     let item1 = 2;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/single_element_loop.rs:8:17
   |
LL |     for item in &[item1] {
   |                 ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/single_element_loop.rs:10:9
   |
LL |         dbg!(item);
   |         ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/single_element_loop.rs:15:9
   |
LL |         dbg!(item);
   |         ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/single_element_loop.rs:18:17
   |
LL |     for item in &[0..5] {
   |                 ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/single_element_loop.rs:20:9
   |
LL |         dbg!(item);
   |         ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/single_element_loop.rs:25:9
   |
LL |         dbg!(item);
   |         ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/single_element_loop.rs:30:9
   |
LL |         dbg!(item);
   |         ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/single_element_loop.rs:35:9
   |
LL |         dbg!(item);
   |         ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/single_element_loop.rs:55:13
   |
LL |         let _f = |n: u32| {
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/single_element_loop.rs:58:21
   |
LL |                     dbg!(i);
   |                     ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/single_element_loop.rs:66:9
   |
LL |     let res_void: Result<bool, bool> = Ok(true);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/single_element_loop.rs:70:13
   |
LL |         let ptr: *const bool = std::ptr::null();
   |             ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 19 previous errors

