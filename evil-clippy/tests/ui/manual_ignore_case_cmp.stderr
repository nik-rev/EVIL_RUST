error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:12:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:12:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:12:1
   |
LL | fn main() {}
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:14:1
   |
LL | fn variants(a: &str, b: &str) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:14:1
   |
LL | fn variants(a: &str, b: &str) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:14:1
   |
LL | fn variants(a: &str, b: &str) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:14:13
   |
LL | fn variants(a: &str, b: &str) {
   |             ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:14:22
   |
LL | fn variants(a: &str, b: &str) {
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:14:16
   |
LL | fn variants(a: &str, b: &str) {
   |                ^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:14:25
   |
LL | fn variants(a: &str, b: &str) {
   |                         ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: variable must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:23:9
   |
LL |     let r = a.to_ascii_lowercase() == b.to_ascii_lowercase();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:25:9
   |
LL |     let r = r || a.to_ascii_uppercase() == b.to_ascii_uppercase();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:38:9
   |
LL |     let r = a.to_ascii_lowercase() != b.to_ascii_lowercase();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:40:9
   |
LL |     let r = r || a.to_ascii_uppercase() != b.to_ascii_uppercase();
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:46:1
   |
LL | fn unsupported(a: char, b: char) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:46:1
   |
LL | fn unsupported(a: char, b: char) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:46:1
   |
LL | fn unsupported(a: char, b: char) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:46:16
   |
LL | fn unsupported(a: char, b: char) {
   |                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:46:25
   |
LL | fn unsupported(a: char, b: char) {
   |                         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:48:56
   |
LL |     a.to_ascii_lowercase() == char::to_ascii_lowercase(&b);
   |                                                        ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:49:30
   |
LL |     char::to_ascii_lowercase(&a) == b.to_ascii_lowercase();
   |                              ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:50:30
   |
LL |     char::to_ascii_lowercase(&a) == char::to_ascii_lowercase(&b);
   |                              ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:50:62
   |
LL |     char::to_ascii_lowercase(&a) == char::to_ascii_lowercase(&b);
   |                                                              ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:53:1
   |
LL | fn char(a: char, b: char) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:53:1
   |
LL | fn char(a: char, b: char) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:53:1
   |
LL | fn char(a: char, b: char) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:53:9
   |
LL | fn char(a: char, b: char) {
   |         ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:53:18
   |
LL | fn char(a: char, b: char) {
   |                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:56:32
   |
LL |     a.to_ascii_lowercase() == *&b.to_ascii_lowercase();
   |                                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:57:6
   |
LL |     *&a.to_ascii_lowercase() == b.to_ascii_lowercase();
   |      ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:63:1
   |
LL | fn u8(a: u8, b: u8) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:63:1
   |
LL | fn u8(a: u8, b: u8) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:63:1
   |
LL | fn u8(a: u8, b: u8) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:63:7
   |
LL | fn u8(a: u8, b: u8) {
   |       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:63:14
   |
LL | fn u8(a: u8, b: u8) {
   |              ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:71:1
   |
LL | fn ref_str(a: &str, b: &str) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:71:1
   |
LL | fn ref_str(a: &str, b: &str) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:71:1
   |
LL | fn ref_str(a: &str, b: &str) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:71:12
   |
LL | fn ref_str(a: &str, b: &str) {
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:71:21
   |
LL | fn ref_str(a: &str, b: &str) {
   |                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:71:15
   |
LL | fn ref_str(a: &str, b: &str) {
   |               ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:71:24
   |
LL | fn ref_str(a: &str, b: &str) {
   |                        ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:81:1
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:81:1
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:81:1
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:81:16
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   |                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:81:26
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:81:19
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   |                   ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:81:20
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   |                    ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:81:29
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   |                             ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:81:30
   |
LL | fn ref_ref_str(a: &&str, b: &&str) {
   |                              ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:91:1
   |
LL | fn string(a: String, b: String) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:91:1
   |
LL | fn string(a: String, b: String) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:91:1
   |
LL | fn string(a: String, b: String) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:91:11
   |
LL | fn string(a: String, b: String) {
   |           ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:91:22
   |
LL | fn string(a: String, b: String) {
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:98:5
   |
LL |     &a.to_ascii_lowercase() == &b.to_ascii_lowercase();
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:98:32
   |
LL |     &a.to_ascii_lowercase() == &b.to_ascii_lowercase();
   |                                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:99:5
   |
LL |     &&a.to_ascii_lowercase() == &&b.to_ascii_lowercase();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:99:6
   |
LL |     &&a.to_ascii_lowercase() == &&b.to_ascii_lowercase();
   |      ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:99:33
   |
LL |     &&a.to_ascii_lowercase() == &&b.to_ascii_lowercase();
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:99:34
   |
LL |     &&a.to_ascii_lowercase() == &&b.to_ascii_lowercase();
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:105:1
   |
LL | fn ref_string(a: String, b: &String) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:105:1
   |
LL | fn ref_string(a: String, b: &String) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:105:1
   |
LL | fn ref_string(a: String, b: &String) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:105:15
   |
LL | fn ref_string(a: String, b: &String) {
   |               ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:105:26
   |
LL | fn ref_string(a: String, b: &String) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:105:29
   |
LL | fn ref_string(a: String, b: &String) {
   |                             ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:120:1
   |
LL | fn string_ref_str(a: String, b: &str) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:120:1
   |
LL | fn string_ref_str(a: String, b: &str) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:120:1
   |
LL | fn string_ref_str(a: String, b: &str) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:120:19
   |
LL | fn string_ref_str(a: String, b: &str) {
   |                   ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:120:30
   |
LL | fn string_ref_str(a: String, b: &str) {
   |                              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:120:33
   |
LL | fn string_ref_str(a: String, b: &str) {
   |                                 ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:135:1
   |
LL | fn ref_u8slice(a: &[u8], b: &[u8]) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:135:1
   |
LL | fn ref_u8slice(a: &[u8], b: &[u8]) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:135:1
   |
LL | fn ref_u8slice(a: &[u8], b: &[u8]) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:135:16
   |
LL | fn ref_u8slice(a: &[u8], b: &[u8]) {
   |                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:135:26
   |
LL | fn ref_u8slice(a: &[u8], b: &[u8]) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:135:19
   |
LL | fn ref_u8slice(a: &[u8], b: &[u8]) {
   |                   ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:135:29
   |
LL | fn ref_u8slice(a: &[u8], b: &[u8]) {
   |                             ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:139:1
   |
LL | fn u8vec(a: Vec<u8>, b: Vec<u8>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:139:1
   |
LL | fn u8vec(a: Vec<u8>, b: Vec<u8>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:139:1
   |
LL | fn u8vec(a: Vec<u8>, b: Vec<u8>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:139:10
   |
LL | fn u8vec(a: Vec<u8>, b: Vec<u8>) {
   |          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:139:22
   |
LL | fn u8vec(a: Vec<u8>, b: Vec<u8>) {
   |                      ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:143:1
   |
LL | fn ref_u8vec(a: Vec<u8>, b: &Vec<u8>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:143:1
   |
LL | fn ref_u8vec(a: Vec<u8>, b: &Vec<u8>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:143:1
   |
LL | fn ref_u8vec(a: Vec<u8>, b: &Vec<u8>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:143:14
   |
LL | fn ref_u8vec(a: Vec<u8>, b: &Vec<u8>) {
   |              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:143:26
   |
LL | fn ref_u8vec(a: Vec<u8>, b: &Vec<u8>) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:143:29
   |
LL | fn ref_u8vec(a: Vec<u8>, b: &Vec<u8>) {
   |                             ^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:149:1
   |
LL | fn ref_osstr(a: &OsStr, b: &OsStr) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:149:1
   |
LL | fn ref_osstr(a: &OsStr, b: &OsStr) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:149:1
   |
LL | fn ref_osstr(a: &OsStr, b: &OsStr) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:149:14
   |
LL | fn ref_osstr(a: &OsStr, b: &OsStr) {
   |              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:149:25
   |
LL | fn ref_osstr(a: &OsStr, b: &OsStr) {
   |                         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:149:17
   |
LL | fn ref_osstr(a: &OsStr, b: &OsStr) {
   |                 ^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:149:28
   |
LL | fn ref_osstr(a: &OsStr, b: &OsStr) {
   |                            ^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:153:1
   |
LL | fn osstring(a: OsString, b: OsString) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:153:1
   |
LL | fn osstring(a: OsString, b: OsString) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:153:1
   |
LL | fn osstring(a: OsString, b: OsString) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:153:13
   |
LL | fn osstring(a: OsString, b: OsString) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:153:26
   |
LL | fn osstring(a: OsString, b: OsString) {
   |                          ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_ignore_case_cmp.rs:157:1
   |
LL | fn ref_osstring(a: OsString, b: &OsString) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:157:1
   |
LL | fn ref_osstring(a: OsString, b: &OsString) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_ignore_case_cmp.rs:157:1
   |
LL | fn ref_osstring(a: OsString, b: &OsString) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:157:17
   |
LL | fn ref_osstring(a: OsString, b: &OsString) {
   |                 ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_ignore_case_cmp.rs:157:30
   |
LL | fn ref_osstring(a: OsString, b: &OsString) {
   |                              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_ignore_case_cmp.rs:157:33
   |
LL | fn ref_osstring(a: OsString, b: &OsString) {
   |                                 ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 98 previous errors

