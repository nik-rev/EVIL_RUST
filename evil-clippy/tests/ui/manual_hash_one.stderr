error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:6:1
   |
LL | fn returned(b: impl BuildHasher) -> u64 {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:6:1
   |
LL | fn returned(b: impl BuildHasher) -> u64 {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:6:1
   |
LL | fn returned(b: impl BuildHasher) -> u64 {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:6:13
   |
LL | fn returned(b: impl BuildHasher) -> u64 {
   |             ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:8:15
   |
LL |     true.hash(&mut hasher);
   |               ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:13:1
   |
LL | fn unsized_receiver(b: impl BuildHasher, s: &str) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:13:1
   |
LL | fn unsized_receiver(b: impl BuildHasher, s: &str) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:13:1
   |
LL | fn unsized_receiver(b: impl BuildHasher, s: &str) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:13:21
   |
LL | fn unsized_receiver(b: impl BuildHasher, s: &str) {
   |                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:13:42
   |
LL | fn unsized_receiver(b: impl BuildHasher, s: &str) {
   |                                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:13:45
   |
LL | fn unsized_receiver(b: impl BuildHasher, s: &str) {
   |                                             ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:15:19
   |
LL |     s[4..10].hash(&mut hasher);
   |                   ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:20:1
   |
LL | fn owned_value(b: impl BuildHasher, v: Vec<u32>) -> Vec<u32> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:20:1
   |
LL | fn owned_value(b: impl BuildHasher, v: Vec<u32>) -> Vec<u32> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:20:1
   |
LL | fn owned_value(b: impl BuildHasher, v: Vec<u32>) -> Vec<u32> {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:20:16
   |
LL | fn owned_value(b: impl BuildHasher, v: Vec<u32>) -> Vec<u32> {
   |                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:20:37
   |
LL | fn owned_value(b: impl BuildHasher, v: Vec<u32>) -> Vec<u32> {
   |                                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:22:12
   |
LL |     v.hash(&mut hasher);
   |            ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:28:1
   |
LL | fn reused_hasher(b: impl BuildHasher) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:28:1
   |
LL | fn reused_hasher(b: impl BuildHasher) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:28:1
   |
LL | fn reused_hasher(b: impl BuildHasher) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:28:18
   |
LL | fn reused_hasher(b: impl BuildHasher) {
   |                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:30:15
   |
LL |     true.hash(&mut hasher);
   |               ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:35:1
   |
LL | fn reused_hasher_in_return(b: impl BuildHasher) -> u64 {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:35:1
   |
LL | fn reused_hasher_in_return(b: impl BuildHasher) -> u64 {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:35:1
   |
LL | fn reused_hasher_in_return(b: impl BuildHasher) -> u64 {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:35:28
   |
LL | fn reused_hasher_in_return(b: impl BuildHasher) -> u64 {
   |                            ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:37:15
   |
LL |     true.hash(&mut hasher);
   |               ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:42:1
   |
LL | fn no_hash(b: impl BuildHasher) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:42:1
   |
LL | fn no_hash(b: impl BuildHasher) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:42:1
   |
LL | fn no_hash(b: impl BuildHasher) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:42:12
   |
LL | fn no_hash(b: impl BuildHasher) {
   |            ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:47:1
   |
LL | fn hash_twice(b: impl BuildHasher) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:47:1
   |
LL | fn hash_twice(b: impl BuildHasher) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:47:1
   |
LL | fn hash_twice(b: impl BuildHasher) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:47:15
   |
LL | fn hash_twice(b: impl BuildHasher) {
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:49:15
   |
LL |     true.hash(&mut hasher);
   |               ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:50:15
   |
LL |     true.hash(&mut hasher);
   |               ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:54:1
   |
LL | fn other_hasher(b: impl BuildHasher) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:54:1
   |
LL | fn other_hasher(b: impl BuildHasher) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:54:1
   |
LL | fn other_hasher(b: impl BuildHasher) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:54:17
   |
LL | fn other_hasher(b: impl BuildHasher) {
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:58:15
   |
LL |     true.hash(&mut other_hasher);
   |               ^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:62:1
   |
LL | fn finish_then_hash(b: impl BuildHasher) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:62:1
   |
LL | fn finish_then_hash(b: impl BuildHasher) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:62:1
   |
LL | fn finish_then_hash(b: impl BuildHasher) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:62:21
   |
LL | fn finish_then_hash(b: impl BuildHasher) {
   |                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:65:15
   |
LL |     true.hash(&mut hasher);
   |               ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:68:1
   |
LL | fn in_macro(b: impl BuildHasher) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:68:1
   |
LL | fn in_macro(b: impl BuildHasher) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:68:1
   |
LL | fn in_macro(b: impl BuildHasher) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:68:13
   |
LL | fn in_macro(b: impl BuildHasher) {
   |             ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:69:5
   |
LL |     macro_rules! m {
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:72:23
   |
LL |             true.hash(&mut hasher);
   |                       ^^^^^^^^^^^
...
LL |     m!(b);
   |     ----- in this macro invocation
   |
   = help: use a raw borrowing instead: `&raw mut`
   = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:81:1
   |
LL | fn msrv_1_70(b: impl BuildHasher, v: impl Hash) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:81:1
   |
LL | fn msrv_1_70(b: impl BuildHasher, v: impl Hash) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:81:1
   |
LL | fn msrv_1_70(b: impl BuildHasher, v: impl Hash) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:81:14
   |
LL | fn msrv_1_70(b: impl BuildHasher, v: impl Hash) {
   |              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:81:35
   |
LL | fn msrv_1_70(b: impl BuildHasher, v: impl Hash) {
   |                                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:83:12
   |
LL |     v.hash(&mut hasher);
   |            ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/manual_hash_one.rs:88:1
   |
LL | fn msrv_1_71(b: impl BuildHasher, v: impl Hash) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_hash_one.rs:88:1
   |
LL | fn msrv_1_71(b: impl BuildHasher, v: impl Hash) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_hash_one.rs:88:1
   |
LL | fn msrv_1_71(b: impl BuildHasher, v: impl Hash) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:88:14
   |
LL | fn msrv_1_71(b: impl BuildHasher, v: impl Hash) {
   |              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/manual_hash_one.rs:88:35
   |
LL | fn msrv_1_71(b: impl BuildHasher, v: impl Hash) {
   |                                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_hash_one.rs:90:12
   |
LL |     v.hash(&mut hasher);
   |            ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 58 previous errors

