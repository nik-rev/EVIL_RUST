error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:13:1
   |
LL | fn base() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:13:1
   |
LL | fn base() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:13:1
   |
LL | fn base() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:59:1
   |
LL | fn refutable() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:59:1
   |
LL | fn refutable() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:59:1
   |
LL | fn refutable() {
   | ^

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:60:9
   |
LL |     let a = [42, 1337];
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:66:9
   |
LL |     let a = [(1, 2, 3)];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:71:9
   |
LL |     let a = [Some(42)];
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:83:1
   |
LL | fn refutable2() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:83:1
   |
LL | fn refutable2() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:83:1
   |
LL | fn refutable2() {
   | ^

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:86:13
   |
LL |         let v = vec![1, 2, 3];
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:107:13
   |
LL |         let v = vec![[1], [2], [3]];
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:118:13
   |
LL |         let v = vec![1, 2, 3];
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:124:13
   |
LL |         let v = vec![[1], [2], [3]];
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:134:13
   |
LL |         let v = vec![1, 2, 3];
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:142:1
   |
LL | fn nested_loops() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:142:1
   |
LL | fn nested_loops() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:142:1
   |
LL | fn nested_loops() {
   | ^

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:143:9
   |
LL |     let a = [42, 1337];
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:154:1
   |
LL | fn issue1121() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:154:1
   |
LL | fn issue1121() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:154:1
   |
LL | fn issue1121() {
   | ^

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:160:23
   |
LL |         values.remove(&value);
   |                       ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:164:1
   |
LL | fn issue2965() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:164:1
   |
LL | fn issue2965() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:164:1
   |
LL | fn issue2965() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:174:1
   |
LL | fn issue3670() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:174:1
   |
LL | fn issue3670() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:174:1
   |
LL | fn issue3670() {
   | ^

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:175:9
   |
LL |     let array = [Some(0), None, Some(1)];
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:183:1
   |
LL | fn issue1654() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:183:1
   |
LL | fn issue1654() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:183:1
   |
LL | fn issue1654() {
   | ^

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:190:23
   |
LL |         values.remove(&1);
   |                       ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:195:9
   |
LL |     let chars = "Hello, World!".char_indices();
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:201:1
   |
LL | fn issue6491() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:201:1
   |
LL | fn issue6491() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:201:1
   |
LL | fn issue6491() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:253:1
   |
LL | fn issue6231() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:253:1
   |
LL | fn issue6231() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:253:1
   |
LL | fn issue6231() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:269:1
   |
LL | fn issue1924() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:269:1
   |
LL | fn issue1924() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:269:1
   |
LL | fn issue1924() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:270:5
   |
LL |     struct S<T>(T);
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:271:5
   |
LL |     impl<T: Iterator<Item = u32>> S<T> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:272:9
   |
LL |         fn f(&mut self) -> Option<u32> {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:272:9
   |
LL |         fn f(&mut self) -> Option<u32> {
   |         ^

error: parameter must be `mut`
  --> tests/ui/while_let_on_iterator.rs:272:19
   |
LL |         fn f(&mut self) -> Option<u32> {
   |                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:272:14
   |
LL |         fn f(&mut self) -> Option<u32> {
   |              ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:276:37
   |
LL |                 if !(3..8).contains(&i) {
   |                                     ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:283:9
   |
LL |         fn f2(&mut self) -> Option<u32> {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:283:9
   |
LL |         fn f2(&mut self) -> Option<u32> {
   |         ^

error: parameter must be `mut`
  --> tests/ui/while_let_on_iterator.rs:283:20
   |
LL |         fn f2(&mut self) -> Option<u32> {
   |                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:283:15
   |
LL |         fn f2(&mut self) -> Option<u32> {
   |               ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:293:5
   |
LL |     impl<T: Iterator<Item = u32>> S<(S<T>, Option<u32>)> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:294:9
   |
LL |         fn f3(&mut self) -> Option<u32> {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:294:9
   |
LL |         fn f3(&mut self) -> Option<u32> {
   |         ^

error: parameter must be `mut`
  --> tests/ui/while_let_on_iterator.rs:294:20
   |
LL |         fn f3(&mut self) -> Option<u32> {
   |                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:294:15
   |
LL |         fn f3(&mut self) -> Option<u32> {
   |               ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:319:5
   |
LL |     struct S2<T>(T, u32);
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:320:5
   |
LL |     impl<T: Iterator<Item = u32>> Iterator for S2<T> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:322:9
   |
LL |         fn next(&mut self) -> Option<u32> {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:322:9
   |
LL |         fn next(&mut self) -> Option<u32> {
   |         ^

error: parameter must be `mut`
  --> tests/ui/while_let_on_iterator.rs:322:22
   |
LL |         fn next(&mut self) -> Option<u32> {
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:322:17
   |
LL |         fn next(&mut self) -> Option<u32> {
   |                 ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:346:1
   |
LL | fn issue7249() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:346:1
   |
LL | fn issue7249() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:346:1
   |
LL | fn issue7249() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:361:1
   |
LL | fn issue7510() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:361:1
   |
LL | fn issue7510() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:361:1
   |
LL | fn issue7510() {
   | ^

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:363:9
   |
LL |     let it = &mut it;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:363:14
   |
LL |     let it = &mut it;
   |              ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:373:5
   |
LL |     struct S<T>(T);
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/while_let_on_iterator.rs:375:9
   |
LL |     let it = S(&mut it);
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:375:16
   |
LL |     let it = S(&mut it);
   |                ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:386:1
   |
LL | fn exact_match_with_single_field() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:386:1
   |
LL | fn exact_match_with_single_field() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:386:1
   |
LL | fn exact_match_with_single_field() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:387:5
   |
LL |     struct S<T>(T);
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:391:17
   |
LL |         let _ = &mut s.0;
   |                 ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:395:1
   |
LL | fn custom_deref() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:395:1
   |
LL | fn custom_deref() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:395:1
   |
LL | fn custom_deref() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:396:5
   |
LL |     struct S1<T> {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:399:5
   |
LL |     struct S2<T>(S1<T>);
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:400:5
   |
LL |     impl<T> core::ops::Deref for S2<T> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:402:9
   |
LL |         fn deref(&self) -> &Self::Target {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:402:9
   |
LL |         fn deref(&self) -> &Self::Target {
   |         ^

error: parameter must be `mut`
  --> tests/ui/while_let_on_iterator.rs:402:19
   |
LL |         fn deref(&self) -> &Self::Target {
   |                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:402:18
   |
LL |         fn deref(&self) -> &Self::Target {
   |                  ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:402:28
   |
LL |         fn deref(&self) -> &Self::Target {
   |                            ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:403:13
   |
LL |             &self.0
   |             ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:406:5
   |
LL |     impl<T> core::ops::DerefMut for S2<T> {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:407:9
   |
LL |         fn deref_mut(&mut self) -> &mut Self::Target {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:407:9
   |
LL |         fn deref_mut(&mut self) -> &mut Self::Target {
   |         ^

error: parameter must be `mut`
  --> tests/ui/while_let_on_iterator.rs:407:27
   |
LL |         fn deref_mut(&mut self) -> &mut Self::Target {
   |                           ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:407:22
   |
LL |         fn deref_mut(&mut self) -> &mut Self::Target {
   |                      ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:407:36
   |
LL |         fn deref_mut(&mut self) -> &mut Self::Target {
   |                                    ^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/while_let_on_iterator.rs:408:13
   |
LL |             &mut self.0
   |             ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:419:1
   |
LL | fn issue_8113() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:419:1
   |
LL | fn issue_8113() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:419:1
   |
LL | fn issue_8113() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:427:1
   |
LL | fn fn_once_closure() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:427:1
   |
LL | fn fn_once_closure() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:427:1
   |
LL | fn fn_once_closure() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:438:5
   |
LL |     fn f(_: impl FnOnce()) {}
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:438:5
   |
LL |     fn f(_: impl FnOnce()) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:438:5
   |
LL |     fn f(_: impl FnOnce()) {}
   |     ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:449:5
   |
LL |     fn f2(_: impl FnMut()) {}
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:449:5
   |
LL |     fn f2(_: impl FnMut()) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:449:5
   |
LL |     fn f2(_: impl FnMut()) {}
   |     ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:460:5
   |
LL |     fn f3(_: fn()) {}
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:460:5
   |
LL |     fn f3(_: fn()) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:460:5
   |
LL |     fn f3(_: fn()) {}
   |     ^

error: trait must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:471:5
   |
LL |     trait MySpecialFnMut: FnOnce() {}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: make this trait unsafe: `unsafe trait`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:471:5
   |
LL |     trait MySpecialFnMut: FnOnce() {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:472:5
   |
LL |     impl<T: FnOnce()> MySpecialFnMut for T {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:473:5
   |
LL |     fn f4(_: impl MySpecialFnMut) {}
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:473:5
   |
LL |     fn f4(_: impl MySpecialFnMut) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:473:5
   |
LL |     fn f4(_: impl MySpecialFnMut) {}
   |     ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:485:1
   |
LL | fn issue13123() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:485:1
   |
LL | fn issue13123() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:485:1
   |
LL | fn issue13123() {
   | ^

error: item must be `pub`
  --> tests/ui/while_let_on_iterator.rs:495:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/while_let_on_iterator.rs:495:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/while_let_on_iterator.rs:495:1
   |
LL | fn main() {
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 105 previous errors

