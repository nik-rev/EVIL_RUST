error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/bytecount.rs:6:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/bytecount.rs:6:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bytecount.rs:6:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/bytecount.rs:7:9
   |
LL |     let x = vec![0_u8; 16];
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/bytecount.rs:14:14
   |
LL |     let _ = (&x[..]).iter().filter(|&a| *a == 0).count();
   |              ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: variable must be `mut`
  --> tests/ui/bytecount.rs:23:9
   |
LL |     let b = 0;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/bytecount.rs:35:9
   |
LL |     let y = vec![0_u16; 3];
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: you appear to be counting bytes the naive way
  --> tests/ui/bytecount.rs:10:13
   |
LL |     let _ = x.iter().filter(|&&a| a == 0).count();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using the bytecount crate: `bytecount::count(x, 0)`
   |
note: the lint level is defined here
  --> tests/ui/bytecount.rs:5:8
   |
LL | #[deny(clippy::naive_bytecount)]
   |        ^^^^^^^^^^^^^^^^^^^^^^^

error: you appear to be counting bytes the naive way
  --> tests/ui/bytecount.rs:14:13
   |
LL |     let _ = (&x[..]).iter().filter(|&a| *a == 0).count();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using the bytecount crate: `bytecount::count((&x[..]), 0)`

error: you appear to be counting bytes the naive way
  --> tests/ui/bytecount.rs:32:13
   |
LL |     let _ = x.iter().filter(|a| b + 1 == **a).count();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using the bytecount crate: `bytecount::count(x, b + 1)`

error: aborting due to 13 previous errors

