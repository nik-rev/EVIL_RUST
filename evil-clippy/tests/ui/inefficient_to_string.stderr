error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/inefficient_to_string.rs:5:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/inefficient_to_string.rs:5:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/inefficient_to_string.rs:5:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:6:9
   |
LL |     let rstr: &str = "hello";
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:6:15
   |
LL |     let rstr: &str = "hello";
   |               ^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:7:9
   |
LL |     let rrstr: &&str = &rstr;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:7:16
   |
LL |     let rrstr: &&str = &rstr;
   |                ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:7:17
   |
LL |     let rrstr: &&str = &rstr;
   |                 ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:7:24
   |
LL |     let rrstr: &&str = &rstr;
   |                        ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:8:9
   |
LL |     let rrrstr: &&&str = &rrstr;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:8:17
   |
LL |     let rrrstr: &&&str = &rrstr;
   |                 ^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:8:18
   |
LL |     let rrrstr: &&&str = &rrstr;
   |                  ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:8:19
   |
LL |     let rrrstr: &&&str = &rrstr;
   |                   ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:8:26
   |
LL |     let rrrstr: &&&str = &rrstr;
   |                          ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:15:9
   |
LL |     let string: String = String::from("hello");
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:16:9
   |
LL |     let rstring: &String = &string;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:16:18
   |
LL |     let rstring: &String = &string;
   |                  ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:16:28
   |
LL |     let rstring: &String = &string;
   |                            ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:17:9
   |
LL |     let rrstring: &&String = &rstring;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:17:19
   |
LL |     let rrstring: &&String = &rstring;
   |                   ^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:17:20
   |
LL |     let rrstring: &&String = &rstring;
   |                    ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:17:30
   |
LL |     let rrstring: &&String = &rstring;
   |                              ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:18:9
   |
LL |     let rrrstring: &&&String = &rrstring;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:18:20
   |
LL |     let rrrstring: &&&String = &rrstring;
   |                    ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:18:21
   |
LL |     let rrrstring: &&&String = &rrstring;
   |                     ^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:18:22
   |
LL |     let rrrstring: &&&String = &rrstring;
   |                      ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:18:32
   |
LL |     let rrrstring: &&&String = &rrstring;
   |                                ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:26:9
   |
LL |     let cow: Cow<'_, str> = Cow::Borrowed("hello");
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:27:9
   |
LL |     let rcow: &Cow<'_, str> = &cow;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:27:15
   |
LL |     let rcow: &Cow<'_, str> = &cow;
   |               ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:27:31
   |
LL |     let rcow: &Cow<'_, str> = &cow;
   |                               ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:28:9
   |
LL |     let rrcow: &&Cow<'_, str> = &rcow;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:28:16
   |
LL |     let rrcow: &&Cow<'_, str> = &rcow;
   |                ^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:28:17
   |
LL |     let rrcow: &&Cow<'_, str> = &rcow;
   |                 ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:28:33
   |
LL |     let rrcow: &&Cow<'_, str> = &rcow;
   |                                 ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/inefficient_to_string.rs:29:9
   |
LL |     let rrrcow: &&&Cow<'_, str> = &rrcow;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:29:17
   |
LL |     let rrrcow: &&&Cow<'_, str> = &rrcow;
   |                 ^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:29:18
   |
LL |     let rrrcow: &&&Cow<'_, str> = &rrcow;
   |                  ^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:29:19
   |
LL |     let rrrcow: &&&Cow<'_, str> = &rrcow;
   |                   ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/inefficient_to_string.rs:29:35
   |
LL |     let rrrcow: &&&Cow<'_, str> = &rrcow;
   |                                   ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: calling `to_string` on `&&str`
  --> tests/ui/inefficient_to_string.rs:10:21
   |
LL |     let _: String = rrstr.to_string();
   |                     ^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*rrstr).to_string()`
   |
   = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
note: the lint level is defined here
  --> tests/ui/inefficient_to_string.rs:1:9
   |
LL | #![deny(clippy::inefficient_to_string)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: calling `to_string` on `&&&str`
  --> tests/ui/inefficient_to_string.rs:12:21
   |
LL |     let _: String = rrrstr.to_string();
   |                     ^^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(**rrrstr).to_string()`
   |
   = help: `&&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`

error: calling `to_string` on `&&std::string::String`
  --> tests/ui/inefficient_to_string.rs:21:21
   |
LL |     let _: String = rrstring.to_string();
   |                     ^^^^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*rrstring).to_string()`
   |
   = help: `&std::string::String` implements `ToString` through a slower blanket impl, but `std::string::String` has a fast specialization of `ToString`

error: calling `to_string` on `&&&std::string::String`
  --> tests/ui/inefficient_to_string.rs:23:21
   |
LL |     let _: String = rrrstring.to_string();
   |                     ^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(**rrrstring).to_string()`
   |
   = help: `&&std::string::String` implements `ToString` through a slower blanket impl, but `std::string::String` has a fast specialization of `ToString`

error: calling `to_string` on `&&std::borrow::Cow<'_, str>`
  --> tests/ui/inefficient_to_string.rs:32:21
   |
LL |     let _: String = rrcow.to_string();
   |                     ^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*rrcow).to_string()`
   |
   = help: `&std::borrow::Cow<'_, str>` implements `ToString` through a slower blanket impl, but `std::borrow::Cow<'_, str>` has a fast specialization of `ToString`

error: calling `to_string` on `&&&std::borrow::Cow<'_, str>`
  --> tests/ui/inefficient_to_string.rs:34:21
   |
LL |     let _: String = rrrcow.to_string();
   |                     ^^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(**rrrcow).to_string()`
   |
   = help: `&&std::borrow::Cow<'_, str>` implements `ToString` through a slower blanket impl, but `std::borrow::Cow<'_, str>` has a fast specialization of `ToString`

error: aborting due to 49 previous errors

