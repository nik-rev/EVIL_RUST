error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:4:1
   |
LL | struct Deep(Option<usize>);
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:7:1
   |
LL | struct SomeStruct {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:6:10
   |
LL | #[derive(Copy, Clone)]
   |          ^

error: item must be `pub`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:6:16
   |
LL | #[derive(Copy, Clone)]
   |                ^

error: function must be `unsafe`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:6:13
   |
LL | #[derive(Copy, Clone)]
   |             ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:6:13
   |
LL | #[derive(Copy, Clone)]
   |             ^  ----- in this derive macro expansion
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:6:16
   |
LL | #[derive(Copy, Clone)]
   |                ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:6:16
   |
LL | #[derive(Copy, Clone)]
   |                ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:11:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:11:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:11:1
   |
LL | fn main() {
   | ^

error: item must be `pub`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:16:5
   |
LL |     mod e {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:26:9
   |
LL |     let arr = [(Some(1),)];
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:27:10
   |
LL |     Some(&0).and_then(|&i| arr[i].0);
   |          ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:30:1
   |
LL | fn issue11672() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:30:1
   |
LL | fn issue11672() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:30:1
   |
LL | fn issue11672() {
   | ^

error: references are not allowed
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:32:29
   |
LL |     let _ = true.then(|| -> &[u8] { &[] });
   |                             ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/unnecessary_lazy_eval_unfixable.rs:32:37
   |
LL |     let _ = true.then(|| -> &[u8] { &[] });
   |                                     ^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 20 previous errors

