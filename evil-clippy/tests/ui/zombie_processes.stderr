error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/zombie_processes.rs:6:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/zombie_processes.rs:6:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/zombie_processes.rs:6:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/zombie_processes.rs:25:13
   |
LL |         let x = Command::new("").spawn().unwrap();
   |             ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/zombie_processes.rs:34:21
   |
LL |         let mut r = &mut x;
   |                     ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`
   = note: requested on the command line with `-D clippy::reference-used`

error: variable must be `mut`
  --> tests/ui/zombie_processes.rs:45:13
   |
LL |         let v = &x;
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/zombie_processes.rs:45:17
   |
LL |         let v = &x;
   |                 ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/zombie_processes.rs:92:9
   |
LL |         struct S {
   |         ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/zombie_processes.rs:171:1
   |
LL | fn process_child(c: Child) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/zombie_processes.rs:171:1
   |
LL | fn process_child(c: Child) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/zombie_processes.rs:171:1
   |
LL | fn process_child(c: Child) {
   | ^

error: parameter must be `mut`
  --> tests/ui/zombie_processes.rs:171:18
   |
LL | fn process_child(c: Child) {
   |                  ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/zombie_processes.rs:175:1
   |
LL | fn return_wait() -> ExitStatus {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/zombie_processes.rs:175:1
   |
LL | fn return_wait() -> ExitStatus {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/zombie_processes.rs:175:1
   |
LL | fn return_wait() -> ExitStatus {
   | ^

error: item must be `pub`
  --> tests/ui/zombie_processes.rs:180:1
   |
LL | mod issue14677 {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/zombie_processes.rs:184:5
   |
LL |     fn do_something<F: Fn() -> Result<(), ()>>(f: F) {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/zombie_processes.rs:184:5
   |
LL |     fn do_something<F: Fn() -> Result<(), ()>>(f: F) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/zombie_processes.rs:184:5
   |
LL |     fn do_something<F: Fn() -> Result<(), ()>>(f: F) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/zombie_processes.rs:184:48
   |
LL |     fn do_something<F: Fn() -> Result<(), ()>>(f: F) {
   |                                                ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/zombie_processes.rs:188:5
   |
LL |     fn foo() {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/zombie_processes.rs:188:5
   |
LL |     fn foo() {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/zombie_processes.rs:188:5
   |
LL |     fn foo() {
   |     ^

error: variable must be `mut`
  --> tests/ui/zombie_processes.rs:190:13
   |
LL |         let some_condition = true;
   |             ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 23 previous errors

