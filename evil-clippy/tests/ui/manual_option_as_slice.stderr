error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_option_as_slice.rs:4:1
   |
LL | fn check(x: Option<u32>) {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/manual_option_as_slice.rs:4:1
   |
LL | fn check(x: Option<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_option_as_slice.rs:4:1
   |
LL | fn check(x: Option<u32>) {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/manual_option_as_slice.rs:4:10
   |
LL | fn check(x: Option<u32>) {
   |          ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:8:17
   |
LL |         None => &[],
   |                 ^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:16:9
   |
LL |         &[]
   |         ^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:19:27
   |
LL |     _ = x.as_ref().map_or(&[][..], std::slice::from_ref);
   |                           ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:28:35
   |
LL |     _ = x.as_ref().map_or_else(|| &[42][..0], std::slice::from_ref);
   |                                   ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:33:37
   |
LL |         _ = x.as_ref().map_or_else(<&[_]>::default, from_ref);
   |                                     ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: variable must be `mut`
  --> tests/ui/manual_option_as_slice.rs:38:9
   |
LL |     let y = x.as_ref();
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:41:20
   |
LL |         Some(f) => &[f][..],
   |                    ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:42:17
   |
LL |         None => &[][..],
   |                 ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:46:17
   |
LL |         None => &[0],
   |                 ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:49:21
   |
LL |         Some(42) => &[23],
   |                     ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:51:17
   |
LL |         None => &[],
   |                 ^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/manual_option_as_slice.rs:53:9
   |
LL |     let b = &[42];
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:53:13
   |
LL |     let b = &[42];
   |             ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:57:9
   |
LL |         &[]
   |         ^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:59:27
   |
LL |     _ = x.as_ref().map_or(&[42][..], std::slice::from_ref);
   |                           ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:60:35
   |
LL |     _ = x.as_ref().map_or_else(|| &[42][..1], std::slice::from_ref);
   |                                   ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/manual_option_as_slice.rs:65:1
   |
LL | fn check_msrv(x: Option<u32>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_option_as_slice.rs:65:1
   |
LL | fn check_msrv(x: Option<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_option_as_slice.rs:65:1
   |
LL | fn check_msrv(x: Option<u32>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/manual_option_as_slice.rs:65:15
   |
LL | fn check_msrv(x: Option<u32>) {
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_option_as_slice.rs:66:27
   |
LL |     _ = x.as_ref().map_or(&[][..], std::slice::from_ref);
   |                           ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/manual_option_as_slice.rs:69:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_option_as_slice.rs:69:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_option_as_slice.rs:69:1
   |
LL | fn main() {
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 29 previous errors

