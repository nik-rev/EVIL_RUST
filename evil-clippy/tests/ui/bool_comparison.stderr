error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:5:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:5:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:5:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/bool_comparison.rs:6:9
   |
LL |     let x = true;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/bool_comparison.rs:79:9
   |
LL |     let y = true;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:95:1
   |
LL | fn issue3703() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:95:1
   |
LL | fn issue3703() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:95:1
   |
LL | fn issue3703() {
   | ^

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:96:5
   |
LL |     struct Foo;
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:97:5
   |
LL |     impl PartialEq<bool> for Foo {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:98:9
   |
LL |         fn eq(&self, _: &bool) -> bool {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:98:9
   |
LL |         fn eq(&self, _: &bool) -> bool {
   |         ^

error: parameter must be `mut`
  --> tests/ui/bool_comparison.rs:98:16
   |
LL |         fn eq(&self, _: &bool) -> bool {
   |                ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/bool_comparison.rs:98:15
   |
LL |         fn eq(&self, _: &bool) -> bool {
   |               ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/bool_comparison.rs:98:25
   |
LL |         fn eq(&self, _: &bool) -> bool {
   |                         ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:102:5
   |
LL |     impl PartialEq<Foo> for bool {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:103:9
   |
LL |         fn eq(&self, _: &Foo) -> bool {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:103:9
   |
LL |         fn eq(&self, _: &Foo) -> bool {
   |         ^

error: parameter must be `mut`
  --> tests/ui/bool_comparison.rs:103:16
   |
LL |         fn eq(&self, _: &Foo) -> bool {
   |                ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/bool_comparison.rs:103:15
   |
LL |         fn eq(&self, _: &Foo) -> bool {
   |               ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/bool_comparison.rs:103:25
   |
LL |         fn eq(&self, _: &Foo) -> bool {
   |                         ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:107:5
   |
LL |     impl PartialOrd<bool> for Foo {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:108:9
   |
LL |         fn partial_cmp(&self, _: &bool) -> Option<std::cmp::Ordering> {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:108:9
   |
LL |         fn partial_cmp(&self, _: &bool) -> Option<std::cmp::Ordering> {
   |         ^

error: parameter must be `mut`
  --> tests/ui/bool_comparison.rs:108:25
   |
LL |         fn partial_cmp(&self, _: &bool) -> Option<std::cmp::Ordering> {
   |                         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/bool_comparison.rs:108:24
   |
LL |         fn partial_cmp(&self, _: &bool) -> Option<std::cmp::Ordering> {
   |                        ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/bool_comparison.rs:108:34
   |
LL |         fn partial_cmp(&self, _: &bool) -> Option<std::cmp::Ordering> {
   |                                  ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:112:5
   |
LL |     impl PartialOrd<Foo> for bool {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:113:9
   |
LL |         fn partial_cmp(&self, _: &Foo) -> Option<std::cmp::Ordering> {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:113:9
   |
LL |         fn partial_cmp(&self, _: &Foo) -> Option<std::cmp::Ordering> {
   |         ^

error: parameter must be `mut`
  --> tests/ui/bool_comparison.rs:113:25
   |
LL |         fn partial_cmp(&self, _: &Foo) -> Option<std::cmp::Ordering> {
   |                         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/bool_comparison.rs:113:24
   |
LL |         fn partial_cmp(&self, _: &Foo) -> Option<std::cmp::Ordering> {
   |                        ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/bool_comparison.rs:113:34
   |
LL |         fn partial_cmp(&self, _: &Foo) -> Option<std::cmp::Ordering> {
   |                                  ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:131:1
   |
LL | fn issue4983() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:131:1
   |
LL | fn issue4983() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:131:1
   |
LL | fn issue4983() {
   | ^

error: variable must be `mut`
  --> tests/ui/bool_comparison.rs:132:9
   |
LL |     let a = true;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/bool_comparison.rs:133:9
   |
LL |     let b = false;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:150:1
   |
LL | macro_rules! m {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:156:1
   |
LL | fn func() -> bool {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:156:1
   |
LL | fn func() -> bool {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:156:1
   |
LL | fn func() -> bool {
   | ^

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:161:1
   |
LL | fn issue3973() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:161:1
   |
LL | fn issue3973() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:161:1
   |
LL | fn issue3973() {
   | ^

error: variable must be `mut`
  --> tests/ui/bool_comparison.rs:179:9
   |
LL |     let is_debug = false;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/bool_comparison.rs:184:9
   |
LL |     let is_debug = true;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/bool_comparison.rs:192:1
   |
LL | fn issue9907() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/bool_comparison.rs:192:1
   |
LL | fn issue9907() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/bool_comparison.rs:192:1
   |
LL | fn issue9907() {
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 44 previous errors

