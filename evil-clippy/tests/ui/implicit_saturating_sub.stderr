error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/implicit_saturating_sub.rs:7:1
   |
LL | struct Mock;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/implicit_saturating_sub.rs:9:1
   |
LL | impl PartialEq<u32> for Mock {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:10:5
   |
LL |     fn eq(&self, _: &u32) -> bool {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:10:5
   |
LL |     fn eq(&self, _: &u32) -> bool {
   |     ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:10:12
   |
LL |     fn eq(&self, _: &u32) -> bool {
   |            ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/implicit_saturating_sub.rs:10:11
   |
LL |     fn eq(&self, _: &u32) -> bool {
   |           ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/implicit_saturating_sub.rs:10:21
   |
LL |     fn eq(&self, _: &u32) -> bool {
   |                     ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/implicit_saturating_sub.rs:15:1
   |
LL | impl SubAssign<u32> for Mock {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:16:5
   |
LL |     fn sub_assign(&mut self, _: u32) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:16:5
   |
LL |     fn sub_assign(&mut self, _: u32) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:16:24
   |
LL |     fn sub_assign(&mut self, _: u32) {}
   |                        ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/implicit_saturating_sub.rs:16:19
   |
LL |     fn sub_assign(&mut self, _: u32) {}
   |                   ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/implicit_saturating_sub.rs:19:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:19:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:19:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:22:9
   |
LL |     let end_8: u8 = 10;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:23:9
   |
LL |     let start_8: u8 = 5;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:44:9
   |
LL |     let end_16: u16 = 40;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:45:9
   |
LL |     let start_16: u16 = 35;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:111:9
   |
LL |     let end_usize: usize = 8054;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:112:9
   |
LL |     let start_usize: usize = 8050;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:124:9
   |
LL |     let endi_8: i8 = 10;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:125:9
   |
LL |     let starti_8: i8 = 50;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:153:9
   |
LL |     let endi_16: i16 = 45;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:154:9
   |
LL |     let starti_16: i16 = 44;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:182:9
   |
LL |     let endi_32: i32 = 45;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:183:9
   |
LL |     let starti_32: i32 = 44;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:211:9
   |
LL |     let endi_64: i64 = 45;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:212:9
   |
LL |     let starti_64: i64 = 44;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:255:9
   |
LL |     let a = 200;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:287:9
   |
LL |     let result = if a < b {
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/implicit_saturating_sub.rs:295:1
   |
LL | fn regression_13524(a: usize, b: usize, c: bool) -> usize {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:295:1
   |
LL | fn regression_13524(a: usize, b: usize, c: bool) -> usize {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:295:1
   |
LL | fn regression_13524(a: usize, b: usize, c: bool) -> usize {
   | ^

error: parameter must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:295:21
   |
LL | fn regression_13524(a: usize, b: usize, c: bool) -> usize {
   |                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:295:31
   |
LL | fn regression_13524(a: usize, b: usize, c: bool) -> usize {
   |                               ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:295:41
   |
LL | fn regression_13524(a: usize, b: usize, c: bool) -> usize {
   |                                         ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/implicit_saturating_sub.rs:306:1
   |
LL | fn with_side_effect(a: u64) -> u64 {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:306:1
   |
LL | fn with_side_effect(a: u64) -> u64 {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:306:1
   |
LL | fn with_side_effect(a: u64) -> u64 {
   | ^

error: parameter must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:306:21
   |
LL | fn with_side_effect(a: u64) -> u64 {
   |                     ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/implicit_saturating_sub.rs:311:1
   |
LL | fn arbitrary_expression() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:311:1
   |
LL | fn arbitrary_expression() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/implicit_saturating_sub.rs:311:1
   |
LL | fn arbitrary_expression() {
   | ^

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:312:10
   |
LL |     let (a, b) = (15u64, 20u64);
   |          ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/implicit_saturating_sub.rs:312:13
   |
LL |     let (a, b) = (15u64, 20u64);
   |             ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 44 previous errors

