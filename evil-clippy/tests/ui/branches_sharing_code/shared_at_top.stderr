error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:7:1
   |
LL | fn simple_examples() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:7:1
   |
LL | fn simple_examples() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:7:1
   |
LL | fn simple_examples() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:8:9
   |
LL |     let x = 0;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:23:13
   |
LL |         let y = 9;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:25:13
   |
LL |         let _z = y;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:29:13
   |
LL |         let y = 9;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:31:13
   |
LL |         let _z = y;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:35:13
   |
LL |         let y = 9;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:37:13
   |
LL |         let _z = y;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:46:13
   |
LL |         let y = 16;
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:51:13
   |
LL |         let y = 16;
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:58:1
   |
LL | fn simple_but_suggestion_is_invalid() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:58:1
   |
LL | fn simple_but_suggestion_is_invalid() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:58:1
   |
LL | fn simple_but_suggestion_is_invalid() {
   | ^

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:59:9
   |
LL |     let x = 10;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:62:9
   |
LL |     let used_value_name = 19;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:65:13
   |
LL |         let used_value_name = "Different type";
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:69:13
   |
LL |         let used_value_name = "Different type";
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:77:9
   |
LL |     let can_be_overridden = 8;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:82:13
   |
LL |         let can_be_overridden = "Move me";
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:86:13
   |
LL |         let can_be_overridden = "Move me";
   |             ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:93:1
   |
LL | fn check_if_same_than_else_mask() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:93:1
   |
LL | fn check_if_same_than_else_mask() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:93:1
   |
LL | fn check_if_same_than_else_mask() {
   | ^

error: variable must be `mut`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:94:9
   |
LL |     let x = 2021;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:116:1
   |
LL | fn pf_local_with_inferred_type_issue7053() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:116:1
   |
LL | fn pf_local_with_inferred_type_issue7053() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:116:1
   |
LL | fn pf_local_with_inferred_type_issue7053() {
   | ^

error: item must be `pub`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:126:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:126:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/branches_sharing_code/shared_at_top.rs:126:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: all if blocks contain the same code at the start
  --> tests/ui/branches_sharing_code/shared_at_top.rs:11:5
   |
LL | /     if true {
LL | |
LL | |         println!("Hello World!");
   | |_________________________________^
   |
note: the lint level is defined here
  --> tests/ui/branches_sharing_code/shared_at_top.rs:1:9
   |
LL | #![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider moving these statements before the if
   |
LL ~     println!("Hello World!");
LL +     if true {
   |

error: all if blocks contain the same code at the start
  --> tests/ui/branches_sharing_code/shared_at_top.rs:21:5
   |
LL | /     if x == 0 {
LL | |
LL | |         let y = 9;
LL | |         println!("The value y was set to: `{}`", y);
LL | |         let _z = y;
   | |___________________^
   |
   = warning: some moved values might need to be renamed to avoid wrong references
help: consider moving these statements before the if
   |
LL ~     let y = 9;
LL +     println!("The value y was set to: `{}`", y);
LL +     let _z = y;
LL +     if x == 0 {
   |

error: all if blocks contain the same code at the start
  --> tests/ui/branches_sharing_code/shared_at_top.rs:43:5
   |
LL | /     let _ = if x == 7 {
...  |
LL | |         let y = 16;
   | |___________________^
   |
help: consider moving these statements before the if
   |
LL ~     let y = 16;
LL +     let _ = if x == 7 {
   |

error: all if blocks contain the same code at the start
  --> tests/ui/branches_sharing_code/shared_at_top.rs:63:5
   |
LL | /     if x == 10 {
LL | |
LL | |         let used_value_name = "Different type";
LL | |         println!("Str: {}", used_value_name);
   | |_____________________________________________^
   |
   = warning: some moved values might need to be renamed to avoid wrong references
help: consider moving these statements before the if
   |
LL ~     let used_value_name = "Different type";
LL +     println!("Str: {}", used_value_name);
LL +     if x == 10 {
   |

error: all if blocks contain the same code at the start
  --> tests/ui/branches_sharing_code/shared_at_top.rs:79:5
   |
LL | /     if x == 11 {
LL | |
LL | |
LL | |         let can_be_overridden = "Move me";
LL | |         println!("I'm also moveable");
   | |______________________________________^
   |
   = warning: some moved values might need to be renamed to avoid wrong references
help: consider moving these statements before the if
   |
LL ~     let can_be_overridden = "Move me";
LL +     println!("I'm also moveable");
LL +     if x == 11 {
   |

error: all if blocks contain the same code at the start
  --> tests/ui/branches_sharing_code/shared_at_top.rs:97:5
   |
LL | /     if x == 2020 {
LL | |
LL | |
LL | |         println!("This should trigger the `SHARED_CODE_IN_IF_BLOCKS` lint.");
LL | |         println!("Because `IF_SAME_THEN_ELSE` is allowed here");
   | |________________________________________________________________^
   |
help: consider moving these statements before the if
   |
LL ~     println!("This should trigger the `SHARED_CODE_IN_IF_BLOCKS` lint.");
LL +     println!("Because `IF_SAME_THEN_ELSE` is allowed here");
LL +     if x == 2020 {
   |

error: this `if` has identical blocks
  --> tests/ui/branches_sharing_code/shared_at_top.rs:107:18
   |
LL |       if x == 2019 {
   |  __________________^
LL | |         println!("This should trigger `IS_SAME_THAN_ELSE` as usual");
LL | |     } else {
   | |_____^
   |
note: same as this
  --> tests/ui/branches_sharing_code/shared_at_top.rs:109:12
   |
LL |       } else {
   |  ____________^
LL | |         println!("This should trigger `IS_SAME_THAN_ELSE` as usual");
LL | |     }
   | |_____^
note: the lint level is defined here
  --> tests/ui/branches_sharing_code/shared_at_top.rs:1:40
   |
LL | #![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 38 previous errors

