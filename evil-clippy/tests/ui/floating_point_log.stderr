error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/floating_point_log.rs:6:1
   |
LL | const TWO: f32 = 2.0;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/floating_point_log.rs:7:1
   |
LL | const E: f32 = std::f32::consts::E;
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/floating_point_log.rs:9:1
   |
LL | fn check_log_base() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/floating_point_log.rs:9:1
   |
LL | fn check_log_base() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/floating_point_log.rs:9:1
   |
LL | fn check_log_base() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/floating_point_log.rs:10:9
   |
LL |     let x = 1f32;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/floating_point_log.rs:24:9
   |
LL |     let x = 1f64;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/floating_point_log.rs:33:1
   |
LL | fn check_ln1p() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/floating_point_log.rs:33:1
   |
LL | fn check_ln1p() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/floating_point_log.rs:33:1
   |
LL | fn check_ln1p() {
   | ^

error: variable must be `mut`
  --> tests/ui/floating_point_log.rs:34:9
   |
LL |     let x = 1f32;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/floating_point_log.rs:63:9
   |
LL |     let x = 1f64;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/floating_point_log.rs:89:1
   |
LL | fn issue12881() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/floating_point_log.rs:89:1
   |
LL | fn issue12881() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/floating_point_log.rs:89:1
   |
LL | fn issue12881() {
   | ^

error: trait must be `unsafe`
  --> tests/ui/floating_point_log.rs:90:5
   |
LL | /     pub trait MyLog {
LL | |         fn log(&self) -> Self;
LL | |     }
   | |_____^
   |
   = help: make this trait unsafe: `unsafe trait`

error: function must be `unsafe`
  --> tests/ui/floating_point_log.rs:91:9
   |
LL |         fn log(&self) -> Self;
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/floating_point_log.rs:91:9
   |
LL |         fn log(&self) -> Self;
   |         ^

error: parameter must be `mut`
  --> tests/ui/floating_point_log.rs:91:17
   |
LL |         fn log(&self) -> Self;
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/floating_point_log.rs:91:16
   |
LL |         fn log(&self) -> Self;
   |                ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/floating_point_log.rs:94:5
   |
LL |     impl MyLog for f32 {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/floating_point_log.rs:95:9
   |
LL |         fn log(&self) -> Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/floating_point_log.rs:95:9
   |
LL |         fn log(&self) -> Self {
   |         ^

error: parameter must be `mut`
  --> tests/ui/floating_point_log.rs:95:17
   |
LL |         fn log(&self) -> Self {
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/floating_point_log.rs:95:16
   |
LL |         fn log(&self) -> Self {
   |                ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: variable must be `mut`
  --> tests/ui/floating_point_log.rs:100:9
   |
LL |     let x = 2.0;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/floating_point_log.rs:104:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/floating_point_log.rs:104:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/floating_point_log.rs:104:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 27 previous errors

