error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:4:1
   |
LL | fn f<T>(_: T) {}
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:4:1
   |
LL | fn f<T>(_: T) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:4:1
   |
LL | fn f<T>(_: T) {}
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:6:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:6:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:6:1
   |
LL | fn main() {
   | ^

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:7:7
   |
LL |     f(&1u8 as *const _);
   |       ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:9:7
   |
LL |     f(&2u32 as *const u32);
   |       ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:11:7
   |
LL |     f(&3.0f64 as *const f64);
   |       ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:14:7
   |
LL |     f(&4 as *const _ as *const f32);
   |       ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:16:7
   |
LL |     f(&5.0f32 as *const f32 as *const u32);
   |       ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:19:7
   |
LL |     f(&mut 6u8 as *const _);
   |       ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:21:7
   |
LL |     f(&mut 7u32 as *const u32);
   |       ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:23:7
   |
LL |     f(&mut 8.0f64 as *const f64);
   |       ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:26:7
   |
LL |     f(&mut 9 as *const _ as *const f32);
   |       ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:28:7
   |
LL |     f(&mut 10.0f32 as *const f32 as *const u32);
   |       ^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:31:7
   |
LL |     f(&mut 11u8 as *mut _);
   |       ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:33:7
   |
LL |     f(&mut 12u32 as *mut u32);
   |       ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:35:7
   |
LL |     f(&mut 13.0f64 as *mut f64);
   |       ^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:38:7
   |
LL |     f(&mut 14 as *mut _ as *const f32);
   |       ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:40:7
   |
LL |     f(&mut 15.0f32 as *mut f32 as *const u32);
   |       ^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:43:7
   |
LL |     f(&1u8 as *const _);
   |       ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:45:7
   |
LL |     f(&2u32 as *const u32);
   |       ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:47:7
   |
LL |     f(&3.0f64 as *const f64);
   |       ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:50:7
   |
LL |     f(&4 as *const _ as *const f32);
   |       ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:52:7
   |
LL |     f(&5.0f32 as *const f32 as *const u32);
   |       ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/ref_as_ptr.rs:55:9
   |
LL |     let val = 1;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:56:7
   |
LL |     f(&val as *const _);
   |       ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:58:7
   |
LL |     f(&val as *const i32);
   |       ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:61:7
   |
LL |     f(&val as *const _ as *const f32);
   |       ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:63:7
   |
LL |     f(&val as *const i32 as *const f64);
   |       ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:67:7
   |
LL |     f(&mut val as *mut u8);
   |       ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:69:7
   |
LL |     f(&mut val as *mut _);
   |       ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:72:7
   |
LL |     f(&mut val as *const u8);
   |       ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:74:7
   |
LL |     f(&mut val as *const _);
   |       ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:77:7
   |
LL |     f(&mut val as *const u8 as *const f64);
   |       ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:79:28
   |
LL |     f::<*const Option<u8>>(&mut val as *const _ as *const _);
   |                            ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:82:7
   |
LL |     f(&std::array::from_fn(|i| i * i) as *const [usize; 7]);
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:84:7
   |
LL |     f(&mut std::array::from_fn(|i| i * i) as *const [usize; 8]);
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:86:7
   |
LL |     f(&mut std::array::from_fn(|i| i * i) as *mut [usize; 9]);
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:89:13
   |
LL |     let _ = &String::new() as *const _;
   |             ^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:90:13
   |
LL |     let _ = &mut String::new() as *mut _;
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:91:5
   |
LL |     const FOO: *const String = &String::new() as *const _;
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:91:32
   |
LL |     const FOO: *const String = &String::new() as *const _;
   |                                ^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:95:1
   |
LL | fn _msrv_1_75() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:95:1
   |
LL | fn _msrv_1_75() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:95:1
   |
LL | fn _msrv_1_75() {
   | ^

error: variable must be `mut`
  --> tests/ui/ref_as_ptr.rs:96:9
   |
LL |     let val = &42_i32;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:96:15
   |
LL |     let val = &42_i32;
   |               ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/ref_as_ptr.rs:97:9
   |
LL |     let mut_val = &mut 42_i32;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:97:19
   |
LL |     let mut_val = &mut 42_i32;
   |                   ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:105:1
   |
LL | fn _msrv_1_76() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:105:1
   |
LL | fn _msrv_1_76() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:105:1
   |
LL | fn _msrv_1_76() {
   | ^

error: variable must be `mut`
  --> tests/ui/ref_as_ptr.rs:106:9
   |
LL |     let val = &42_i32;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:106:15
   |
LL |     let val = &42_i32;
   |               ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/ref_as_ptr.rs:107:9
   |
LL |     let mut_val = &mut 42_i32;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:107:19
   |
LL |     let mut_val = &mut 42_i32;
   |                   ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:115:1
   |
LL | fn foo(val: &[u8]) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:115:1
   |
LL | fn foo(val: &[u8]) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:115:1
   |
LL | fn foo(val: &[u8]) {
   | ^

error: parameter must be `mut`
  --> tests/ui/ref_as_ptr.rs:115:8
   |
LL | fn foo(val: &[u8]) {
   |        ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:115:13
   |
LL | fn foo(val: &[u8]) {
   |             ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:122:1
   |
LL | fn bar(val: &mut str) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:122:1
   |
LL | fn bar(val: &mut str) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:122:1
   |
LL | fn bar(val: &mut str) {
   | ^

error: parameter must be `mut`
  --> tests/ui/ref_as_ptr.rs:122:8
   |
LL | fn bar(val: &mut str) {
   |        ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:122:13
   |
LL | fn bar(val: &mut str) {
   |             ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:129:1
   |
LL | struct X<'a>(&'a i32);
   | ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:129:14
   |
LL | struct X<'a>(&'a i32);
   |              ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:131:1
   |
LL | impl<'a> X<'a> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:132:5
   |
LL |     fn foo(&self) -> *const i64 {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:132:5
   |
LL |     fn foo(&self) -> *const i64 {
   |     ^

error: parameter must be `mut`
  --> tests/ui/ref_as_ptr.rs:132:13
   |
LL |     fn foo(&self) -> *const i64 {
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:132:12
   |
LL |     fn foo(&self) -> *const i64 {
   |            ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:137:5
   |
LL |     fn bar(&mut self) -> *const i64 {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:137:5
   |
LL |     fn bar(&mut self) -> *const i64 {
   |     ^

error: parameter must be `mut`
  --> tests/ui/ref_as_ptr.rs:137:17
   |
LL |     fn bar(&mut self) -> *const i64 {
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:137:12
   |
LL |     fn bar(&mut self) -> *const i64 {
   |            ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:143:1
   |
LL | struct Y<'a>(&'a mut i32);
   | ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:143:14
   |
LL | struct Y<'a>(&'a mut i32);
   |              ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/ref_as_ptr.rs:145:1
   |
LL | impl<'a> Y<'a> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:146:5
   |
LL |     fn foo(&self) -> *const i64 {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:146:5
   |
LL |     fn foo(&self) -> *const i64 {
   |     ^

error: parameter must be `mut`
  --> tests/ui/ref_as_ptr.rs:146:13
   |
LL |     fn foo(&self) -> *const i64 {
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:146:12
   |
LL |     fn foo(&self) -> *const i64 {
   |            ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:151:5
   |
LL |     fn bar(&mut self) -> *const i64 {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:151:5
   |
LL |     fn bar(&mut self) -> *const i64 {
   |     ^

error: parameter must be `mut`
  --> tests/ui/ref_as_ptr.rs:151:17
   |
LL |     fn bar(&mut self) -> *const i64 {
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:151:12
   |
LL |     fn bar(&mut self) -> *const i64 {
   |            ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: function must be `unsafe`
  --> tests/ui/ref_as_ptr.rs:156:5
   |
LL |     fn baz(&mut self) -> *const i64 {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/ref_as_ptr.rs:156:5
   |
LL |     fn baz(&mut self) -> *const i64 {
   |     ^

error: parameter must be `mut`
  --> tests/ui/ref_as_ptr.rs:156:17
   |
LL |     fn baz(&mut self) -> *const i64 {
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/ref_as_ptr.rs:156:12
   |
LL |     fn baz(&mut self) -> *const i64 {
   |            ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 87 previous errors

