error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_flatten.rs:4:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/manual_flatten.rs:4:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_flatten.rs:4:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:6:9
   |
LL |     let x = vec![Some(1), Some(2), Some(3)];
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:16:9
   |
LL |     let y: Vec<Result<i32, i32>> = vec![];
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_flatten.rs:26:14
   |
LL |     for n in &y {
   |              ^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:35:9
   |
LL |     let z = &y;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_flatten.rs:35:13
   |
LL |     let z = &y;
   |             ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:45:9
   |
LL |     let z = vec![Some(1), Some(2), Some(3)];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:46:9
   |
LL |     let z = z.iter();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:58:9
   |
LL |     let z = vec![Some(1), Some(2), Some(3)];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:81:9
   |
LL |     let vec_of_ref = vec![&Some(1)];
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_flatten.rs:81:27
   |
LL |     let vec_of_ref = vec![&Some(1)];
   |                           ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_flatten.rs:82:14
   |
LL |     for n in &vec_of_ref {
   |              ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:90:9
   |
LL |     let vec_of_ref = &vec_of_ref;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_flatten.rs:90:22
   |
LL |     let vec_of_ref = &vec_of_ref;
   |                      ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/manual_flatten.rs:99:9
   |
LL |     let slice_of_ref = &[&Some(1)];
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_flatten.rs:99:24
   |
LL |     let slice_of_ref = &[&Some(1)];
   |                        ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/manual_flatten.rs:99:26
   |
LL |     let slice_of_ref = &[&Some(1)];
   |                          ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/manual_flatten.rs:108:5
   |
LL |     struct Test {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_flatten.rs:130:1
   |
LL | fn run_unformatted_tests() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_flatten.rs:130:1
   |
LL | fn run_unformatted_tests() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_flatten.rs:130:1
   |
LL | fn run_unformatted_tests() {
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 25 previous errors

