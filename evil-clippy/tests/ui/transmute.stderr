error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/transmute.rs:11:1
   |
LL | extern crate core;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/transmute.rs:16:1
   |
LL | fn my_int() -> Usize {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/transmute.rs:16:1
   |
LL | fn my_int() -> Usize {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/transmute.rs:16:1
   |
LL | fn my_int() -> Usize {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/transmute.rs:20:1
   |
LL | fn my_vec() -> MyVec<i32> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/transmute.rs:20:1
   |
LL | fn my_vec() -> MyVec<i32> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/transmute.rs:20:1
   |
LL | fn my_vec() -> MyVec<i32> {
   | ^

error: item must be `pub`
  --> tests/ui/transmute.rs:26:1
   |
LL | unsafe fn _generic<'a, T, U: 'a>(t: &'a T) {
   | ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/transmute.rs:26:34
   |
LL | unsafe fn _generic<'a, T, U: 'a>(t: &'a T) {
   |                                  ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/transmute.rs:26:37
   |
LL | unsafe fn _generic<'a, T, U: 'a>(t: &'a T) {
   |                                     ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/transmute.rs:31:16
   |
LL |         let _: &'a U = core::mem::transmute(t);
   |                ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/transmute.rs:45:1
   |
LL | fn useless() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/transmute.rs:45:1
   |
LL | fn useless() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/transmute.rs:45:1
   |
LL | fn useless() {
   | ^

error: item must be `pub`
  --> tests/ui/transmute.rs:73:5
   |
LL |     unsafe fn _f<'a, 'b>(x: &'a u32) -> &'b u32 {
   |     ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/transmute.rs:73:26
   |
LL |     unsafe fn _f<'a, 'b>(x: &'a u32) -> &'b u32 {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/transmute.rs:73:29
   |
LL |     unsafe fn _f<'a, 'b>(x: &'a u32) -> &'b u32 {
   |                             ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/transmute.rs:73:41
   |
LL |     unsafe fn _f<'a, 'b>(x: &'a u32) -> &'b u32 {
   |                                         ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/transmute.rs:77:5
   |
LL |     unsafe fn _f2<'a, 'b>(x: *const (dyn Iterator<Item = u32> + 'a)) -> *const (dyn Iterator<Item = u32> + 'b) {
   |     ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/transmute.rs:77:27
   |
LL |     unsafe fn _f2<'a, 'b>(x: *const (dyn Iterator<Item = u32> + 'a)) -> *const (dyn Iterator<Item = u32> + 'b) {
   |                           ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/transmute.rs:81:5
   |
LL |     unsafe fn _f3<'a, 'b>(x: fn(&'a u32)) -> fn(&'b u32) {
   |     ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/transmute.rs:81:27
   |
LL |     unsafe fn _f3<'a, 'b>(x: fn(&'a u32)) -> fn(&'b u32) {
   |                           ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/transmute.rs:81:33
   |
LL |     unsafe fn _f3<'a, 'b>(x: fn(&'a u32)) -> fn(&'b u32) {
   |                                 ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/transmute.rs:81:49
   |
LL |     unsafe fn _f3<'a, 'b>(x: fn(&'a u32)) -> fn(&'b u32) {
   |                                                 ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/transmute.rs:85:5
   |
LL |     unsafe fn _f4<'a, 'b>(x: std::borrow::Cow<'a, str>) -> std::borrow::Cow<'b, str> {
   |     ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/transmute.rs:85:27
   |
LL |     unsafe fn _f4<'a, 'b>(x: std::borrow::Cow<'a, str>) -> std::borrow::Cow<'b, str> {
   |                           ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/transmute.rs:90:1
   |
LL | struct Usize(usize);
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/transmute.rs:93:1
   |
LL | fn crosspointer() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/transmute.rs:93:1
   |
LL | fn crosspointer() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/transmute.rs:93:1
   |
LL | fn crosspointer() {
   | ^

error: variable must be `mut`
  --> tests/ui/transmute.rs:95:9
   |
LL |     let int_const_ptr: *const Usize = &int as *const Usize;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/transmute.rs:95:39
   |
LL |     let int_const_ptr: *const Usize = &int as *const Usize;
   |                                       ^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/transmute.rs:96:9
   |
LL |     let int_mut_ptr: *mut Usize = &mut int as *mut Usize;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/transmute.rs:96:35
   |
LL |     let int_mut_ptr: *mut Usize = &mut int as *mut Usize;
   |                                   ^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/transmute.rs:114:1
   |
LL | fn int_to_bool() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/transmute.rs:114:1
   |
LL | fn int_to_bool() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/transmute.rs:114:1
   |
LL | fn int_to_bool() {
   | ^

error: item must be `pub`
  --> tests/ui/transmute.rs:119:1
   |
LL | fn bytes_to_str(mb: &mut [u8]) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/transmute.rs:119:1
   |
LL | fn bytes_to_str(mb: &mut [u8]) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/transmute.rs:119:1
   |
LL | fn bytes_to_str(mb: &mut [u8]) {
   | ^

error: parameter must be `mut`
  --> tests/ui/transmute.rs:119:17
   |
LL | fn bytes_to_str(mb: &mut [u8]) {
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/transmute.rs:119:21
   |
LL | fn bytes_to_str(mb: &mut [u8]) {
   |                     ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/transmute.rs:120:5
   |
LL |     const B: &[u8] = b"";
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/transmute.rs:120:14
   |
LL |     const B: &[u8] = b"";
   |              ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/transmute.rs:122:12
   |
LL |     let _: &str = unsafe { std::mem::transmute(B) };
   |            ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/transmute.rs:125:12
   |
LL |     let _: &mut str = unsafe { std::mem::transmute(mb) };
   |            ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/transmute.rs:128:5
   |
LL |     const _: &str = unsafe { std::mem::transmute(B) };
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/transmute.rs:128:14
   |
LL |     const _: &str = unsafe { std::mem::transmute(B) };
   |              ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/transmute.rs:132:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/transmute.rs:132:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/transmute.rs:132:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 48 previous errors

