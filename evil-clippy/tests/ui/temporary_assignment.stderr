error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:6:1
   |
LL | struct TupleStruct(i32);
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:8:1
   |
LL | struct Struct {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:12:1
   |
LL | struct MultiStruct {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:16:1
   |
LL | struct Wrapper<'a> {
   | ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/temporary_assignment.rs:17:12
   |
LL |     inner: &'a mut Struct,
   |            ^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:20:1
   |
LL | impl<'a> Deref for Wrapper<'a> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/temporary_assignment.rs:22:5
   |
LL |     fn deref(&self) -> &Struct {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/temporary_assignment.rs:22:5
   |
LL |     fn deref(&self) -> &Struct {
   |     ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/temporary_assignment.rs:22:15
   |
LL |     fn deref(&self) -> &Struct {
   |               ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/temporary_assignment.rs:22:14
   |
LL |     fn deref(&self) -> &Struct {
   |              ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/temporary_assignment.rs:22:24
   |
LL |     fn deref(&self) -> &Struct {
   |                        ^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:27:1
   |
LL | impl<'a> DerefMut for Wrapper<'a> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/temporary_assignment.rs:28:5
   |
LL |     fn deref_mut(&mut self) -> &mut Struct {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/temporary_assignment.rs:28:5
   |
LL |     fn deref_mut(&mut self) -> &mut Struct {
   |     ^

error: parameter must be `mut`
  --> tests/ui/temporary_assignment.rs:28:23
   |
LL |     fn deref_mut(&mut self) -> &mut Struct {
   |                       ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/temporary_assignment.rs:28:18
   |
LL |     fn deref_mut(&mut self) -> &mut Struct {
   |                  ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/temporary_assignment.rs:28:32
   |
LL |     fn deref_mut(&mut self) -> &mut Struct {
   |                                ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:33:1
   |
LL | struct ArrayStruct {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:37:1
   |
LL | const A: TupleStruct = TupleStruct(1);
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:38:1
   |
LL | const B: Struct = Struct { field: 1 };
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:39:1
   |
LL | const C: MultiStruct = MultiStruct {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:42:1
   |
LL | const D: ArrayStruct = ArrayStruct { array: [1] };
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/temporary_assignment.rs:44:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/temporary_assignment.rs:44:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/temporary_assignment.rs:44:1
   |
LL | fn main() {
   | ^

error: references are not allowed
  --> tests/ui/temporary_assignment.rs:66:22
   |
LL |     Wrapper { inner: &mut s }.field = 1;
   |                      ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 27 previous errors

