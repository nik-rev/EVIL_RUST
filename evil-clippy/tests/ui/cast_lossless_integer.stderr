error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:4:1
   |
LL | type I64Alias = i64;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:6:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/cast_lossless_integer.rs:6:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/cast_lossless_integer.rs:6:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:121:1
   |
LL | const fn abc(input: u16) -> u32 {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/cast_lossless_integer.rs:121:7
   |
LL | const fn abc(input: u16) -> u32 {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/cast_lossless_integer.rs:121:7
   |
LL | const fn abc(input: u16) -> u32 {
   |       ^

error: parameter must be `mut`
  --> tests/ui/cast_lossless_integer.rs:121:14
   |
LL | const fn abc(input: u16) -> u32 {
   |              ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:126:1
   |
LL | mod cast_lossless_in_impl {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:127:5
   |
LL |     struct A;
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:129:5
   |
LL |     impl A {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/cast_lossless_integer.rs:130:19
   |
LL |         pub const fn convert(x: u32) -> u64 {
   |                   ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/cast_lossless_integer.rs:130:19
   |
LL |         pub const fn convert(x: u32) -> u64 {
   |                   ^

error: parameter must be `mut`
  --> tests/ui/cast_lossless_integer.rs:130:30
   |
LL |         pub const fn convert(x: u32) -> u64 {
   |                              ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:138:1
   |
LL | enum Test {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:136:10
   |
LL | #[derive(PartialEq, Debug)]
   |          ^

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:136:10
   |
LL | #[derive(PartialEq, Debug)]
   |          ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: function must be `unsafe`
  --> tests/ui/cast_lossless_integer.rs:136:7
   |
LL | #[derive(PartialEq, Debug)]
   |       ^  --------- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/cast_lossless_integer.rs:136:7
   |
LL | #[derive(PartialEq, Debug)]
   |       ^  --------- in this derive macro expansion

error: parameter must be `mut`
  --> tests/ui/cast_lossless_integer.rs:136:10
   |
LL | #[derive(PartialEq, Debug)]
   |          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/cast_lossless_integer.rs:136:10
   |
LL | #[derive(PartialEq, Debug)]
   |          ^

error: references are not allowed
  --> tests/ui/cast_lossless_integer.rs:136:10
   |
LL | #[derive(PartialEq, Debug)]
   |          ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/cast_lossless_integer.rs:136:10
   |
LL | #[derive(PartialEq, Debug)]
   |          ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:136:21
   |
LL | #[derive(PartialEq, Debug)]
   |                     ^

error: function must be `unsafe`
  --> tests/ui/cast_lossless_integer.rs:136:18
   |
LL | #[derive(PartialEq, Debug)]
   |                  ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/cast_lossless_integer.rs:136:18
   |
LL | #[derive(PartialEq, Debug)]
   |                  ^  ----- in this derive macro expansion

error: parameter must be `mut`
  --> tests/ui/cast_lossless_integer.rs:136:21
   |
LL | #[derive(PartialEq, Debug)]
   |                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/cast_lossless_integer.rs:136:21
   |
LL | #[derive(PartialEq, Debug)]
   |                     ^

error: references are not allowed
  --> tests/ui/cast_lossless_integer.rs:136:21
   |
LL | #[derive(PartialEq, Debug)]
   |                     ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/cast_lossless_integer.rs:136:21
   |
LL | #[derive(PartialEq, Debug)]
   |                     ^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:142:1
   |
LL | fn issue11458() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/cast_lossless_integer.rs:142:1
   |
LL | fn issue11458() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/cast_lossless_integer.rs:142:1
   |
LL | fn issue11458() {
   | ^

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:143:5
   |
LL |     macro_rules! sign_cast {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/cast_lossless_integer.rs:148:9
   |
LL |     let x = 10_u128;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:156:1
   |
LL | fn issue12695() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/cast_lossless_integer.rs:156:1
   |
LL | fn issue12695() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/cast_lossless_integer.rs:156:1
   |
LL | fn issue12695() {
   | ^

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:157:5
   |
LL |     macro_rules! in_macro {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:167:1
   |
LL | fn ty_from_macro() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/cast_lossless_integer.rs:167:1
   |
LL | fn ty_from_macro() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/cast_lossless_integer.rs:167:1
   |
LL | fn ty_from_macro() {
   | ^

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:168:5
   |
LL |     macro_rules! ty {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/cast_lossless_integer.rs:178:1
   |
LL | const IN_CONST: u64 = 0u8 as u64;
   | ^ help: make this item public: `pub`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 40 previous errors

