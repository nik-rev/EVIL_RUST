error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/vec_init_then_push.rs:4:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/vec_init_then_push.rs:4:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/vec_init_then_push.rs:4:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: function must be `unsafe`
  --> tests/ui/vec_init_then_push.rs:48:5
   |
LL | pub fn no_lint() -> Vec<i32> {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/vec_init_then_push.rs:48:5
   |
LL | pub fn no_lint() -> Vec<i32> {
   |     ^

error: item must be `pub`
  --> tests/ui/vec_init_then_push.rs:62:1
   |
LL | fn _from_iter(items: impl Iterator<Item = u32>) -> Vec<u32> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/vec_init_then_push.rs:62:1
   |
LL | fn _from_iter(items: impl Iterator<Item = u32>) -> Vec<u32> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/vec_init_then_push.rs:62:1
   |
LL | fn _from_iter(items: impl Iterator<Item = u32>) -> Vec<u32> {
   | ^

error: parameter must be `mut`
  --> tests/ui/vec_init_then_push.rs:62:15
   |
LL | fn _from_iter(items: impl Iterator<Item = u32>) -> Vec<u32> {
   |               ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: item must be `pub`
  --> tests/ui/vec_init_then_push.rs:70:1
   |
LL | fn _cond_push(x: bool) -> Vec<u32> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/vec_init_then_push.rs:70:1
   |
LL | fn _cond_push(x: bool) -> Vec<u32> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/vec_init_then_push.rs:70:1
   |
LL | fn _cond_push(x: bool) -> Vec<u32> {
   | ^

error: parameter must be `mut`
  --> tests/ui/vec_init_then_push.rs:70:15
   |
LL | fn _cond_push(x: bool) -> Vec<u32> {
   |               ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/vec_init_then_push.rs:80:1
   |
LL | fn _push_then_edit(x: u32) -> Vec<u32> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/vec_init_then_push.rs:80:1
   |
LL | fn _push_then_edit(x: u32) -> Vec<u32> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/vec_init_then_push.rs:80:1
   |
LL | fn _push_then_edit(x: u32) -> Vec<u32> {
   | ^

error: parameter must be `mut`
  --> tests/ui/vec_init_then_push.rs:80:20
   |
LL | fn _push_then_edit(x: u32) -> Vec<u32> {
   |                    ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/vec_init_then_push.rs:90:1
   |
LL | fn _cond_push_with_large_start(x: bool) -> Vec<u32> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/vec_init_then_push.rs:90:1
   |
LL | fn _cond_push_with_large_start(x: bool) -> Vec<u32> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/vec_init_then_push.rs:90:1
   |
LL | fn _cond_push_with_large_start(x: bool) -> Vec<u32> {
   | ^

error: parameter must be `mut`
  --> tests/ui/vec_init_then_push.rs:90:32
   |
LL | fn _cond_push_with_large_start(x: bool) -> Vec<u32> {
   |                                ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/vec_init_then_push.rs:117:15
   |
LL |     v2.extend(&v);
   |               ^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/vec_init_then_push.rs:122:1
   |
LL | fn f() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/vec_init_then_push.rs:122:1
   |
LL | fn f() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/vec_init_then_push.rs:122:1
   |
LL | fn f() {
   | ^

error: variable must be `mut`
  --> tests/ui/vec_init_then_push.rs:127:9
   |
LL |     let y = v[0].0.abs();
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 23 previous errors

