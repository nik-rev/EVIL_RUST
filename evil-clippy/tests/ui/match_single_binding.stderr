error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:11:1
   |
LL | struct Point {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:16:1
   |
LL | fn coords() -> Point {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/match_single_binding.rs:16:1
   |
LL | fn coords() -> Point {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/match_single_binding.rs:16:1
   |
LL | fn coords() -> Point {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:20:1
   |
LL | macro_rules! foo {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:28:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/match_single_binding.rs:28:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/match_single_binding.rs:28:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:29:9
   |
LL |     let a = 1;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:30:9
   |
LL |     let b = 2;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:31:9
   |
LL |     let c = 3;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:52:9
   |
LL |     let d = Some(5);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:66:17
   |
LL |             let x = 29;
   |                 ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:74:17
   |
LL |             let e = 5 * a;
   |                 ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:81:9
   |
LL |     let p = Point { x: 0, y: 7 };
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:92:9
   |
LL |     let x = 5;
   |         ^ help: make this variable mutable: `mut`

error: `ref` is not allowed, as it binds by reference
  --> tests/ui/match_single_binding.rs:95:9
   |
LL |         ref r => println!("Got a reference to {}", r),
   |         ^^^^^
   |
   = note: requested on the command line with `-D clippy::reference-used`

error: `ref` is not allowed, as it binds by reference
  --> tests/ui/match_single_binding.rs:101:9
   |
LL |         ref mut mr => println!("Got a mutable reference to {}", mr),
   |         ^^^^^^^^^^

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:104:9
   |
LL |     let product = match coords() {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:109:9
   |
LL |     let v = vec![Some(1), Some(2), Some(3), Some(4)];
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:119:9
   |
LL |     let x = 1;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:127:9
   |
LL |     let x = 1;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:128:9
   |
LL |     let y = 1;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:139:9
   |
LL |     let x = 1;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:147:1
   |
LL | fn issue_8723() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/match_single_binding.rs:147:1
   |
LL | fn issue_8723() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/match_single_binding.rs:147:1
   |
LL | fn issue_8723() {
   | ^

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:148:19
   |
LL |     let (mut val, idx) = ("a b", 1);
   |                   ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:161:1
   |
LL | fn side_effects() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/match_single_binding.rs:161:1
   |
LL | fn side_effects() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/match_single_binding.rs:161:1
   |
LL | fn side_effects() {}
   | ^

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:163:1
   |
LL | fn issue_9575() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/match_single_binding.rs:163:1
   |
LL | fn issue_9575() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/match_single_binding.rs:163:1
   |
LL | fn issue_9575() {
   | ^

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:170:1
   |
LL | fn issue_9725(r: Option<u32>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/match_single_binding.rs:170:1
   |
LL | fn issue_9725(r: Option<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/match_single_binding.rs:170:1
   |
LL | fn issue_9725(r: Option<u32>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/match_single_binding.rs:170:15
   |
LL | fn issue_9725(r: Option<u32>) {
   |               ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:184:1
   |
LL | fn issue_10447() -> usize {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/match_single_binding.rs:184:1
   |
LL | fn issue_10447() -> usize {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/match_single_binding.rs:184:1
   |
LL | fn issue_10447() -> usize {
   | ^

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:190:9
   |
LL |     let a = match 1 {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:200:9
   |
LL |     let b = match 1 {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:210:9
   |
LL |     let c = match 1 {
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:215:9
   |
LL |     let in_expr = [
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:233:1
   |
LL | fn issue14634() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/match_single_binding.rs:233:1
   |
LL | fn issue14634() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/match_single_binding.rs:233:1
   |
LL | fn issue14634() {
   | ^

error: item must be `pub`
  --> tests/ui/match_single_binding.rs:234:5
   |
LL |     macro_rules! id {
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/match_single_binding.rs:239:11
   |
LL |     match dbg!(3) {
   |           ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/match_single_binding.rs:243:11
   |
LL |     match dbg!(3) {
   |           ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/match_single_binding.rs:247:13
   |
LL |     let id!(_a) = match dbg!(3) {
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/match_single_binding.rs:247:25
   |
LL |     let id!(_a) = match dbg!(3) {
   |                         ^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/match_single_binding.rs:248:19
   |
LL |         id!(b) => dbg!(b + 1),
   |                   ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 50 previous errors

