error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/err_expect.rs:3:1
   |
LL | struct MyTypeNonDebug;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/err_expect.rs:6:1
   |
LL | struct MyTypeDebug;
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/err_expect.rs:5:10
   |
LL | #[derive(Debug)]
   |          ^

error: function must be `unsafe`
  --> tests/ui/err_expect.rs:5:7
   |
LL | #[derive(Debug)]
   |       ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/err_expect.rs:5:7
   |
LL | #[derive(Debug)]
   |       ^  ----- in this derive macro expansion
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/err_expect.rs:5:10
   |
LL | #[derive(Debug)]
   |          ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: parameter must be `mut`
  --> tests/ui/err_expect.rs:5:10
   |
LL | #[derive(Debug)]
   |          ^

error: references are not allowed
  --> tests/ui/err_expect.rs:5:10
   |
LL | #[derive(Debug)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/err_expect.rs:5:10
   |
LL | #[derive(Debug)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/err_expect.rs:8:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/err_expect.rs:8:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/err_expect.rs:8:1
   |
LL | fn main() {
   | ^

error: variable must be `mut`
  --> tests/ui/err_expect.rs:9:9
   |
LL |     let test_debug: Result<MyTypeDebug, u32> = Ok(MyTypeDebug);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/err_expect.rs:13:9
   |
LL |     let test_non_debug: Result<MyTypeNonDebug, u32> = Ok(MyTypeNonDebug);
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/err_expect.rs:18:1
   |
LL | fn msrv_1_16() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/err_expect.rs:18:1
   |
LL | fn msrv_1_16() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/err_expect.rs:18:1
   |
LL | fn msrv_1_16() {
   | ^

error: variable must be `mut`
  --> tests/ui/err_expect.rs:19:9
   |
LL |     let x: Result<u32, &str> = Ok(16);
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/err_expect.rs:19:24
   |
LL |     let x: Result<u32, &str> = Ok(16);
   |                        ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/err_expect.rs:24:1
   |
LL | fn msrv_1_17() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/err_expect.rs:24:1
   |
LL | fn msrv_1_17() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/err_expect.rs:24:1
   |
LL | fn msrv_1_17() {
   | ^

error: variable must be `mut`
  --> tests/ui/err_expect.rs:25:9
   |
LL |     let x: Result<u32, &str> = Ok(17);
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/err_expect.rs:25:24
   |
LL |     let x: Result<u32, &str> = Ok(17);
   |                        ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 24 previous errors

