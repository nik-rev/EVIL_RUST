error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: trait must be `unsafe`
  --> tests/ui/crashes/ice-6793.rs:5:1
   |
LL | / trait Trait {
LL | |     type Ty: 'static + Clone;
LL | |
LL | |     fn broken() -> Self::Ty;
LL | | }
   | |_^
   |
   = help: make this trait unsafe: `unsafe trait`
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/crashes/ice-6793.rs:5:1
   |
LL | trait Trait {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/crashes/ice-6793.rs:8:5
   |
LL |     fn broken() -> Self::Ty;
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/crashes/ice-6793.rs:8:5
   |
LL |     fn broken() -> Self::Ty;
   |     ^

error: item must be `pub`
  --> tests/ui/crashes/ice-6793.rs:12:1
   |
LL | struct MyType {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/crashes/ice-6793.rs:11:10
   |
LL | #[derive(Clone)]
   |          ^

error: function must be `unsafe`
  --> tests/ui/crashes/ice-6793.rs:11:7
   |
LL | #[derive(Clone)]
   |       ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/crashes/ice-6793.rs:11:7
   |
LL | #[derive(Clone)]
   |       ^  ----- in this derive macro expansion

error: parameter must be `mut`
  --> tests/ui/crashes/ice-6793.rs:11:10
   |
LL | #[derive(Clone)]
   |          ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/crashes/ice-6793.rs:11:10
   |
LL | #[derive(Clone)]
   |          ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/crashes/ice-6793.rs:13:5
   |
LL | #[derive(Clone)]
   |          ----- in this derive macro expansion
LL | struct MyType {
LL |     x: i32,
   |     ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/crashes/ice-6793.rs:16:1
   |
LL | impl Trait for MyType {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/crashes/ice-6793.rs:19:5
   |
LL |     fn broken() -> Self::Ty {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/crashes/ice-6793.rs:19:5
   |
LL |     fn broken() -> Self::Ty {
   |     ^

error: item must be `pub`
  --> tests/ui/crashes/ice-6793.rs:24:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/crashes/ice-6793.rs:24:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/crashes/ice-6793.rs:24:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 17 previous errors

