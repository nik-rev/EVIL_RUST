error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/crashes/ice-rust-107877.rs:5:1
   |
LL | struct Foo;
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/crashes/ice-rust-107877.rs:7:1
   |
LL | impl<'a> std::convert::TryFrom<&'a String> for Foo {
   | ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/crashes/ice-rust-107877.rs:7:32
   |
LL | impl<'a> std::convert::TryFrom<&'a String> for Foo {
   |                                ^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: function must be `unsafe`
  --> tests/ui/crashes/ice-rust-107877.rs:10:5
   |
LL |     fn try_from(_: &'a String) -> Result<Self, Self::Error> {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/crashes/ice-rust-107877.rs:10:5
   |
LL |     fn try_from(_: &'a String) -> Result<Self, Self::Error> {
   |     ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: references are not allowed
  --> tests/ui/crashes/ice-rust-107877.rs:10:20
   |
LL |     fn try_from(_: &'a String) -> Result<Self, Self::Error> {
   |                    ^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/crashes/ice-rust-107877.rs:15:1
   |
LL | fn find<E>(_: impl std::convert::TryInto<Foo, Error = E>) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/crashes/ice-rust-107877.rs:15:1
   |
LL | fn find<E>(_: impl std::convert::TryInto<Foo, Error = E>) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/crashes/ice-rust-107877.rs:15:1
   |
LL | fn find<E>(_: impl std::convert::TryInto<Foo, Error = E>) {}
   | ^

error: item must be `pub`
  --> tests/ui/crashes/ice-rust-107877.rs:17:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/crashes/ice-rust-107877.rs:17:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/crashes/ice-rust-107877.rs:17:1
   |
LL | fn main() {
   | ^

error: references are not allowed
  --> tests/ui/crashes/ice-rust-107877.rs:18:10
   |
LL |     find(&String::new());
   |          ^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 14 previous errors

