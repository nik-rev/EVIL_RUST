error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:12:1
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:12:1
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:12:1
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:12:8
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |        ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:12:26
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:12:35
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:12:11
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |           ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:12:29
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                             ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:12:38
   |
LL | fn foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                                      ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:19:1
   |
LL | fn foo2(s: &mut Vec<u32>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:19:1
   |
LL | fn foo2(s: &mut Vec<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:19:1
   |
LL | fn foo2(s: &mut Vec<u32>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:19:9
   |
LL | fn foo2(s: &mut Vec<u32>) {
   |         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:19:12
   |
LL | fn foo2(s: &mut Vec<u32>) {
   |            ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:24:1
   |
LL | fn foo3(s: &mut Vec<u32>) -> &mut Vec<u32> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:24:1
   |
LL | fn foo3(s: &mut Vec<u32>) -> &mut Vec<u32> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:24:1
   |
LL | fn foo3(s: &mut Vec<u32>) -> &mut Vec<u32> {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:24:9
   |
LL | fn foo3(s: &mut Vec<u32>) -> &mut Vec<u32> {
   |         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:24:12
   |
LL | fn foo3(s: &mut Vec<u32>) -> &mut Vec<u32> {
   |            ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:24:30
   |
LL | fn foo3(s: &mut Vec<u32>) -> &mut Vec<u32> {
   |                              ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:29:1
   |
LL | fn foo4(s: &mut Vec<u32>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:29:1
   |
LL | fn foo4(s: &mut Vec<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:29:1
   |
LL | fn foo4(s: &mut Vec<u32>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:29:9
   |
LL | fn foo4(s: &mut Vec<u32>) {
   |         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:29:12
   |
LL | fn foo4(s: &mut Vec<u32>) {
   |            ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:34:1
   |
LL | fn foo5(s: &mut Vec<u32>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:34:1
   |
LL | fn foo5(s: &mut Vec<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:34:1
   |
LL | fn foo5(s: &mut Vec<u32>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:34:9
   |
LL | fn foo5(s: &mut Vec<u32>) {
   |         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:34:12
   |
LL | fn foo5(s: &mut Vec<u32>) {
   |            ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:38:1
   |
LL | fn foo6(s: &mut Vec<u32>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:38:1
   |
LL | fn foo6(s: &mut Vec<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:38:1
   |
LL | fn foo6(s: &mut Vec<u32>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:38:9
   |
LL | fn foo6(s: &mut Vec<u32>) {
   |         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:38:12
   |
LL | fn foo6(s: &mut Vec<u32>) {
   |            ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:44:1
   |
LL | fn non_mut_ref(_: &Vec<u32>) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:44:1
   |
LL | fn non_mut_ref(_: &Vec<u32>) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:44:1
   |
LL | fn non_mut_ref(_: &Vec<u32>) {}
   | ^

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:44:19
   |
LL | fn non_mut_ref(_: &Vec<u32>) {}
   |                   ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:46:1
   |
LL | struct Bar;
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:48:1
   |
LL | impl Bar {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:49:5
   |
LL |     fn bar(&mut self) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:49:5
   |
LL |     fn bar(&mut self) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:49:17
   |
LL |     fn bar(&mut self) {}
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:49:12
   |
LL |     fn bar(&mut self) {}
   |            ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:52:5
   |
LL |     fn mushroom(&self, vec: &mut Vec<i32>) -> usize {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:52:5
   |
LL |     fn mushroom(&self, vec: &mut Vec<i32>) -> usize {
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:52:18
   |
LL |     fn mushroom(&self, vec: &mut Vec<i32>) -> usize {
   |                  ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:52:24
   |
LL |     fn mushroom(&self, vec: &mut Vec<i32>) -> usize {
   |                        ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:52:17
   |
LL |     fn mushroom(&self, vec: &mut Vec<i32>) -> usize {
   |                 ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:52:29
   |
LL |     fn mushroom(&self, vec: &mut Vec<i32>) -> usize {
   |                             ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: trait must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:59:1
   |
LL | / trait Babar {
LL | |     // Should not warn here since it's a trait method.
LL | |     fn method(arg: &mut u32);
LL | | }
   | |_^
   |
   = help: make this trait unsafe: `unsafe trait`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:59:1
   |
LL | trait Babar {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:61:5
   |
LL |     fn method(arg: &mut u32);
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:61:5
   |
LL |     fn method(arg: &mut u32);
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:61:15
   |
LL |     fn method(arg: &mut u32);
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:61:20
   |
LL |     fn method(arg: &mut u32);
   |                    ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:64:1
   |
LL | impl Babar for Bar {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:66:5
   |
LL |     fn method(a: &mut u32) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:66:5
   |
LL |     fn method(a: &mut u32) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:66:15
   |
LL |     fn method(a: &mut u32) {}
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:66:18
   |
LL |     fn method(a: &mut u32) {}
   |                  ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:70:1
   |
LL | fn alias_check(s: &mut Vec<u32>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:70:1
   |
LL | fn alias_check(s: &mut Vec<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:70:1
   |
LL | fn alias_check(s: &mut Vec<u32>) {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:70:16
   |
LL | fn alias_check(s: &mut Vec<u32>) {
   |                ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:70:19
   |
LL | fn alias_check(s: &mut Vec<u32>) {
   |                   ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:78:1
   |
LL | fn alias_check2(mut s: &mut Vec<u32>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:78:1
   |
LL | fn alias_check2(mut s: &mut Vec<u32>) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:78:1
   |
LL | fn alias_check2(mut s: &mut Vec<u32>) {
   | ^

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:78:24
   |
LL | fn alias_check2(mut s: &mut Vec<u32>) {
   |                        ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:79:21
   |
LL |     let mut alias = &mut s;
   |                     ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:83:1
   |
LL | struct Mut<T> {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:87:1
   |
LL | impl<T> Mut<T> {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:89:5
   |
LL |     fn new(ptr: &mut T) -> Self {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:89:5
   |
LL |     fn new(ptr: &mut T) -> Self {
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:89:12
   |
LL |     fn new(ptr: &mut T) -> Self {
   |            ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:89:17
   |
LL |     fn new(ptr: &mut T) -> Self {
   |                 ^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:97:1
   |
LL | fn unused(_: &mut u32, _b: &mut u8) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:97:1
   |
LL | fn unused(_: &mut u32, _b: &mut u8) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:97:1
   |
LL | fn unused(_: &mut u32, _b: &mut u8) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:97:24
   |
LL | fn unused(_: &mut u32, _b: &mut u8) {}
   |                        ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:97:14
   |
LL | fn unused(_: &mut u32, _b: &mut u8) {}
   |              ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:97:28
   |
LL | fn unused(_: &mut u32, _b: &mut u8) {}
   |                            ^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:100:1
   |
LL | async fn f1(x: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:100:7
   |
LL | async fn f1(x: &mut i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:100:7
   |
LL | async fn f1(x: &mut i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:100:13
   |
LL | async fn f1(x: &mut i32) {
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:100:16
   |
LL | async fn f1(x: &mut i32) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:104:1
   |
LL | async fn f2(x: &mut i32, y: String) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:104:7
   |
LL | async fn f2(x: &mut i32, y: String) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:104:7
   |
LL | async fn f2(x: &mut i32, y: String) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:104:13
   |
LL | async fn f2(x: &mut i32, y: String) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:104:26
   |
LL | async fn f2(x: &mut i32, y: String) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:104:16
   |
LL | async fn f2(x: &mut i32, y: String) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:108:1
   |
LL | async fn f3(x: &mut i32, y: String, z: String) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:108:7
   |
LL | async fn f3(x: &mut i32, y: String, z: String) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:108:7
   |
LL | async fn f3(x: &mut i32, y: String, z: String) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:108:13
   |
LL | async fn f3(x: &mut i32, y: String, z: String) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:108:26
   |
LL | async fn f3(x: &mut i32, y: String, z: String) {
   |                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:108:37
   |
LL | async fn f3(x: &mut i32, y: String, z: String) {
   |                                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:108:16
   |
LL | async fn f3(x: &mut i32, y: String, z: String) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:112:1
   |
LL | async fn f4(x: &mut i32, y: i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:112:7
   |
LL | async fn f4(x: &mut i32, y: i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:112:7
   |
LL | async fn f4(x: &mut i32, y: i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:112:13
   |
LL | async fn f4(x: &mut i32, y: i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:112:26
   |
LL | async fn f4(x: &mut i32, y: i32) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:112:16
   |
LL | async fn f4(x: &mut i32, y: i32) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:116:1
   |
LL | async fn f5(x: i32, y: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:116:7
   |
LL | async fn f5(x: i32, y: &mut i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:116:7
   |
LL | async fn f5(x: i32, y: &mut i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:116:13
   |
LL | async fn f5(x: i32, y: &mut i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:116:21
   |
LL | async fn f5(x: i32, y: &mut i32) {
   |                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:116:24
   |
LL | async fn f5(x: i32, y: &mut i32) {
   |                        ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:120:1
   |
LL | async fn f6(x: i32, y: &mut i32, z: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:120:7
   |
LL | async fn f6(x: i32, y: &mut i32, z: &mut i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:120:7
   |
LL | async fn f6(x: i32, y: &mut i32, z: &mut i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:120:13
   |
LL | async fn f6(x: i32, y: &mut i32, z: &mut i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:120:21
   |
LL | async fn f6(x: i32, y: &mut i32, z: &mut i32) {
   |                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:120:34
   |
LL | async fn f6(x: i32, y: &mut i32, z: &mut i32) {
   |                                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:120:24
   |
LL | async fn f6(x: i32, y: &mut i32, z: &mut i32) {
   |                        ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:120:37
   |
LL | async fn f6(x: i32, y: &mut i32, z: &mut i32) {
   |                                     ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:125:1
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:125:7
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:125:7
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:125:13
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:125:26
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   |                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:125:34
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   |                                  ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:125:47
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   |                                               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:125:16
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:125:37
   |
LL | async fn f7(x: &mut i32, y: i32, z: &mut i32, a: i32) {
   |                                     ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:130:1
   |
LL | async fn a1(x: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:130:7
   |
LL | async fn a1(x: &mut i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:130:7
   |
LL | async fn a1(x: &mut i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:130:13
   |
LL | async fn a1(x: &mut i32) {
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:130:16
   |
LL | async fn a1(x: &mut i32) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:135:1
   |
LL | async fn a2(x: &mut i32, y: String) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:135:7
   |
LL | async fn a2(x: &mut i32, y: String) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:135:7
   |
LL | async fn a2(x: &mut i32, y: String) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:135:13
   |
LL | async fn a2(x: &mut i32, y: String) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:135:26
   |
LL | async fn a2(x: &mut i32, y: String) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:135:16
   |
LL | async fn a2(x: &mut i32, y: String) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:140:1
   |
LL | async fn a3(x: &mut i32, y: String, z: String) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:140:7
   |
LL | async fn a3(x: &mut i32, y: String, z: String) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:140:7
   |
LL | async fn a3(x: &mut i32, y: String, z: String) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:140:13
   |
LL | async fn a3(x: &mut i32, y: String, z: String) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:140:26
   |
LL | async fn a3(x: &mut i32, y: String, z: String) {
   |                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:140:37
   |
LL | async fn a3(x: &mut i32, y: String, z: String) {
   |                                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:140:16
   |
LL | async fn a3(x: &mut i32, y: String, z: String) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:145:1
   |
LL | async fn a4(x: &mut i32, y: i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:145:7
   |
LL | async fn a4(x: &mut i32, y: i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:145:7
   |
LL | async fn a4(x: &mut i32, y: i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:145:13
   |
LL | async fn a4(x: &mut i32, y: i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:145:26
   |
LL | async fn a4(x: &mut i32, y: i32) {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:145:16
   |
LL | async fn a4(x: &mut i32, y: i32) {
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:150:1
   |
LL | async fn a5(x: i32, y: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:150:7
   |
LL | async fn a5(x: i32, y: &mut i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:150:7
   |
LL | async fn a5(x: i32, y: &mut i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:150:13
   |
LL | async fn a5(x: i32, y: &mut i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:150:21
   |
LL | async fn a5(x: i32, y: &mut i32) {
   |                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:150:24
   |
LL | async fn a5(x: i32, y: &mut i32) {
   |                        ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:155:1
   |
LL | async fn a6(x: i32, y: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:155:7
   |
LL | async fn a6(x: i32, y: &mut i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:155:7
   |
LL | async fn a6(x: i32, y: &mut i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:155:13
   |
LL | async fn a6(x: i32, y: &mut i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:155:21
   |
LL | async fn a6(x: i32, y: &mut i32) {
   |                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:155:24
   |
LL | async fn a6(x: i32, y: &mut i32) {
   |                        ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:160:1
   |
LL | async fn a7(x: i32, y: i32, z: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:160:7
   |
LL | async fn a7(x: i32, y: i32, z: &mut i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:160:7
   |
LL | async fn a7(x: i32, y: i32, z: &mut i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:160:13
   |
LL | async fn a7(x: i32, y: i32, z: &mut i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:160:21
   |
LL | async fn a7(x: i32, y: i32, z: &mut i32) {
   |                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:160:29
   |
LL | async fn a7(x: i32, y: i32, z: &mut i32) {
   |                             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:160:32
   |
LL | async fn a7(x: i32, y: i32, z: &mut i32) {
   |                                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:165:1
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:165:7
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:165:7
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:165:13
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:165:21
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   |                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:165:34
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   |                                  ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:165:42
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   |                                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:165:24
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   |                        ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:165:45
   |
LL | async fn a8(x: i32, a: &mut i32, y: i32, z: &mut i32) {
   |                                             ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:173:1
   |
LL | fn passed_as_closure(s: &mut u32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:173:1
   |
LL | fn passed_as_closure(s: &mut u32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:173:1
   |
LL | fn passed_as_closure(s: &mut u32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:173:22
   |
LL | fn passed_as_closure(s: &mut u32) {}
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:173:25
   |
LL | fn passed_as_closure(s: &mut u32) {}
   |                         ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:176:1
   |
LL | fn passed_as_local(s: &mut u32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:176:1
   |
LL | fn passed_as_local(s: &mut u32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:176:1
   |
LL | fn passed_as_local(s: &mut u32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:176:20
   |
LL | fn passed_as_local(s: &mut u32) {}
   |                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:176:23
   |
LL | fn passed_as_local(s: &mut u32) {}
   |                       ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:179:1
   |
LL | fn ty_unify_1(s: &mut u32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:179:1
   |
LL | fn ty_unify_1(s: &mut u32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:179:1
   |
LL | fn ty_unify_1(s: &mut u32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:179:15
   |
LL | fn ty_unify_1(s: &mut u32) {}
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:179:18
   |
LL | fn ty_unify_1(s: &mut u32) {}
   |                  ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:182:1
   |
LL | fn ty_unify_2(s: &mut u32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:182:1
   |
LL | fn ty_unify_2(s: &mut u32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:182:1
   |
LL | fn ty_unify_2(s: &mut u32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:182:15
   |
LL | fn ty_unify_2(s: &mut u32) {}
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:182:18
   |
LL | fn ty_unify_2(s: &mut u32) {}
   |                  ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:185:1
   |
LL | fn passed_as_field(s: &mut u32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:185:1
   |
LL | fn passed_as_field(s: &mut u32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:185:1
   |
LL | fn passed_as_field(s: &mut u32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:185:20
   |
LL | fn passed_as_field(s: &mut u32) {}
   |                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:185:23
   |
LL | fn passed_as_field(s: &mut u32) {}
   |                       ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:187:1
   |
LL | fn closure_takes_mut(s: fn(&mut u32)) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:187:1
   |
LL | fn closure_takes_mut(s: fn(&mut u32)) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:187:1
   |
LL | fn closure_takes_mut(s: fn(&mut u32)) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:187:22
   |
LL | fn closure_takes_mut(s: fn(&mut u32)) {}
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:187:28
   |
LL | fn closure_takes_mut(s: fn(&mut u32)) {}
   |                            ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:189:1
   |
LL | struct A {
   | ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:190:11
   |
LL |     s: fn(&mut u32),
   |           ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:194:1
   |
LL | fn used_as_path(s: &mut u32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:194:1
   |
LL | fn used_as_path(s: &mut u32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:194:1
   |
LL | fn used_as_path(s: &mut u32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:194:17
   |
LL | fn used_as_path(s: &mut u32) {}
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:194:20
   |
LL | fn used_as_path(s: &mut u32) {}
   |                    ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:198:1
   |
LL | fn lint_attr(s: &mut u32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:198:1
   |
LL | fn lint_attr(s: &mut u32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:198:1
   |
LL | fn lint_attr(s: &mut u32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:198:14
   |
LL | fn lint_attr(s: &mut u32) {}
   |              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:198:17
   |
LL | fn lint_attr(s: &mut u32) {}
   |                 ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:201:1
   |
LL | fn cfg_warn(s: &mut u32) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:201:1
   |
LL | fn cfg_warn(s: &mut u32) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:201:1
   |
LL | fn cfg_warn(s: &mut u32) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:201:13
   |
LL | fn cfg_warn(s: &mut u32) {}
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:201:16
   |
LL | fn cfg_warn(s: &mut u32) {}
   |                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:205:1
   |
LL | mod foo {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:206:5
   |
LL |     fn cfg_warn(s: &mut u32) {}
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:206:5
   |
LL |     fn cfg_warn(s: &mut u32) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:206:5
   |
LL |     fn cfg_warn(s: &mut u32) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:206:17
   |
LL |     fn cfg_warn(s: &mut u32) {}
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:206:20
   |
LL |     fn cfg_warn(s: &mut u32) {}
   |                    ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:211:1
   |
LL | async fn inner_async(x: &mut i32, y: &mut u32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:211:7
   |
LL | async fn inner_async(x: &mut i32, y: &mut u32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:211:7
   |
LL | async fn inner_async(x: &mut i32, y: &mut u32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:211:22
   |
LL | async fn inner_async(x: &mut i32, y: &mut u32) {
   |                      ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:211:35
   |
LL | async fn inner_async(x: &mut i32, y: &mut u32) {
   |                                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:211:25
   |
LL | async fn inner_async(x: &mut i32, y: &mut u32) {
   |                         ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:211:38
   |
LL | async fn inner_async(x: &mut i32, y: &mut u32) {
   |                                      ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:219:1
   |
LL | async fn inner_async2(x: &mut i32, y: &mut u32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:219:7
   |
LL | async fn inner_async2(x: &mut i32, y: &mut u32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:219:7
   |
LL | async fn inner_async2(x: &mut i32, y: &mut u32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:219:23
   |
LL | async fn inner_async2(x: &mut i32, y: &mut u32) {
   |                       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:219:36
   |
LL | async fn inner_async2(x: &mut i32, y: &mut u32) {
   |                                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:219:26
   |
LL | async fn inner_async2(x: &mut i32, y: &mut u32) {
   |                          ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:219:39
   |
LL | async fn inner_async2(x: &mut i32, y: &mut u32) {
   |                                       ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:228:1
   |
LL | async fn inner_async3(x: &mut i32, y: &mut u32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:228:7
   |
LL | async fn inner_async3(x: &mut i32, y: &mut u32) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:228:7
   |
LL | async fn inner_async3(x: &mut i32, y: &mut u32) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:228:23
   |
LL | async fn inner_async3(x: &mut i32, y: &mut u32) {
   |                       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:228:36
   |
LL | async fn inner_async3(x: &mut i32, y: &mut u32) {
   |                                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:228:26
   |
LL | async fn inner_async3(x: &mut i32, y: &mut u32) {
   |                          ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:228:39
   |
LL | async fn inner_async3(x: &mut i32, y: &mut u32) {
   |                                       ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:238:1
   |
LL | async fn async_vec(b: &mut Vec<bool>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:238:7
   |
LL | async fn async_vec(b: &mut Vec<bool>) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:238:7
   |
LL | async fn async_vec(b: &mut Vec<bool>) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:238:20
   |
LL | async fn async_vec(b: &mut Vec<bool>) {
   |                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:238:23
   |
LL | async fn async_vec(b: &mut Vec<bool>) {
   |                       ^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:239:14
   |
LL |     b.append(&mut vec![]);
   |              ^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:243:1
   |
LL | async fn async_vec2(b: &mut Vec<bool>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:243:7
   |
LL | async fn async_vec2(b: &mut Vec<bool>) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:243:7
   |
LL | async fn async_vec2(b: &mut Vec<bool>) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:243:21
   |
LL | async fn async_vec2(b: &mut Vec<bool>) {
   |                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:243:24
   |
LL | async fn async_vec2(b: &mut Vec<bool>) {
   |                        ^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:246:1
   |
LL | fn non_mut(n: &str) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:246:1
   |
LL | fn non_mut(n: &str) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:246:1
   |
LL | fn non_mut(n: &str) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:246:12
   |
LL | fn non_mut(n: &str) {}
   |            ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:246:15
   |
LL | fn non_mut(n: &str) {}
   |               ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:248:1
   |
LL | async fn call_in_closure1(n: &mut str) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:248:7
   |
LL | async fn call_in_closure1(n: &mut str) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:248:7
   |
LL | async fn call_in_closure1(n: &mut str) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:248:27
   |
LL | async fn call_in_closure1(n: &mut str) {
   |                           ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:248:30
   |
LL | async fn call_in_closure1(n: &mut str) {
   |                              ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:252:1
   |
LL | fn str_mut(str: &mut String) -> bool {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:252:1
   |
LL | fn str_mut(str: &mut String) -> bool {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:252:1
   |
LL | fn str_mut(str: &mut String) -> bool {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:252:12
   |
LL | fn str_mut(str: &mut String) -> bool {
   |            ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:252:17
   |
LL | fn str_mut(str: &mut String) -> bool {
   |                 ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:256:1
   |
LL | async fn call_in_closure2(str: &mut String) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:256:7
   |
LL | async fn call_in_closure2(str: &mut String) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:256:7
   |
LL | async fn call_in_closure2(str: &mut String) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:256:27
   |
LL | async fn call_in_closure2(str: &mut String) {
   |                           ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:256:32
   |
LL | async fn call_in_closure2(str: &mut String) {
   |                                ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:261:1
   |
LL | async fn closure(n: &mut usize) -> impl '_ + FnMut() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:261:7
   |
LL | async fn closure(n: &mut usize) -> impl '_ + FnMut() {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:261:7
   |
LL | async fn closure(n: &mut usize) -> impl '_ + FnMut() {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:261:18
   |
LL | async fn closure(n: &mut usize) -> impl '_ + FnMut() {
   |                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:261:21
   |
LL | async fn closure(n: &mut usize) -> impl '_ + FnMut() {
   |                     ^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:268:1
   |
LL | fn closure2(n: &mut usize) -> impl '_ + FnMut() -> usize {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:268:1
   |
LL | fn closure2(n: &mut usize) -> impl '_ + FnMut() -> usize {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:268:1
   |
LL | fn closure2(n: &mut usize) -> impl '_ + FnMut() -> usize {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:268:13
   |
LL | fn closure2(n: &mut usize) -> impl '_ + FnMut() -> usize {
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:268:16
   |
LL | fn closure2(n: &mut usize) -> impl '_ + FnMut() -> usize {
   |                ^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:275:1
   |
LL | async fn closure3(n: &mut usize) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:275:7
   |
LL | async fn closure3(n: &mut usize) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:275:7
   |
LL | async fn closure3(n: &mut usize) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:275:19
   |
LL | async fn closure3(n: &mut usize) {
   |                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:275:22
   |
LL | async fn closure3(n: &mut usize) {
   |                      ^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:280:1
   |
LL | async fn closure4(n: &mut usize) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:280:7
   |
LL | async fn closure4(n: &mut usize) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:280:7
   |
LL | async fn closure4(n: &mut usize) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:280:19
   |
LL | async fn closure4(n: &mut usize) {
   |                   ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:280:22
   |
LL | async fn closure4(n: &mut usize) {
   |                      ^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: variable must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:284:13
   |
LL |         let _x = *n + 1;
   |             ^ help: make this variable mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:289:5
   |
LL | pub fn pub_foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:289:5
   |
LL | pub fn pub_foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:289:16
   |
LL | pub fn pub_foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:289:34
   |
LL | pub fn pub_foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                                  ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:289:43
   |
LL | pub fn pub_foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                                           ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:289:19
   |
LL | pub fn pub_foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                   ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:289:37
   |
LL | pub fn pub_foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                                     ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:289:46
   |
LL | pub fn pub_foo(s: &mut Vec<u32>, b: &u32, x: &mut u32) {
   |                                              ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:294:1
   |
LL | async fn _f(v: &mut Vec<()>) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:294:7
   |
LL | async fn _f(v: &mut Vec<()>) {
   |       ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:294:7
   |
LL | async fn _f(v: &mut Vec<()>) {
   |       ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:294:13
   |
LL | async fn _f(v: &mut Vec<()>) {
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:294:16
   |
LL | async fn _f(v: &mut Vec<()>) {
   |                ^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: variable must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:295:9
   |
LL |     let x = || v.pop();
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:299:1
   |
LL | struct Data<T: ?Sized> {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:303:1
   |
LL | unsafe fn get_mut_unchecked<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   | ^ help: make this item public: `pub`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:303:32
   |
LL | unsafe fn get_mut_unchecked<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   |                                ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:303:37
   |
LL | unsafe fn get_mut_unchecked<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   |                                     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:303:63
   |
LL | unsafe fn get_mut_unchecked<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   |                                                               ^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:304:14
   |
LL |     unsafe { &mut (*ptr.as_ptr()).value }
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:307:1
   |
LL | fn get_mut_unchecked2<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:307:1
   |
LL | fn get_mut_unchecked2<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:307:1
   |
LL | fn get_mut_unchecked2<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:307:26
   |
LL | fn get_mut_unchecked2<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   |                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:307:31
   |
LL | fn get_mut_unchecked2<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   |                               ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:307:57
   |
LL | fn get_mut_unchecked2<T>(ptr: &mut NonNull<Data<T>>) -> &mut T {
   |                                                         ^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:308:14
   |
LL |     unsafe { &mut (*ptr.as_ptr()).value }
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:311:1
   |
LL | fn set_true(b: &mut bool) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:311:1
   |
LL | fn set_true(b: &mut bool) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:311:1
   |
LL | fn set_true(b: &mut bool) {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:311:13
   |
LL | fn set_true(b: &mut bool) {
   |             ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:311:16
   |
LL | fn set_true(b: &mut bool) {
   |                ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:316:1
   |
LL | fn true_setter(b: &mut bool) -> impl FnOnce() + '_ {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:316:1
   |
LL | fn true_setter(b: &mut bool) -> impl FnOnce() + '_ {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:316:1
   |
LL | fn true_setter(b: &mut bool) -> impl FnOnce() + '_ {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:316:16
   |
LL | fn true_setter(b: &mut bool) -> impl FnOnce() + '_ {
   |                ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:316:19
   |
LL | fn true_setter(b: &mut bool) -> impl FnOnce() + '_ {
   |                   ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:321:1
   |
LL | fn filter_copy<T: Copy>(predicate: &mut impl FnMut(T) -> bool) -> impl FnMut(&T) -> bool + '_ {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:321:1
   |
LL | fn filter_copy<T: Copy>(predicate: &mut impl FnMut(T) -> bool) -> impl FnMut(&T) -> bool + '_ {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:321:1
   |
LL | fn filter_copy<T: Copy>(predicate: &mut impl FnMut(T) -> bool) -> impl FnMut(&T) -> bool + '_ {
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:321:25
   |
LL | fn filter_copy<T: Copy>(predicate: &mut impl FnMut(T) -> bool) -> impl FnMut(&T) -> bool + '_ {
   |                         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:321:36
   |
LL | fn filter_copy<T: Copy>(predicate: &mut impl FnMut(T) -> bool) -> impl FnMut(&T) -> bool + '_ {
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:321:78
   |
LL | fn filter_copy<T: Copy>(predicate: &mut impl FnMut(T) -> bool) -> impl FnMut(&T) -> bool + '_ {
   |                                                                              ^^
   |
   = help: use a raw pointer instead: `*const`

error: trait must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:325:1
   |
LL | / trait MutSelfTrait {
LL | |     // Should not warn since it's a trait method.
LL | |     fn mut_self(&mut self);
LL | | }
   | |_^
   |
   = help: make this trait unsafe: `unsafe trait`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:325:1
   |
LL | trait MutSelfTrait {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:327:5
   |
LL |     fn mut_self(&mut self);
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:327:5
   |
LL |     fn mut_self(&mut self);
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:327:22
   |
LL |     fn mut_self(&mut self);
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:327:17
   |
LL |     fn mut_self(&mut self);
   |                 ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:330:1
   |
LL | struct MutSelf {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:334:1
   |
LL | impl MutSelf {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:335:5
   |
LL |     fn bar(&mut self) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:335:5
   |
LL |     fn bar(&mut self) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:335:17
   |
LL |     fn bar(&mut self) {}
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:335:12
   |
LL |     fn bar(&mut self) {}
   |            ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:338:11
   |
LL |     async fn foo(&mut self, u: &mut i32, v: &mut u32) {
   |           ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:338:11
   |
LL |     async fn foo(&mut self, u: &mut i32, v: &mut u32) {
   |           ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:338:23
   |
LL |     async fn foo(&mut self, u: &mut i32, v: &mut u32) {
   |                       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:338:29
   |
LL |     async fn foo(&mut self, u: &mut i32, v: &mut u32) {
   |                             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:338:42
   |
LL |     async fn foo(&mut self, u: &mut i32, v: &mut u32) {
   |                                          ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:338:18
   |
LL |     async fn foo(&mut self, u: &mut i32, v: &mut u32) {
   |                  ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:338:32
   |
LL |     async fn foo(&mut self, u: &mut i32, v: &mut u32) {
   |                                ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:338:45
   |
LL |     async fn foo(&mut self, u: &mut i32, v: &mut u32) {
   |                                             ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:347:11
   |
LL |     async fn foo2(&mut self, u: &mut i32, v: &mut u32) {
   |           ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:347:11
   |
LL |     async fn foo2(&mut self, u: &mut i32, v: &mut u32) {
   |           ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:347:24
   |
LL |     async fn foo2(&mut self, u: &mut i32, v: &mut u32) {
   |                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:347:30
   |
LL |     async fn foo2(&mut self, u: &mut i32, v: &mut u32) {
   |                              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:347:43
   |
LL |     async fn foo2(&mut self, u: &mut i32, v: &mut u32) {
   |                                           ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:347:19
   |
LL |     async fn foo2(&mut self, u: &mut i32, v: &mut u32) {
   |                   ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:347:33
   |
LL |     async fn foo2(&mut self, u: &mut i32, v: &mut u32) {
   |                                 ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:347:46
   |
LL |     async fn foo2(&mut self, u: &mut i32, v: &mut u32) {
   |                                              ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:358:1
   |
LL | impl MutSelfTrait for MutSelf {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:360:5
   |
LL |     fn mut_self(&mut self) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:360:5
   |
LL |     fn mut_self(&mut self) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:360:22
   |
LL |     fn mut_self(&mut self) {}
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:360:17
   |
LL |     fn mut_self(&mut self) {}
   |                 ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:364:1
   |
LL | fn _empty_tup(x: &mut (())) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:364:1
   |
LL | fn _empty_tup(x: &mut (())) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:364:1
   |
LL | fn _empty_tup(x: &mut (())) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:364:15
   |
LL | fn _empty_tup(x: &mut (())) {}
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:364:18
   |
LL | fn _empty_tup(x: &mut (())) {}
   |                  ^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:366:1
   |
LL | fn _single_tup(x: &mut ((i32,))) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:366:1
   |
LL | fn _single_tup(x: &mut ((i32,))) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:366:1
   |
LL | fn _single_tup(x: &mut ((i32,))) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:366:16
   |
LL | fn _single_tup(x: &mut ((i32,))) {}
   |                ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:366:19
   |
LL | fn _single_tup(x: &mut ((i32,))) {}
   |                   ^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:368:1
   |
LL | fn _multi_tup(x: &mut ((i32, u32))) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:368:1
   |
LL | fn _multi_tup(x: &mut ((i32, u32))) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:368:1
   |
LL | fn _multi_tup(x: &mut ((i32, u32))) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:368:15
   |
LL | fn _multi_tup(x: &mut ((i32, u32))) {}
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:368:18
   |
LL | fn _multi_tup(x: &mut ((i32, u32))) {}
   |                  ^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:370:1
   |
LL | fn _fn(x: &mut (fn())) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:370:1
   |
LL | fn _fn(x: &mut (fn())) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:370:1
   |
LL | fn _fn(x: &mut (fn())) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:370:8
   |
LL | fn _fn(x: &mut (fn())) {}
   |        ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:370:11
   |
LL | fn _fn(x: &mut (fn())) {}
   |           ^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:373:1
   |
LL | fn _extern_rust_fn(x: &mut extern "Rust" fn()) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:373:1
   |
LL | fn _extern_rust_fn(x: &mut extern "Rust" fn()) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:373:1
   |
LL | fn _extern_rust_fn(x: &mut extern "Rust" fn()) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:373:20
   |
LL | fn _extern_rust_fn(x: &mut extern "Rust" fn()) {}
   |                    ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:373:23
   |
LL | fn _extern_rust_fn(x: &mut extern "Rust" fn()) {}
   |                       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:375:1
   |
LL | fn _extern_c_fn(x: &mut extern "C" fn()) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:375:1
   |
LL | fn _extern_c_fn(x: &mut extern "C" fn()) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:375:1
   |
LL | fn _extern_c_fn(x: &mut extern "C" fn()) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:375:17
   |
LL | fn _extern_c_fn(x: &mut extern "C" fn()) {}
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:375:20
   |
LL | fn _extern_c_fn(x: &mut extern "C" fn()) {}
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:377:1
   |
LL | fn _unsafe_fn(x: &mut unsafe fn()) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:377:1
   |
LL | fn _unsafe_fn(x: &mut unsafe fn()) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:377:1
   |
LL | fn _unsafe_fn(x: &mut unsafe fn()) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:377:15
   |
LL | fn _unsafe_fn(x: &mut unsafe fn()) {}
   |               ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:377:18
   |
LL | fn _unsafe_fn(x: &mut unsafe fn()) {}
   |                  ^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:379:1
   |
LL | fn _unsafe_extern_fn(x: &mut unsafe extern "C" fn()) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:379:1
   |
LL | fn _unsafe_extern_fn(x: &mut unsafe extern "C" fn()) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:379:1
   |
LL | fn _unsafe_extern_fn(x: &mut unsafe extern "C" fn()) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:379:22
   |
LL | fn _unsafe_extern_fn(x: &mut unsafe extern "C" fn()) {}
   |                      ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:379:25
   |
LL | fn _unsafe_extern_fn(x: &mut unsafe extern "C" fn()) {}
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:381:1
   |
LL | fn _fn_with_arg(x: &mut unsafe extern "C" fn(i32)) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:381:1
   |
LL | fn _fn_with_arg(x: &mut unsafe extern "C" fn(i32)) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:381:1
   |
LL | fn _fn_with_arg(x: &mut unsafe extern "C" fn(i32)) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:381:17
   |
LL | fn _fn_with_arg(x: &mut unsafe extern "C" fn(i32)) {}
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:381:20
   |
LL | fn _fn_with_arg(x: &mut unsafe extern "C" fn(i32)) {}
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:383:1
   |
LL | fn _fn_with_ret(x: &mut unsafe extern "C" fn() -> (i32)) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:383:1
   |
LL | fn _fn_with_ret(x: &mut unsafe extern "C" fn() -> (i32)) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:383:1
   |
LL | fn _fn_with_ret(x: &mut unsafe extern "C" fn() -> (i32)) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/needless_pass_by_ref_mut.rs:383:17
   |
LL | fn _fn_with_ret(x: &mut unsafe extern "C" fn() -> (i32)) {}
   |                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:383:20
   |
LL | fn _fn_with_ret(x: &mut unsafe extern "C" fn() -> (i32)) {}
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: item must be `pub`
  --> tests/ui/needless_pass_by_ref_mut.rs:386:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:386:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/needless_pass_by_ref_mut.rs:386:1
   |
LL | fn main() {
   | ^

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:389:9
   |
LL |     foo(&mut v, &0, &mut u);
   |         ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:389:17
   |
LL |     foo(&mut v, &0, &mut u);
   |                 ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:389:21
   |
LL |     foo(&mut v, &0, &mut u);
   |                     ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:390:10
   |
LL |     foo2(&mut v);
   |          ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:391:10
   |
LL |     foo3(&mut v);
   |          ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:392:10
   |
LL |     foo4(&mut v);
   |          ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:393:10
   |
LL |     foo5(&mut v);
   |          ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:394:17
   |
LL |     alias_check(&mut v);
   |                 ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:395:18
   |
LL |     alias_check2(&mut v);
   |                  ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:400:15
   |
LL |     let _: fn(&mut u32) = passed_as_local;
   |               ^^^^^^^^
   |
   = help: use a raw pointer instead: `*raw`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:402:13
   |
LL |     pub_foo(&mut v, &0, &mut u);
   |             ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:402:21
   |
LL |     pub_foo(&mut v, &0, &mut u);
   |                     ^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/needless_pass_by_ref_mut.rs:402:25
   |
LL |     pub_foo(&mut v, &0, &mut u);
   |                         ^^^^^^
   |
   = help: use a raw borrowing instead: `&raw mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 380 previous errors

