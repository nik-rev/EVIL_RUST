error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/if_same_then_else2.rs:14:1
   |
LL | fn if_same_then_else2() -> Result<&'static str, ()> {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/if_same_then_else2.rs:14:1
   |
LL | fn if_same_then_else2() -> Result<&'static str, ()> {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/if_same_then_else2.rs:14:1
   |
LL | fn if_same_then_else2() -> Result<&'static str, ()> {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:14:35
   |
LL | fn if_same_then_else2() -> Result<&'static str, ()> {
   |                                   ^^^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:16:18
   |
LL |         for _ in &[42] {
   |                  ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:17:17
   |
LL |             let foo: &Option<_> = &Some::<u8>(42);
   |                 ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:17:22
   |
LL |             let foo: &Option<_> = &Some::<u8>(42);
   |                      ^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:17:35
   |
LL |             let foo: &Option<_> = &Some::<u8>(42);
   |                                   ^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:25:18
   |
LL |         for _ in &[42] {
   |                  ^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:26:17
   |
LL |             let bar: &Option<_> = &Some::<u8>(42);
   |                 ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:26:22
   |
LL |             let bar: &Option<_> = &Some::<u8>(42);
   |                      ^^^^^^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:26:35
   |
LL |             let bar: &Option<_> = &Some::<u8>(42);
   |                                   ^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:104:13
   |
LL |         let foo = "";
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:105:19
   |
LL |         return Ok(&foo[0..]);
   |                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:107:13
   |
LL |         let foo = "bar";
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:108:19
   |
LL |         return Ok(&foo[0..]);
   |                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:110:13
   |
LL |         let foo = "";
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:111:19
   |
LL |         return Ok(&foo[0..]);
   |                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:115:13
   |
LL |         let foo = "";
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:116:19
   |
LL |         return Ok(&foo[0..]);
   |                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:118:13
   |
LL |         let foo = "bar";
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:119:19
   |
LL |         return Ok(&foo[0..]);
   |                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:121:13
   |
LL |         let foo = "";
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:122:19
   |
LL |         return Ok(&foo[0..]);
   |                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:124:13
   |
LL |         let foo = "";
   |             ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:125:19
   |
LL |         return Ok(&foo[0..]);
   |                   ^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:131:13
   |
LL |         let foo = "";
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:132:14
   |
LL |         let (x, y) = (1, 2);
   |              ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:132:17
   |
LL |         let (x, y) = (1, 2);
   |                 ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:133:19
   |
LL |         return Ok(&foo[x..y]);
   |                   ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:135:13
   |
LL |         let foo = "";
   |             ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:136:14
   |
LL |         let (y, x) = (1, 2);
   |              ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/if_same_then_else2.rs:136:17
   |
LL |         let (y, x) = (1, 2);
   |                 ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/if_same_then_else2.rs:137:19
   |
LL |         return Ok(&foo[x..y]);
   |                   ^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: item must be `pub`
  --> tests/ui/if_same_then_else2.rs:158:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/if_same_then_else2.rs:158:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/if_same_then_else2.rs:158:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 39 previous errors

