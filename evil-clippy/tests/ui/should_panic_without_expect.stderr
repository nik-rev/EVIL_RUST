error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/should_panic_without_expect.rs:7:1
   |
LL | #[test]
   | ------- in this procedural macro expansion
...
LL | fn no_message() {}
   | ^
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/should_panic_without_expect.rs:7:1
   |
LL | fn no_message() {}
   | ^ help: make this item public: `pub`

error: #[should_panic] attribute without a reason
  --> tests/ui/should_panic_without_expect.rs:5:1
   |
LL | #[should_panic]
   | ^^^^^^^^^^^^^^^ help: consider specifying the expected panic: `#[should_panic(expected = /* panic message */)]`
   |
note: the lint level is defined here
  --> tests/ui/should_panic_without_expect.rs:2:9
   |
LL | #![deny(clippy::should_panic_without_expect)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: function must be `unsafe`
  --> tests/ui/should_panic_without_expect.rs:7:1
   |
LL | fn no_message() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_panic_without_expect.rs:7:1
   |
LL | fn no_message() {}
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/should_panic_without_expect.rs:16:1
   |
LL | #[test]
   | ------- in this procedural macro expansion
LL | #[should_panic = "message"]
LL | fn metastr() {}
   | ^

error: item must be `pub`
  --> tests/ui/should_panic_without_expect.rs:16:1
   |
LL | fn metastr() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/should_panic_without_expect.rs:16:1
   |
LL | fn metastr() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_panic_without_expect.rs:16:1
   |
LL | fn metastr() {}
   | ^

error: item must be `pub`
  --> tests/ui/should_panic_without_expect.rs:20:1
   |
LL | #[test]
   | ------- in this procedural macro expansion
LL | #[should_panic(expected = "message")]
LL | fn metalist() {}
   | ^

error: item must be `pub`
  --> tests/ui/should_panic_without_expect.rs:20:1
   |
LL | fn metalist() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/should_panic_without_expect.rs:20:1
   |
LL | fn metalist() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_panic_without_expect.rs:20:1
   |
LL | fn metalist() {}
   | ^

error: item must be `pub`
  --> tests/ui/should_panic_without_expect.rs:22:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/should_panic_without_expect.rs:22:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/should_panic_without_expect.rs:22:1
   |
LL | fn main() {}
   | ^

error: function must be `unsafe`
   |
   = help: make this function unsafe: `unsafe`

error: references are not allowed
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/should_panic_without_expect.rs:20:1
   |
LL | #[test]
   | ------- in this procedural macro expansion
LL | #[should_panic(expected = "message")]
LL | fn metalist() {}
   | ^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/should_panic_without_expect.rs:16:1
   |
LL | #[test]
   | ------- in this procedural macro expansion
LL | #[should_panic = "message"]
LL | fn metastr() {}
   | ^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: references are not allowed
  --> tests/ui/should_panic_without_expect.rs:7:1
   |
LL | #[test]
   | ------- in this procedural macro expansion
...
LL | fn no_message() {}
   | ^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 21 previous errors

