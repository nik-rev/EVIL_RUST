error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/functions.rs:4:1
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:4:1
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:4:1
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: parameter must be `mut`
  --> tests/ui/functions.rs:4:9
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |         ^ help: make this parameter mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:4:20
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                    ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:4:31
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                               ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:4:45
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:4:58
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:4:70
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                                      ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:4:81
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                                                 ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:4:39
   |
LL | fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                       ^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/functions.rs:6:1
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:6:1
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:6:1
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   | ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:6:8
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:6:19
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                   ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:6:30
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:6:44
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:6:57
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                         ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:6:69
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:6:80
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:6:94
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                                              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:6:38
   |
LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                      ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/functions.rs:10:1
   |
LL | fn bad_multiline(
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:10:1
   |
LL | fn bad_multiline(
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:10:1
   |
LL | fn bad_multiline(
   | ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:13:5
   |
LL |     one: u32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:14:5
   |
LL |     two: u32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:15:5
   |
LL |     three: &str,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:16:5
   |
LL |     four: bool,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:17:5
   |
LL |     five: f32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:18:5
   |
LL |     six: f32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:19:5
   |
LL |     seven: bool,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:20:5
   |
LL |     eight: ()
   |     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:15:12
   |
LL |     three: &str,
   |            ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: variable must be `mut`
  --> tests/ui/functions.rs:22:9
   |
LL |     let _one = one;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/functions.rs:23:9
   |
LL |     let _two = two;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/functions.rs:24:9
   |
LL |     let _three = three;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/functions.rs:25:9
   |
LL |     let _four = four;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/functions.rs:26:9
   |
LL |     let _five = five;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/functions.rs:27:9
   |
LL |     let _six = six;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/functions.rs:28:9
   |
LL |     let _seven = seven;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/functions.rs:32:1
   |
LL | extern "C" fn extern_fn(
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:32:1
   |
LL | extern "C" fn extern_fn(
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:32:1
   |
LL | extern "C" fn extern_fn(
   | ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:33:5
   |
LL |     _one: u32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:34:5
   |
LL |     _two: u32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:35:5
   |
LL |     _three: *const u8,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:36:5
   |
LL |     _four: bool,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:37:5
   |
LL |     _five: f32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:38:5
   |
LL |     _six: f32,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:39:5
   |
LL |     _seven: bool,
   |     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:40:5
   |
LL |     _eight: *const std::ffi::c_void,
   |     ^ help: make this parameter mutable: `mut`

error: trait must be `unsafe`
  --> tests/ui/functions.rs:44:1
   |
LL | / pub trait Foo {
LL | |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
LL | |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
...  |
LL | |     fn ptr(p: *const u8);
LL | | }
   | |_^
   |
   = help: make this trait unsafe: `unsafe trait`

error: function must be `unsafe`
  --> tests/ui/functions.rs:45:5
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:45:5
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:45:13
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:45:24
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:45:35
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |                                   ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:45:49
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |                                                 ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:45:62
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |                                                              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:45:74
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |                                                                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:45:85
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |                                                                                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:45:43
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);
   |                                           ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/functions.rs:46:5
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:46:5
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:46:12
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:46:23
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |                       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:46:34
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |                                  ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:46:48
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |                                                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:46:61
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |                                                             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:46:73
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |                                                                         ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:46:84
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |                                                                                    ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:46:98
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |                                                                                                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:46:42
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());
   |                                          ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/functions.rs:49:5
   |
LL |     fn ptr(p: *const u8);
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:49:5
   |
LL |     fn ptr(p: *const u8);
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:49:12
   |
LL |     fn ptr(p: *const u8);
   |            ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/functions.rs:54:1
   |
LL | impl Bar {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:55:5
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:55:5
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:55:20
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                    ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:55:31
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                               ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:55:42
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:55:56
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:55:69
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                                     ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:55:81
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                                                 ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:55:92
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                                                            ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:55:50
   |
LL |     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                  ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/functions.rs:56:5
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:56:5
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:56:19
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                   ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:56:30
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:56:41
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                         ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:56:55
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:56:68
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                    ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:56:80
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:56:91
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                                           ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:56:105
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                                                         ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:56:49
   |
LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                 ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/functions.rs:61:1
   |
LL | impl Foo for Bar {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:62:5
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:62:5
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:62:13
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:62:24
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                        ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:62:35
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                   ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:62:49
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                 ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:62:62
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                              ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:62:74
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                                          ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:62:85
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                                                                     ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:62:43
   |
LL |     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}
   |                                           ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/functions.rs:63:5
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:63:5
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:63:12
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:63:23
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                       ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:63:34
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                  ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:63:48
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:63:61
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                             ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:63:73
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                         ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:63:84
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                                    ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:63:98
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                                                                                  ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/functions.rs:63:42
   |
LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}
   |                                          ^^^^
   |
   = help: use a raw pointer instead: `*const`

error: function must be `unsafe`
  --> tests/ui/functions.rs:65:5
   |
LL |     fn ptr(p: *const u8) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:65:5
   |
LL |     fn ptr(p: *const u8) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:65:12
   |
LL |     fn ptr(p: *const u8) {
   |            ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/functions.rs:79:1
   |
LL | fn private(p: *const u8) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:79:1
   |
LL | fn private(p: *const u8) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:79:1
   |
LL | fn private(p: *const u8) {
   | ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:79:12
   |
LL | fn private(p: *const u8) {
   |            ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/functions.rs:83:5
   |
LL | pub fn public(p: *const u8) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:83:5
   |
LL | pub fn public(p: *const u8) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:83:15
   |
LL | pub fn public(p: *const u8) {
   |               ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/functions.rs:94:1
   |
LL | type Alias = *const u8;
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:96:5
   |
LL | pub fn type_alias(p: Alias) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:96:5
   |
LL | pub fn type_alias(p: Alias) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:96:19
   |
LL | pub fn type_alias(p: Alias) {
   |                   ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/functions.rs:107:1
   |
LL | impl Bar {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:108:5
   |
LL |     fn private(self, p: *const u8) {
   |     ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:108:5
   |
LL |     fn private(self, p: *const u8) {
   |     ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:108:16
   |
LL |     fn private(self, p: *const u8) {
   |                ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:108:22
   |
LL |     fn private(self, p: *const u8) {
   |                      ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/functions.rs:112:9
   |
LL |     pub fn public(self, p: *const u8) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:112:9
   |
LL |     pub fn public(self, p: *const u8) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:112:19
   |
LL |     pub fn public(self, p: *const u8) {
   |                   ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:112:25
   |
LL |     pub fn public(self, p: *const u8) {
   |                         ^ help: make this parameter mutable: `mut`

error: function must be `unsafe`
  --> tests/ui/functions.rs:123:9
   |
LL |     pub fn public_ok(self, p: *const u8) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:123:9
   |
LL |     pub fn public_ok(self, p: *const u8) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/functions.rs:123:22
   |
LL |     pub fn public_ok(self, p: *const u8) {
   |                      ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:123:28
   |
LL |     pub fn public_ok(self, p: *const u8) {
   |                            ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:129:33
   |
LL |     pub unsafe fn public_unsafe(self, p: *const u8) {
   |                                 ^ help: make this parameter mutable: `mut`

error: parameter must be `mut`
  --> tests/ui/functions.rs:129:39
   |
LL |     pub unsafe fn public_unsafe(self, p: *const u8) {
   |                                       ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/functions.rs:135:1
   |
LL | fn main() {}
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/functions.rs:135:1
   |
LL | fn main() {}
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/functions.rs:135:1
   |
LL | fn main() {}
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 139 previous errors

