error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/reference_used.rs:3:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/reference_used.rs:3:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/reference_used.rs:3:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:4:9
   |
LL |     let x = 10;
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:5:9
   |
LL |     let y = &x;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:8:9
   |
LL |     let z = &mut 20;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:11:10
   |
LL |     let (a, ref b) = (1, 2);
   |          ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:11:17
   |
LL |     let (a, ref b) = (1, 2);
   |                 ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:14:9
   |
LL |     let c = Some(3);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:20:9
   |
LL |     let s = String::from("hello");
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:21:9
   |
LL |     let ref_s = &s;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:30:9
   |
LL |     let raw_const: *const i32 = &x;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:32:9
   |
LL |     let raw_mut: *mut i32 = &mut 100;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:39:9
   |
LL |     let raw_v1 = &raw const x;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:41:9
   |
LL |     let raw_v2 = &raw mut temp;
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:48:9
   |
LL |     let closure = |val: &i32| println!("{}", val);
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:54:9
   |
LL |     let closure_mut = |v: &mut i32| *v += 1;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/reference_used.rs:59:5
   |
LL |     struct RefStruct<'a> {
   |     ^ help: make this item public: `pub`

error: trait must be `unsafe`
  --> tests/ui/reference_used.rs:64:5
   |
LL | /     trait RefTrait {
LL | |         fn ref_method(&self);
LL | |
LL | |     }
   | |_____^
   |
   = help: make this trait unsafe: `unsafe trait`

error: item must be `pub`
  --> tests/ui/reference_used.rs:64:5
   |
LL |     trait RefTrait {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/reference_used.rs:65:9
   |
LL |         fn ref_method(&self);
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/reference_used.rs:65:9
   |
LL |         fn ref_method(&self);
   |         ^

error: parameter must be `mut`
  --> tests/ui/reference_used.rs:65:24
   |
LL |         fn ref_method(&self);
   |                        ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/reference_used.rs:69:5
   |
LL |     struct MyStruct;
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/reference_used.rs:70:5
   |
LL |     impl RefTrait for MyStruct {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/reference_used.rs:71:9
   |
LL |         fn ref_method(&self) {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/reference_used.rs:71:9
   |
LL |         fn ref_method(&self) {
   |         ^

error: parameter must be `mut`
  --> tests/ui/reference_used.rs:71:24
   |
LL |         fn ref_method(&self) {
   |                        ^ help: make this parameter mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:78:9
   |
LL |     let arr: [&i32; 2] = [
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/reference_used.rs:87:9
   |
LL |     let tup: (
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/reference_used.rs:100:1
   |
LL | fn takes_ref(val: &i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/reference_used.rs:100:1
   |
LL | fn takes_ref(val: &i32) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/reference_used.rs:100:1
   |
LL | fn takes_ref(val: &i32) {
   | ^

error: parameter must be `mut`
  --> tests/ui/reference_used.rs:100:14
   |
LL | fn takes_ref(val: &i32) {
   |              ^ help: make this parameter mutable: `mut`

error: item must be `pub`
  --> tests/ui/reference_used.rs:105:1
   |
LL | fn takes_mut_ref(val: &mut i32) {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/reference_used.rs:105:1
   |
LL | fn takes_mut_ref(val: &mut i32) {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/reference_used.rs:105:1
   |
LL | fn takes_mut_ref(val: &mut i32) {
   | ^

error: parameter must be `mut`
  --> tests/ui/reference_used.rs:105:18
   |
LL | fn takes_mut_ref(val: &mut i32) {
   |                  ^ help: make this parameter mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 37 previous errors

