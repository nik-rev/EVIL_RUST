error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/manual_str_repeat.rs:7:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/manual_str_repeat.rs:7:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_str_repeat.rs:7:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/manual_str_repeat.rs:17:9
   |
LL |     let x = "test";
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/manual_str_repeat.rs:18:9
   |
LL |     let count = 10;
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_str_repeat.rs:22:5
   |
LL |     macro_rules! m {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/manual_str_repeat.rs:28:9
   |
LL |     let x = &x;
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_str_repeat.rs:28:13
   |
LL |     let x = &x;
   |             ^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`

error: item must be `pub`
  --> tests/ui/manual_str_repeat.rs:32:5
   |
LL |     macro_rules! repeat_m {
   |     ^ help: make this item public: `pub`

error: variable must be `mut`
  --> tests/ui/manual_str_repeat.rs:38:9
   |
LL |     let x: Box<str> = Box::from("test");
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_str_repeat.rs:43:5
   |
LL |     struct S;
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/manual_str_repeat.rs:42:14
   |
LL |     #[derive(Clone)]
   |              ^

error: function must be `unsafe`
  --> tests/ui/manual_str_repeat.rs:42:11
   |
LL |     #[derive(Clone)]
   |           ^  ----- in this derive macro expansion
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_str_repeat.rs:42:11
   |
LL |     #[derive(Clone)]
   |           ^  ----- in this derive macro expansion

error: parameter must be `mut`
  --> tests/ui/manual_str_repeat.rs:42:14
   |
LL |     #[derive(Clone)]
   |              ^ help: make this parameter mutable: `mut`

error: references are not allowed
  --> tests/ui/manual_str_repeat.rs:42:14
   |
LL |     #[derive(Clone)]
   |              ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/manual_str_repeat.rs:44:5
   |
LL |     impl FromIterator<Box<S>> for String {
   |     ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_str_repeat.rs:45:9
   |
LL |         fn from_iter<T: IntoIterator<Item = Box<S>>>(_: T) -> Self {
   |         ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_str_repeat.rs:45:9
   |
LL |         fn from_iter<T: IntoIterator<Item = Box<S>>>(_: T) -> Self {
   |         ^

error: variable must be `mut`
  --> tests/ui/manual_str_repeat.rs:55:9
   |
LL |     let x = "x".to_owned();
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/manual_str_repeat.rs:59:9
   |
LL |     let x = 'x';
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/manual_str_repeat.rs:65:1
   |
LL | fn _msrv_1_15() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_str_repeat.rs:65:1
   |
LL | fn _msrv_1_15() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_str_repeat.rs:65:1
   |
LL | fn _msrv_1_15() {
   | ^

error: item must be `pub`
  --> tests/ui/manual_str_repeat.rs:71:1
   |
LL | fn _msrv_1_16() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/manual_str_repeat.rs:71:1
   |
LL | fn _msrv_1_16() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/manual_str_repeat.rs:71:1
   |
LL | fn _msrv_1_16() {
   | ^

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 26 previous errors

