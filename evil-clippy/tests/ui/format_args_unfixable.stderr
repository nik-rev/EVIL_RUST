error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:9:1
   |
LL | macro_rules! my_macro {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:16:1
   |
LL | macro_rules! my_other_macro {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:22:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/format_args_unfixable.rs:22:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/format_args_unfixable.rs:22:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: variable must be `mut`
  --> tests/ui/format_args_unfixable.rs:23:9
   |
LL |     let error = Error::other("bad thing");
   |         ^ help: make this variable mutable: `mut`
   |
   = note: requested on the command line with `-D clippy::missing-mut`

error: variable must be `mut`
  --> tests/ui/format_args_unfixable.rs:24:9
   |
LL |     let x = 'x';
   |         ^ help: make this variable mutable: `mut`

error: references are not allowed
  --> tests/ui/format_args_unfixable.rs:77:5
   |
LL |     assert_eq!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: requested on the command line with `-D clippy::reference-used`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/format_args_unfixable.rs:77:5
   |
LL |     assert_eq!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/format_args_unfixable.rs:77:5
   |
LL |     assert_eq!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/format_args_unfixable.rs:77:5
   |
LL |     assert_eq!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/format_args_unfixable.rs:77:5
   |
LL |     assert_eq!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/format_args_unfixable.rs:80:5
   |
LL |     assert_ne!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_ne` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/format_args_unfixable.rs:80:5
   |
LL |     assert_ne!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_ne` (in Nightly builds, run with -Z macro-backtrace for more info)

error: variable must be `mut`
  --> tests/ui/format_args_unfixable.rs:80:5
   |
LL |     assert_ne!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `assert_ne` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/format_args_unfixable.rs:80:5
   |
LL |     assert_ne!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_ne` (in Nightly builds, run with -Z macro-backtrace for more info)

error: references are not allowed
  --> tests/ui/format_args_unfixable.rs:80:5
   |
LL |     assert_ne!(0, 0, "error: {}", format!("something failed at {}", Location::caller()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use a raw borrowing instead: `&raw const`
   = note: this error originates in the macro `assert_ne` (in Nightly builds, run with -Z macro-backtrace for more info)

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:95:1
   |
LL | macro_rules! _internal {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:101:1
   |
LL | macro_rules! my_println2 {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:109:1
   |
LL | macro_rules! my_println2_args {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:117:1
   |
LL | fn test2() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/format_args_unfixable.rs:117:1
   |
LL | fn test2() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/format_args_unfixable.rs:117:1
   |
LL | fn test2() {
   | ^

error: variable must be `mut`
  --> tests/ui/format_args_unfixable.rs:118:9
   |
LL |     let error = Error::other("bad thing");
   |         ^ help: make this variable mutable: `mut`

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:139:1
   |
LL | macro_rules! usr_println {
   | ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/format_args_unfixable.rs:147:1
   |
LL | fn user_format() {
   | ^ help: make this item public: `pub`

error: function must be `unsafe`
  --> tests/ui/format_args_unfixable.rs:147:1
   |
LL | fn user_format() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/format_args_unfixable.rs:147:1
   |
LL | fn user_format() {
   | ^

error: variable must be `mut`
  --> tests/ui/format_args_unfixable.rs:148:9
   |
LL |     let error = Error::other("bad thing");
   |         ^ help: make this variable mutable: `mut`

error: variable must be `mut`
  --> tests/ui/format_args_unfixable.rs:149:9
   |
LL |     let x = 'x';
   |         ^ help: make this variable mutable: `mut`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 31 previous errors

