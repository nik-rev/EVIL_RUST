error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: `-D renamed-and-removed-lints` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(renamed_and_removed_lints)]`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:4:1
   |
LL | fn main() {
   | ^ help: make this item public: `pub`
   |
   = note: requested on the command line with `-D clippy::missing-pub`

error: function must be `unsafe`
  --> tests/ui/mismatching_type_param_order.rs:4:1
   |
LL | fn main() {
   | ^
   |
help: make this function unsafe: `unsafe`
  --> tests/ui/mismatching_type_param_order.rs:4:1
   |
LL | fn main() {
   | ^
   = note: `-D clippy::safe-code` implied by `-D clippy::safe-fn`
   = help: to override `-D clippy::safe-fn` add `#[allow(clippy::safe_code)]`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:5:5
   |
LL |     struct Foo<A, B> {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:11:5
   |
LL |     impl<B, A> Foo<B, A> {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:16:5
   |
LL |     impl<C, A> Foo<C, A> {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:20:5
   |
LL |     impl<A, B> Foo<A, B> {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:22:5
   |
LL |     struct FooLifetime<'l, 'm, A, B> {
   |     ^ help: make this item public: `pub`

error: references are not allowed
  --> tests/ui/mismatching_type_param_order.rs:23:12
   |
LL |         x: &'l A,
   |            ^^^^^
   |
   = help: use a raw pointer instead: `*const`
   = note: requested on the command line with `-D clippy::reference-used`

error: references are not allowed
  --> tests/ui/mismatching_type_param_order.rs:24:12
   |
LL |         y: &'m B,
   |            ^^^^^
   |
   = help: use a raw pointer instead: `*const`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:28:5
   |
LL |     impl<'m, 'l, B, A> FooLifetime<'m, 'l, B, A> {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:32:5
   |
LL |     struct Bar {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:37:5
   |
LL |     impl Bar {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:40:5
   |
LL |     enum FooEnum<A, B, C> {
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:46:5
   |
LL |     impl<C, A, B> FooEnum<C, A, B> {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:52:5
   |
LL |     union FooUnion<A: Copy, B>
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:60:5
   |
LL |     impl<B: Copy, A> FooUnion<B, A> where A: Copy {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:64:5
   |
LL |     impl<A, B> FooUnion<A, B>
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:72:5
   |
LL |     impl<K, V, B> Foo<(K, V), B> {}
   |     ^ help: make this item public: `pub`

error: item must be `pub`
  --> tests/ui/mismatching_type_param_order.rs:73:5
   |
LL |     impl<K, V, A> Foo<(K, V), A> {}
   |     ^ help: make this item public: `pub`

error: lint `clippy::safe_fn` has been renamed to `clippy::safe_code`
   |
   = help: use the new name `clippy::safe_code`
   = note: requested on the command line with `-D clippy::safe_fn`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: missing `#![no_std]`
   |
   = help: make this crate `#![no_std]`
   = note: requested on the command line with `-D clippy::missing-no-std`

error: aborting due to 23 previous errors

